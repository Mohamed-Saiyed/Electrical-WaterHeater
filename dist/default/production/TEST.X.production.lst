

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Jul 24 19:42:06 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text65,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    88                           	dabs	1,0x7E,2
    89  0000                     
    90                           ; Version 2.20
    91                           ; Generated 12/02/2020 GMT
    92                           ; 
    93                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution.
   107                           ; 
   108                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   109                           ;        software without specific prior written permission.
   110                           ; 
   111                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   112                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   113                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   114                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   115                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   116                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   117                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   118                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   119                           ; 
   120                           ; 
   121                           ; Code-generator required, PIC16F877A Definitions
   122                           ; 
   123                           ; SFR Addresses
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000E                     	;# 
   200  000F                     	;# 
   201  0010                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0013                     	;# 
   205  0014                     	;# 
   206  0015                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001D                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  0081                     	;# 
   220  0085                     	;# 
   221  0086                     	;# 
   222  0087                     	;# 
   223  0088                     	;# 
   224  0089                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0000                     	;# 
   365  0001                     	;# 
   366  0002                     	;# 
   367  0003                     	;# 
   368  0004                     	;# 
   369  0005                     	;# 
   370  0006                     	;# 
   371  0007                     	;# 
   372  0008                     	;# 
   373  0009                     	;# 
   374  000A                     	;# 
   375  000B                     	;# 
   376  000C                     	;# 
   377  000D                     	;# 
   378  000E                     	;# 
   379  000E                     	;# 
   380  000F                     	;# 
   381  0010                     	;# 
   382  0011                     	;# 
   383  0012                     	;# 
   384  0013                     	;# 
   385  0014                     	;# 
   386  0015                     	;# 
   387  0015                     	;# 
   388  0016                     	;# 
   389  0017                     	;# 
   390  0018                     	;# 
   391  0019                     	;# 
   392  001A                     	;# 
   393  001B                     	;# 
   394  001B                     	;# 
   395  001C                     	;# 
   396  001D                     	;# 
   397  001E                     	;# 
   398  001F                     	;# 
   399  0081                     	;# 
   400  0085                     	;# 
   401  0086                     	;# 
   402  0087                     	;# 
   403  0088                     	;# 
   404  0089                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  008E                     	;# 
   408  0091                     	;# 
   409  0092                     	;# 
   410  0093                     	;# 
   411  0094                     	;# 
   412  0098                     	;# 
   413  0099                     	;# 
   414  009C                     	;# 
   415  009D                     	;# 
   416  009E                     	;# 
   417  009F                     	;# 
   418  010C                     	;# 
   419  010D                     	;# 
   420  010E                     	;# 
   421  010F                     	;# 
   422  018C                     	;# 
   423  018D                     	;# 
   424  0000                     	;# 
   425  0001                     	;# 
   426  0002                     	;# 
   427  0003                     	;# 
   428  0004                     	;# 
   429  0005                     	;# 
   430  0006                     	;# 
   431  0007                     	;# 
   432  0008                     	;# 
   433  0009                     	;# 
   434  000A                     	;# 
   435  000B                     	;# 
   436  000C                     	;# 
   437  000D                     	;# 
   438  000E                     	;# 
   439  000E                     	;# 
   440  000F                     	;# 
   441  0010                     	;# 
   442  0011                     	;# 
   443  0012                     	;# 
   444  0013                     	;# 
   445  0014                     	;# 
   446  0015                     	;# 
   447  0015                     	;# 
   448  0016                     	;# 
   449  0017                     	;# 
   450  0018                     	;# 
   451  0019                     	;# 
   452  001A                     	;# 
   453  001B                     	;# 
   454  001B                     	;# 
   455  001C                     	;# 
   456  001D                     	;# 
   457  001E                     	;# 
   458  001F                     	;# 
   459  0081                     	;# 
   460  0085                     	;# 
   461  0086                     	;# 
   462  0087                     	;# 
   463  0088                     	;# 
   464  0089                     	;# 
   465  008C                     	;# 
   466  008D                     	;# 
   467  008E                     	;# 
   468  0091                     	;# 
   469  0092                     	;# 
   470  0093                     	;# 
   471  0094                     	;# 
   472  0098                     	;# 
   473  0099                     	;# 
   474  009C                     	;# 
   475  009D                     	;# 
   476  009E                     	;# 
   477  009F                     	;# 
   478  010C                     	;# 
   479  010D                     	;# 
   480  010E                     	;# 
   481  010F                     	;# 
   482  018C                     	;# 
   483  018D                     	;# 
   484  0000                     	;# 
   485  0001                     	;# 
   486  0002                     	;# 
   487  0003                     	;# 
   488  0004                     	;# 
   489  0005                     	;# 
   490  0006                     	;# 
   491  0007                     	;# 
   492  0008                     	;# 
   493  0009                     	;# 
   494  000A                     	;# 
   495  000B                     	;# 
   496  000C                     	;# 
   497  000D                     	;# 
   498  000E                     	;# 
   499  000E                     	;# 
   500  000F                     	;# 
   501  0010                     	;# 
   502  0011                     	;# 
   503  0012                     	;# 
   504  0013                     	;# 
   505  0014                     	;# 
   506  0015                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0017                     	;# 
   510  0018                     	;# 
   511  0019                     	;# 
   512  001A                     	;# 
   513  001B                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  001D                     	;# 
   517  001E                     	;# 
   518  001F                     	;# 
   519  0081                     	;# 
   520  0085                     	;# 
   521  0086                     	;# 
   522  0087                     	;# 
   523  0088                     	;# 
   524  0089                     	;# 
   525  008C                     	;# 
   526  008D                     	;# 
   527  008E                     	;# 
   528  0091                     	;# 
   529  0092                     	;# 
   530  0093                     	;# 
   531  0094                     	;# 
   532  0098                     	;# 
   533  0099                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009E                     	;# 
   537  009F                     	;# 
   538  010C                     	;# 
   539  010D                     	;# 
   540  010E                     	;# 
   541  010F                     	;# 
   542  018C                     	;# 
   543  018D                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000D                     	;# 
   558  000E                     	;# 
   559  000E                     	;# 
   560  000F                     	;# 
   561  0010                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0014                     	;# 
   566  0015                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0017                     	;# 
   570  0018                     	;# 
   571  0019                     	;# 
   572  001A                     	;# 
   573  001B                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  001D                     	;# 
   577  001E                     	;# 
   578  001F                     	;# 
   579  0081                     	;# 
   580  0085                     	;# 
   581  0086                     	;# 
   582  0087                     	;# 
   583  0088                     	;# 
   584  0089                     	;# 
   585  008C                     	;# 
   586  008D                     	;# 
   587  008E                     	;# 
   588  0091                     	;# 
   589  0092                     	;# 
   590  0093                     	;# 
   591  0094                     	;# 
   592  0098                     	;# 
   593  0099                     	;# 
   594  009C                     	;# 
   595  009D                     	;# 
   596  009E                     	;# 
   597  009F                     	;# 
   598  010C                     	;# 
   599  010D                     	;# 
   600  010E                     	;# 
   601  010F                     	;# 
   602  018C                     	;# 
   603  018D                     	;# 
   604  0000                     	;# 
   605  0001                     	;# 
   606  0002                     	;# 
   607  0003                     	;# 
   608  0004                     	;# 
   609  0005                     	;# 
   610  0006                     	;# 
   611  0007                     	;# 
   612  0008                     	;# 
   613  0009                     	;# 
   614  000A                     	;# 
   615  000B                     	;# 
   616  000C                     	;# 
   617  000D                     	;# 
   618  000E                     	;# 
   619  000E                     	;# 
   620  000F                     	;# 
   621  0010                     	;# 
   622  0011                     	;# 
   623  0012                     	;# 
   624  0013                     	;# 
   625  0014                     	;# 
   626  0015                     	;# 
   627  0015                     	;# 
   628  0016                     	;# 
   629  0017                     	;# 
   630  0018                     	;# 
   631  0019                     	;# 
   632  001A                     	;# 
   633  001B                     	;# 
   634  001B                     	;# 
   635  001C                     	;# 
   636  001D                     	;# 
   637  001E                     	;# 
   638  001F                     	;# 
   639  0081                     	;# 
   640  0085                     	;# 
   641  0086                     	;# 
   642  0087                     	;# 
   643  0088                     	;# 
   644  0089                     	;# 
   645  008C                     	;# 
   646  008D                     	;# 
   647  008E                     	;# 
   648  0091                     	;# 
   649  0092                     	;# 
   650  0093                     	;# 
   651  0094                     	;# 
   652  0098                     	;# 
   653  0099                     	;# 
   654  009C                     	;# 
   655  009D                     	;# 
   656  009E                     	;# 
   657  009F                     	;# 
   658  010C                     	;# 
   659  010D                     	;# 
   660  010E                     	;# 
   661  010F                     	;# 
   662  018C                     	;# 
   663  018D                     	;# 
   664  0000                     	;# 
   665  0001                     	;# 
   666  0002                     	;# 
   667  0003                     	;# 
   668  0004                     	;# 
   669  0005                     	;# 
   670  0006                     	;# 
   671  0007                     	;# 
   672  0008                     	;# 
   673  0009                     	;# 
   674  000A                     	;# 
   675  000B                     	;# 
   676  000C                     	;# 
   677  000D                     	;# 
   678  000E                     	;# 
   679  000E                     	;# 
   680  000F                     	;# 
   681  0010                     	;# 
   682  0011                     	;# 
   683  0012                     	;# 
   684  0013                     	;# 
   685  0014                     	;# 
   686  0015                     	;# 
   687  0015                     	;# 
   688  0016                     	;# 
   689  0017                     	;# 
   690  0018                     	;# 
   691  0019                     	;# 
   692  001A                     	;# 
   693  001B                     	;# 
   694  001B                     	;# 
   695  001C                     	;# 
   696  001D                     	;# 
   697  001E                     	;# 
   698  001F                     	;# 
   699  0081                     	;# 
   700  0085                     	;# 
   701  0086                     	;# 
   702  0087                     	;# 
   703  0088                     	;# 
   704  0089                     	;# 
   705  008C                     	;# 
   706  008D                     	;# 
   707  008E                     	;# 
   708  0091                     	;# 
   709  0092                     	;# 
   710  0093                     	;# 
   711  0094                     	;# 
   712  0098                     	;# 
   713  0099                     	;# 
   714  009C                     	;# 
   715  009D                     	;# 
   716  009E                     	;# 
   717  009F                     	;# 
   718  010C                     	;# 
   719  010D                     	;# 
   720  010E                     	;# 
   721  010F                     	;# 
   722  018C                     	;# 
   723  018D                     	;# 
   724  0000                     	;# 
   725  0001                     	;# 
   726  0002                     	;# 
   727  0003                     	;# 
   728  0004                     	;# 
   729  0005                     	;# 
   730  0006                     	;# 
   731  0007                     	;# 
   732  0008                     	;# 
   733  0009                     	;# 
   734  000A                     	;# 
   735  000B                     	;# 
   736  000C                     	;# 
   737  000D                     	;# 
   738  000E                     	;# 
   739  000E                     	;# 
   740  000F                     	;# 
   741  0010                     	;# 
   742  0011                     	;# 
   743  0012                     	;# 
   744  0013                     	;# 
   745  0014                     	;# 
   746  0015                     	;# 
   747  0015                     	;# 
   748  0016                     	;# 
   749  0017                     	;# 
   750  0018                     	;# 
   751  0019                     	;# 
   752  001A                     	;# 
   753  001B                     	;# 
   754  001B                     	;# 
   755  001C                     	;# 
   756  001D                     	;# 
   757  001E                     	;# 
   758  001F                     	;# 
   759  0081                     	;# 
   760  0085                     	;# 
   761  0086                     	;# 
   762  0087                     	;# 
   763  0088                     	;# 
   764  0089                     	;# 
   765  008C                     	;# 
   766  008D                     	;# 
   767  008E                     	;# 
   768  0091                     	;# 
   769  0092                     	;# 
   770  0093                     	;# 
   771  0094                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009C                     	;# 
   775  009D                     	;# 
   776  009E                     	;# 
   777  009F                     	;# 
   778  010C                     	;# 
   779  010D                     	;# 
   780  010E                     	;# 
   781  010F                     	;# 
   782  018C                     	;# 
   783  018D                     	;# 
   784  0000                     	;# 
   785  0001                     	;# 
   786  0002                     	;# 
   787  0003                     	;# 
   788  0004                     	;# 
   789  0005                     	;# 
   790  0006                     	;# 
   791  0007                     	;# 
   792  0008                     	;# 
   793  0009                     	;# 
   794  000A                     	;# 
   795  000B                     	;# 
   796  000C                     	;# 
   797  000D                     	;# 
   798  000E                     	;# 
   799  000E                     	;# 
   800  000F                     	;# 
   801  0010                     	;# 
   802  0011                     	;# 
   803  0012                     	;# 
   804  0013                     	;# 
   805  0014                     	;# 
   806  0015                     	;# 
   807  0015                     	;# 
   808  0016                     	;# 
   809  0017                     	;# 
   810  0018                     	;# 
   811  0019                     	;# 
   812  001A                     	;# 
   813  001B                     	;# 
   814  001B                     	;# 
   815  001C                     	;# 
   816  001D                     	;# 
   817  001E                     	;# 
   818  001F                     	;# 
   819  0081                     	;# 
   820  0085                     	;# 
   821  0086                     	;# 
   822  0087                     	;# 
   823  0088                     	;# 
   824  0089                     	;# 
   825  008C                     	;# 
   826  008D                     	;# 
   827  008E                     	;# 
   828  0091                     	;# 
   829  0092                     	;# 
   830  0093                     	;# 
   831  0094                     	;# 
   832  0098                     	;# 
   833  0099                     	;# 
   834  009C                     	;# 
   835  009D                     	;# 
   836  009E                     	;# 
   837  009F                     	;# 
   838  010C                     	;# 
   839  010D                     	;# 
   840  010E                     	;# 
   841  010F                     	;# 
   842  018C                     	;# 
   843  018D                     	;# 
   844                           
   845                           	psect	idataBANK0
   846  1C11                     __pidataBANK0:
   847                           
   848                           ;initializer for _Current_SSD
   849  1C11  3403               	retlw	3
   850  1C12  3400               	retlw	0
   851  1C13  3400               	retlw	0
   852  1C14  3400               	retlw	0
   853                           
   854                           ;initializer for _Current_Temp
   855  1C15  343C               	retlw	60
   856                           
   857                           ;initializer for _set_temp
   858  1C16  343C               	retlw	60
   859                           
   860                           ;initializer for _MODE
   861  1C17  3402               	retlw	2
   862                           
   863                           	psect	idataBANK3
   864  1C7A                     __pidataBANK3:
   865                           
   866                           ;initializer for _SSD_map
   867  1C7A  343F               	retlw	63
   868  1C7B  3406               	retlw	6
   869  1C7C  345B               	retlw	91
   870  1C7D  344F               	retlw	79
   871  1C7E  3466               	retlw	102
   872  1C7F  346D               	retlw	109
   873  1C80  347D               	retlw	125
   874  1C81  3407               	retlw	7
   875  1C82  347F               	retlw	127
   876  1C83  346F               	retlw	111
   877  000E                     _TMR1	set	14
   878  0006                     _PORTB	set	6
   879  0005                     _PORTA	set	5
   880  0008                     _PORTD	set	8
   881  0013                     _SSPBUF	set	19
   882  0014                     _SSPCON	set	20
   883  001E                     _ADRESH	set	30
   884  0007                     _PORTC	set	7
   885  0060                     _TMR1IF	set	96
   886  0081                     _TMR1CS	set	129
   887  005F                     _GIE	set	95
   888  005E                     _PEIE	set	94
   889  0080                     _TMR1ON	set	128
   890  0084                     _T1CKPS0	set	132
   891  0085                     _T1CKPS1	set	133
   892  0063                     _SSPIF	set	99
   893  00FA                     _GO	set	250
   894  00FB                     _CHS0	set	251
   895  00FC                     _CHS1	set	252
   896  00FD                     _CHS2	set	253
   897  00FF                     _ADCS1	set	255
   898  00F8                     _ADON	set	248
   899  0041                     _RD1	set	65
   900  0042                     _RD2	set	66
   901  0047                     _RD7	set	71
   902  0046                     _RD6	set	70
   903  0045                     _RD5	set	69
   904  0044                     _RD4	set	68
   905  0087                     _TRISC	set	135
   906  0086                     _TRISB	set	134
   907  0093                     _SSPADD	set	147
   908  0091                     _SSPCON2	set	145
   909  0094                     _SSPSTAT	set	148
   910  009E                     _ADRESL	set	158
   911  0085                     _TRISA	set	133
   912  0088                     _TRISD	set	136
   913  0460                     _TMR1IE	set	1120
   914  0489                     _RSEN	set	1161
   915  048B                     _RCEN	set	1163
   916  048E                     _ACKSTAT	set	1166
   917  048A                     _PEN	set	1162
   918  0488                     _SEN	set	1160
   919  043C                     _TRISC4	set	1084
   920  043B                     _TRISC3	set	1083
   921  04FF                     _ADFM	set	1279
   922  04F8                     _PCFG0	set	1272
   923  04F9                     _PCFG1	set	1273
   924  04FA                     _PCFG2	set	1274
   925  04FB                     _PCFG3	set	1275
   926  04FE                     _ADCS2	set	1278
   927  0441                     _TRISD1	set	1089
   928  0442                     _TRISD2	set	1090
   929                           
   930                           	psect	cinit
   931  0015                     start_initialization:	
   932                           ; #config settings
   933                           
   934  0015                     __initialization:
   935                           
   936                           ; Initialize objects allocated to BANK3
   937  0015  1783               	bsf	3,7	;select IRP bank2
   938  0016  30D7               	movlw	low (__pdataBANK3+10)
   939  0017  00FD               	movwf	btemp+-1
   940  0018  301C               	movlw	high __pidataBANK3
   941  0019  00FE               	movwf	btemp
   942  001A  307A               	movlw	low __pidataBANK3
   943  001B  00FF               	movwf	btemp+1
   944  001C  30CD               	movlw	low __pdataBANK3
   945  001D  0084               	movwf	4
   946  001E  160A  158A  24EA  120A  118A  	fcall	init_ram0
   947                           
   948                           ; Initialize objects allocated to BANK0
   949  0023  1383               	bcf	3,7	;select IRP bank0
   950  0024  3059               	movlw	low (__pdataBANK0+7)
   951  0025  00FD               	movwf	btemp+-1
   952  0026  301C               	movlw	high __pidataBANK0
   953  0027  00FE               	movwf	btemp
   954  0028  3011               	movlw	low __pidataBANK0
   955  0029  00FF               	movwf	btemp+1
   956  002A  3052               	movlw	low __pdataBANK0
   957  002B  0084               	movwf	4
   958  002C  160A  158A  24EA  120A  118A  	fcall	init_ram0
   959                           
   960                           ; Clear objects allocated to BANK3
   961  0031  1783               	bsf	3,7	;select IRP bank2
   962  0032  3090               	movlw	low __pbssBANK3
   963  0033  0084               	movwf	4
   964  0034  30BD               	movlw	low (__pbssBANK3+45)
   965  0035  160A  158A  2420  120A  118A  	fcall	clear_ram0
   966                           
   967                           ; Clear objects allocated to BANK1
   968  003A  1683               	bsf	3,5	;RP0=1, select bank1
   969  003B  1303               	bcf	3,6	;RP1=0, select bank1
   970  003C  01EE               	clrf	__pbssBANK1& (0+127)
   971  003D  01EF               	clrf	(__pbssBANK1+1)& (0+127)
   972                           
   973                           ; Clear objects allocated to BANK0
   974  003E  1383               	bcf	3,7	;select IRP bank0
   975  003F  303E               	movlw	low __pbssBANK0
   976  0040  0084               	movwf	4
   977  0041  3052               	movlw	low (__pbssBANK0+20)
   978  0042  160A  158A  2420  120A  118A  	fcall	clear_ram0
   979  0047                     end_of_initialization:	
   980                           ;End of C runtime variable initialization code
   981                           
   982  0047                     __end_of__initialization:
   983  0047  0183               	clrf	3
   984  0048  160A  158A  2C67   	ljmp	_main	;jump to C main() function
   985                           
   986                           	psect	bssBANK0
   987  003E                     __pbssBANK0:
   988  003E                     _Sleep_flag:
   989  003E                     	ds	4
   990  0042                     _Init_flag:
   991  0042                     	ds	4
   992  0046                     _ADC_read:
   993  0046                     	ds	2
   994  0048                     _CL_Flag:
   995  0048                     	ds	1
   996  0049                     _WH_FLAG:
   997  0049                     	ds	1
   998  004A                     _back_up_temp:
   999  004A                     	ds	1
  1000  004B                     _average_flag:
  1001  004B                     	ds	1
  1002  004C                     _temp_average:
  1003  004C                     	ds	1
  1004  004D                     SW_Update@SW_UPDATE:
  1005  004D                     	ds	1
  1006  004E                     _SSD_BLINK_STATE:
  1007  004E                     	ds	1
  1008  004F                     _SSD_STATE:
  1009  004F                     	ds	1
  1010  0050                     _Temperature:
  1011  0050                     	ds	1
  1012  0051                     _flag:
  1013  0051                     	ds	1
  1014                           
  1015                           	psect	dataBANK0
  1016  0052                     __pdataBANK0:
  1017  0052                     _Current_SSD:
  1018  0052                     	ds	4
  1019  0056                     _Current_Temp:
  1020  0056                     	ds	1
  1021  0057                     _set_temp:
  1022  0057                     	ds	1
  1023  0058                     _MODE:
  1024  0058                     	ds	1
  1025                           
  1026                           	psect	bssBANK1
  1027  00EE                     __pbssBANK1:
  1028  00EE                     _Timer_Update_Vlue:
  1029  00EE                     	ds	2
  1030                           
  1031                           	psect	bssBANK3
  1032  0190                     __pbssBANK3:
  1033  0190                     _SWs_Info:
  1034  0190                     	ds	9
  1035  0199                     LED_Update@Led_counter:
  1036  0199                     	ds	4
  1037  019D                     WH_Update@WH_Counter:
  1038  019D                     	ds	4
  1039  01A1                     _g_tick_count:
  1040  01A1                     	ds	4
  1041  01A5                     Tmepreture_Update@Temp_Update:
  1042  01A5                     	ds	4
  1043  01A9                     _average_temp:
  1044  01A9                     	ds	4
  1045  01AD                     _Ten_average_temp:
  1046  01AD                     	ds	4
  1047  01B1                     _voltage:
  1048  01B1                     	ds	4
  1049  01B5                     DISP_Update@DISP_Blink:
  1050  01B5                     	ds	4
  1051  01B9                     DISP_Update@DISP_Counter:
  1052  01B9                     	ds	4
  1053                           
  1054                           	psect	dataBANK3
  1055  01CD                     __pdataBANK3:
  1056  01CD                     _SSD_map:
  1057  01CD                     	ds	10
  1058                           
  1059                           	psect	inittext
  1060  1CE6                     init_fetch0:	
  1061                           ;	Called with low address in FSR and high address in W
  1062                           
  1063  1CE6  087E               	movf	btemp,w
  1064  1CE7  008A               	movwf	10
  1065  1CE8  087F               	movf	btemp+1,w
  1066  1CE9  0082               	movwf	2
  1067  1CEA                     init_ram0:	
  1068                           ;Called with:
  1069                           ;	high address of idata address in btemp 
  1070                           ;	low address of idata address in btemp+1 
  1071                           ;	low address of data in FSR
  1072                           ;	high address + 1 of data in btemp-1
  1073                           
  1074  1CEA  160A  158A  24E6  160A  158A  	fcall	init_fetch0
  1075  1CEF  0080               	movwf	0
  1076  1CF0  0A84               	incf	4,f
  1077  1CF1  0804               	movf	4,w
  1078  1CF2  067D               	xorwf	btemp+-1,w
  1079  1CF3  1903               	btfsc	3,2
  1080  1CF4  3400               	retlw	0
  1081  1CF5  0AFF               	incf	btemp+1,f
  1082  1CF6  1903               	btfsc	3,2
  1083  1CF7  0AFE               	incf	btemp,f
  1084  1CF8  2CEA               	goto	init_ram0
  1085                           
  1086                           	psect	clrtext
  1087  1C20                     clear_ram0:	
  1088                           ;	Called with FSR containing the base address, and
  1089                           ;	W with the last address+1
  1090                           
  1091  1C20  0064               	clrwdt	;clear the watchdog before getting into this loop
  1092  1C21                     clrloop0:
  1093  1C21  0180               	clrf	0	;clear RAM location pointed to by FSR
  1094  1C22  0A84               	incf	4,f	;increment pointer
  1095  1C23  0604               	xorwf	4,w	;XOR with final address
  1096  1C24  1903               	btfsc	3,2	;have we reached the end yet?
  1097  1C25  3400               	retlw	0	;all done for this memory range, return
  1098  1C26  0604               	xorwf	4,w	;XOR again to restore value
  1099  1C27  2C21               	goto	clrloop0	;do the next byte
  1100                           
  1101                           	psect	cstackBANK3
  1102  01BD                     __pcstackBANK3:
  1103  01BD                     ??___fltol:
  1104                           
  1105                           ; 1 bytes @ 0x0
  1106  01BD                     	ds	4
  1107  01C1                     ___fltol@sign1:
  1108                           
  1109                           ; 1 bytes @ 0x4
  1110  01C1                     	ds	1
  1111  01C2                     ___fltol@exp1:
  1112                           
  1113                           ; 1 bytes @ 0x5
  1114  01C2                     	ds	1
  1115  01C3                     ??_Timer_update_reg:
  1116                           
  1117                           ; 1 bytes @ 0x6
  1118  01C3                     	ds	4
  1119  01C7                     _Timer_update_reg$1109:
  1120                           
  1121                           ; 4 bytes @ 0xA
  1122  01C7                     	ds	4
  1123  01CB                     Timer_update_reg@tick_ms:
  1124                           
  1125                           ; 1 bytes @ 0xE
  1126  01CB                     	ds	1
  1127  01CC                     Timer_Start@tick_ms:
  1128                           
  1129                           ; 1 bytes @ 0xF
  1130  01CC                     	ds	1
  1131                           
  1132                           	psect	cstackBANK1
  1133  00A0                     __pcstackBANK1:
  1134  00A0                     ??_Timer_init:
  1135  00A0                     ??_ADC_INIT:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  00A0                     ??_SDD_Init:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  00A0                     ??_WH_CL_Init:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  00A0                     ??_Led_init:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  00A0                     ?___bmul:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  00A0                     ?__Umul8_16:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  00A0                     ?___lldiv:	
  1154                           ; 2 bytes @ 0x0
  1155                           
  1156  00A0                     ?___fladd:	
  1157                           ; 4 bytes @ 0x0
  1158                           
  1159  00A0                     ?___xxtofl:	
  1160                           ; 4 bytes @ 0x0
  1161                           
  1162  00A0                     ___bmul@multiplicand:	
  1163                           ; 4 bytes @ 0x0
  1164                           
  1165  00A0                     __Umul8_16@multiplicand:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  00A0                     ___lldiv@divisor:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  00A0                     ___fladd@b:	
  1172                           ; 4 bytes @ 0x0
  1173                           
  1174  00A0                     ___xxtofl@val:	
  1175                           ; 4 bytes @ 0x0
  1176                           
  1177                           
  1178                           ; 4 bytes @ 0x0
  1179  00A0                     	ds	1
  1180  00A1                     ??___bmul:
  1181  00A1                     ___bmul@product:	
  1182                           ; 1 bytes @ 0x1
  1183                           
  1184                           
  1185                           ; 1 bytes @ 0x1
  1186  00A1                     	ds	1
  1187  00A2                     ??__Umul8_16:
  1188  00A2                     ___bmul@multiplier:	
  1189                           ; 1 bytes @ 0x2
  1190                           
  1191                           
  1192                           ; 1 bytes @ 0x2
  1193  00A2                     	ds	1
  1194  00A3                     ??_SW_Init:
  1195  00A3                     SW_Init@index:	
  1196                           ; 1 bytes @ 0x3
  1197                           
  1198                           
  1199                           ; 1 bytes @ 0x3
  1200  00A3                     	ds	1
  1201  00A4                     ??___xxtofl:
  1202  00A4                     __Umul8_16@product:	
  1203                           ; 1 bytes @ 0x4
  1204                           
  1205  00A4                     ___lldiv@dividend:	
  1206                           ; 2 bytes @ 0x4
  1207                           
  1208  00A4                     ___fladd@a:	
  1209                           ; 4 bytes @ 0x4
  1210                           
  1211                           
  1212                           ; 4 bytes @ 0x4
  1213  00A4                     	ds	2
  1214  00A6                     __Umul8_16@word_mpld:
  1215                           
  1216                           ; 2 bytes @ 0x6
  1217  00A6                     	ds	2
  1218  00A8                     ??___lldiv:
  1219  00A8                     ??___fladd:	
  1220                           ; 1 bytes @ 0x8
  1221                           
  1222  00A8                     __Umul8_16@multiplier:	
  1223                           ; 1 bytes @ 0x8
  1224                           
  1225  00A8                     ___xxtofl@sign:	
  1226                           ; 1 bytes @ 0x8
  1227                           
  1228                           
  1229                           ; 1 bytes @ 0x8
  1230  00A8                     	ds	1
  1231  00A9                     ___xxtofl@exp:
  1232  00A9                     ___lldiv@quotient:	
  1233                           ; 1 bytes @ 0x9
  1234                           
  1235                           
  1236                           ; 4 bytes @ 0x9
  1237  00A9                     	ds	1
  1238  00AA                     ___xxtofl@arg:
  1239                           
  1240                           ; 4 bytes @ 0xA
  1241  00AA                     	ds	3
  1242  00AD                     ___lldiv@counter:
  1243                           
  1244                           ; 1 bytes @ 0xD
  1245  00AD                     	ds	1
  1246  00AE                     ?_I2C_Master_init:
  1247  00AE                     ?___flmul:	
  1248                           ; 1 bytes @ 0xE
  1249                           
  1250  00AE                     I2C_Master_init@baud:	
  1251                           ; 4 bytes @ 0xE
  1252                           
  1253  00AE                     ___flmul@b:	
  1254                           ; 4 bytes @ 0xE
  1255                           
  1256                           
  1257                           ; 4 bytes @ 0xE
  1258  00AE                     	ds	2
  1259  00B0                     ___fladd@signs:
  1260                           
  1261                           ; 1 bytes @ 0x10
  1262  00B0                     	ds	1
  1263  00B1                     ___fladd@aexp:
  1264                           
  1265                           ; 1 bytes @ 0x11
  1266  00B1                     	ds	1
  1267  00B2                     ??_I2C_Master_init:
  1268  00B2                     ___fladd@bexp:	
  1269                           ; 1 bytes @ 0x12
  1270                           
  1271  00B2                     ___flmul@a:	
  1272                           ; 1 bytes @ 0x12
  1273                           
  1274                           
  1275                           ; 4 bytes @ 0x12
  1276  00B2                     	ds	1
  1277  00B3                     ___fladd@grs:
  1278                           
  1279                           ; 1 bytes @ 0x13
  1280  00B3                     	ds	3
  1281  00B6                     ??___flmul:
  1282                           
  1283                           ; 1 bytes @ 0x16
  1284  00B6                     	ds	5
  1285  00BB                     ___flmul@sign:
  1286                           
  1287                           ; 1 bytes @ 0x1B
  1288  00BB                     	ds	1
  1289  00BC                     ___flmul@aexp:
  1290                           
  1291                           ; 1 bytes @ 0x1C
  1292  00BC                     	ds	1
  1293  00BD                     ___flmul@grs:
  1294                           
  1295                           ; 4 bytes @ 0x1D
  1296  00BD                     	ds	4
  1297  00C1                     ___flmul@bexp:
  1298                           
  1299                           ; 1 bytes @ 0x21
  1300  00C1                     	ds	1
  1301  00C2                     ___flmul@prod:
  1302                           
  1303                           ; 4 bytes @ 0x22
  1304  00C2                     	ds	4
  1305  00C6                     ___flmul@temp:
  1306                           
  1307                           ; 2 bytes @ 0x26
  1308  00C6                     	ds	2
  1309  00C8                     ?___fldiv:
  1310  00C8                     ___fldiv@a:	
  1311                           ; 4 bytes @ 0x28
  1312                           
  1313                           
  1314                           ; 4 bytes @ 0x28
  1315  00C8                     	ds	4
  1316  00CC                     ___fldiv@b:
  1317                           
  1318                           ; 4 bytes @ 0x2C
  1319  00CC                     	ds	4
  1320  00D0                     ??___fldiv:
  1321                           
  1322                           ; 1 bytes @ 0x30
  1323  00D0                     	ds	5
  1324  00D5                     ___fldiv@rem:
  1325                           
  1326                           ; 4 bytes @ 0x35
  1327  00D5                     	ds	4
  1328  00D9                     ___fldiv@sign:
  1329                           
  1330                           ; 1 bytes @ 0x39
  1331  00D9                     	ds	1
  1332  00DA                     ___fldiv@new_exp:
  1333                           
  1334                           ; 2 bytes @ 0x3A
  1335  00DA                     	ds	2
  1336  00DC                     ___fldiv@grs:
  1337                           
  1338                           ; 4 bytes @ 0x3C
  1339  00DC                     	ds	4
  1340  00E0                     ___fldiv@bexp:
  1341                           
  1342                           ; 1 bytes @ 0x40
  1343  00E0                     	ds	1
  1344  00E1                     ___fldiv@aexp:
  1345                           
  1346                           ; 1 bytes @ 0x41
  1347  00E1                     	ds	1
  1348  00E2                     ?___flsub:
  1349  00E2                     ___flsub@a:	
  1350                           ; 4 bytes @ 0x42
  1351                           
  1352                           
  1353                           ; 4 bytes @ 0x42
  1354  00E2                     	ds	4
  1355  00E6                     ___flsub@b:
  1356                           
  1357                           ; 4 bytes @ 0x46
  1358  00E6                     	ds	4
  1359  00EA                     ??___flsub:
  1360  00EA                     ?___fltol:	
  1361                           ; 1 bytes @ 0x4A
  1362                           
  1363  00EA                     ___fltol@f1:	
  1364                           ; 4 bytes @ 0x4A
  1365                           
  1366                           
  1367                           ; 4 bytes @ 0x4A
  1368  00EA                     	ds	4
  1369  00EE                     ??_OS_init:
  1370  00EE                     ??_Timer_Start:	
  1371                           ; 1 bytes @ 0x4E
  1372                           
  1373  00EE                     ??_main:	
  1374                           ; 1 bytes @ 0x4E
  1375                           
  1376                           
  1377                           	psect	cstackCOMMON
  1378  0070                     __pcstackCOMMON:	
  1379                           ; 1 bytes @ 0x4E
  1380                           
  1381  0070                     ?_OS_init:
  1382  0070                     ?_Timer_init:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ?_ADC_INIT:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?_SDD_Init:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ?_SW_Init:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ?_WH_CL_Init:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0070                     ?_Led_init:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0070                     ?_Timer_Start:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     ?_DISP_Elements:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ?_SSD_Blink:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ?_SSD_Dispaly_NULL:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ??_SSD_Dispaly_NULL:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ?_SSD_SetState:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ??_SSD_SetState:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ?_Timer_update_reg:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ?_Update_Global_counter:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0070                     ?_Update_OS_Mode:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ??_Update_OS_Mode:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0070                     ?_SW_Update:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0070                     ?_Tmepreture_Update:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0070                     ?_LED_Update:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     ?_WH_Update:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     ?_Get_temp:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     ?_Temp_ten_average:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0070                     ?_Check_WH_mode:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0070                     ?_WH_Save_Last_Temp:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457  0070                     ?_WH_Set_temp:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0070                     ?_WH_Turn_On_Off:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0070                     ??_WH_Turn_On_Off:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466  0070                     ?_WH_turn_on:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0070                     ??_WH_turn_on:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472  0070                     ?_COOL_turn_off:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475  0070                     ??_COOL_turn_off:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0070                     ?_WH_turn_off:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ??_WH_turn_off:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ?_COOL_turn_on:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     ??_COOL_turn_on:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490  0070                     ?_WH_Disable:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493  0070                     ??_WH_Disable:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?_Led_Toggle:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ??_Led_Toggle:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ?_Led_Off:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ??_Led_Off:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_Led_on:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ??_Led_on:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_main:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_I2C_Wait_idle:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ??_I2C_Wait_idle:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_I2C_Start:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ??_I2C_Start:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?_I2C_Stop:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ??_I2C_Stop:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_I2C_Write:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ??_I2C_Write:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_I2C_Read:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ??_I2C_Read:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_DISP_Update:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_SSD_Toggle:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_SSD_SetSSD:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ??_SSD_SetSSD:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_TMR_Update:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_SW_GetState:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_get_temp_after_reset:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?i1___bmul:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_ADC_Read:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?___awdiv:	
  1575                           ; 2 bytes @ 0x0
  1576                           
  1577  0070                     ?___awmod:	
  1578                           ; 2 bytes @ 0x0
  1579                           
  1580  0070                     ?i1__Umul8_16:	
  1581                           ; 2 bytes @ 0x0
  1582                           
  1583  0070                     ?i1___lldiv:	
  1584                           ; 2 bytes @ 0x0
  1585                           
  1586  0070                     ?i1___fldiv:	
  1587                           ; 4 bytes @ 0x0
  1588                           
  1589  0070                     ?i1___xxtofl:	
  1590                           ; 4 bytes @ 0x0
  1591                           
  1592  0070                     I2C_Write@Data:	
  1593                           ; 4 bytes @ 0x0
  1594                           
  1595  0070                     SSD_SetSSD@ssd:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     SSD_SetState@state:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     i1__Umul8_16@multiplicand:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     i1___bmul@multiplicand:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ___awdiv@divisor:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ___awmod@divisor:	
  1611                           ; 2 bytes @ 0x0
  1612                           
  1613  0070                     i1___lldiv@divisor:	
  1614                           ; 2 bytes @ 0x0
  1615                           
  1616  0070                     i1___fldiv@a:	
  1617                           ; 4 bytes @ 0x0
  1618                           
  1619  0070                     i1___xxtofl@val:	
  1620                           ; 4 bytes @ 0x0
  1621                           
  1622                           
  1623                           ; 4 bytes @ 0x0
  1624  0070                     	ds	1
  1625  0071                     ??_SSD_Blink:
  1626  0071                     ??_SSD_Toggle:	
  1627                           ; 1 bytes @ 0x1
  1628                           
  1629  0071                     ?_EEPROM_Write:	
  1630                           ; 1 bytes @ 0x1
  1631                           
  1632  0071                     ?_EEPROM_Read:	
  1633                           ; 1 bytes @ 0x1
  1634                           
  1635  0071                     ??i1___bmul:	
  1636                           ; 1 bytes @ 0x1
  1637                           
  1638  0071                     Led_Toggle@Led:	
  1639                           ; 1 bytes @ 0x1
  1640                           
  1641  0071                     i1___bmul@product:	
  1642                           ; 1 bytes @ 0x1
  1643                           
  1644  0071                     EEPROM_Write@add:	
  1645                           ; 1 bytes @ 0x1
  1646                           
  1647  0071                     EEPROM_Read@add:	
  1648                           ; 2 bytes @ 0x1
  1649                           
  1650                           
  1651                           ; 2 bytes @ 0x1
  1652  0071                     	ds	1
  1653  0072                     ??_ADC_Read:
  1654  0072                     ??i1__Umul8_16:	
  1655                           ; 1 bytes @ 0x2
  1656                           
  1657  0072                     Led_on@Led:	
  1658                           ; 1 bytes @ 0x2
  1659                           
  1660  0072                     Led_Off@Led:	
  1661                           ; 1 bytes @ 0x2
  1662                           
  1663  0072                     i1___bmul@multiplier:	
  1664                           ; 1 bytes @ 0x2
  1665                           
  1666  0072                     ___awdiv@dividend:	
  1667                           ; 1 bytes @ 0x2
  1668                           
  1669  0072                     ___awmod@dividend:	
  1670                           ; 2 bytes @ 0x2
  1671                           
  1672                           
  1673                           ; 2 bytes @ 0x2
  1674  0072                     	ds	1
  1675  0073                     ??_SW_Update:
  1676  0073                     ??_LED_Update:	
  1677                           ; 1 bytes @ 0x3
  1678                           
  1679  0073                     ??_EEPROM_Read:	
  1680                           ; 1 bytes @ 0x3
  1681                           
  1682  0073                     ??_SW_GetState:	
  1683                           ; 1 bytes @ 0x3
  1684                           
  1685  0073                     EEPROM_Write@data:	
  1686                           ; 1 bytes @ 0x3
  1687                           
  1688  0073                     EEPROM_Read@ADDRL:	
  1689                           ; 1 bytes @ 0x3
  1690                           
  1691  0073                     SW_GetState@sw:	
  1692                           ; 1 bytes @ 0x3
  1693                           
  1694  0073                     ADC_Read@ret:	
  1695                           ; 1 bytes @ 0x3
  1696                           
  1697                           
  1698                           ; 2 bytes @ 0x3
  1699  0073                     	ds	1
  1700  0074                     ??_Update_Global_counter:
  1701  0074                     ??_WH_Set_temp:	
  1702                           ; 1 bytes @ 0x4
  1703                           
  1704  0074                     ??_EEPROM_Write:	
  1705                           ; 1 bytes @ 0x4
  1706                           
  1707  0074                     ??___awdiv:	
  1708                           ; 1 bytes @ 0x4
  1709                           
  1710  0074                     ??___awmod:	
  1711                           ; 1 bytes @ 0x4
  1712                           
  1713  0074                     ??i1___xxtofl:	
  1714                           ; 1 bytes @ 0x4
  1715                           
  1716  0074                     EEPROM_Write@ADDRH:	
  1717                           ; 1 bytes @ 0x4
  1718                           
  1719  0074                     EEPROM_Read@Data:	
  1720                           ; 1 bytes @ 0x4
  1721                           
  1722  0074                     SW_Update@index:	
  1723                           ; 1 bytes @ 0x4
  1724                           
  1725  0074                     ___awdiv@counter:	
  1726                           ; 1 bytes @ 0x4
  1727                           
  1728  0074                     ___awmod@counter:	
  1729                           ; 1 bytes @ 0x4
  1730                           
  1731  0074                     i1__Umul8_16@product:	
  1732                           ; 1 bytes @ 0x4
  1733                           
  1734  0074                     i1___lldiv@dividend:	
  1735                           ; 2 bytes @ 0x4
  1736                           
  1737  0074                     i1___fldiv@b:	
  1738                           ; 4 bytes @ 0x4
  1739                           
  1740                           
  1741                           ; 4 bytes @ 0x4
  1742  0074                     	ds	1
  1743  0075                     ADC_Read@Channel:
  1744  0075                     EEPROM_Write@ADDRL:	
  1745                           ; 1 bytes @ 0x5
  1746                           
  1747  0075                     EEPROM_Read@ADDRH:	
  1748                           ; 1 bytes @ 0x5
  1749                           
  1750  0075                     ___awdiv@sign:	
  1751                           ; 1 bytes @ 0x5
  1752                           
  1753  0075                     ___awmod@sign:	
  1754                           ; 1 bytes @ 0x5
  1755                           
  1756                           
  1757                           ; 1 bytes @ 0x5
  1758  0075                     	ds	1
  1759  0076                     ??_WH_Update:
  1760  0076                     ??_Check_WH_mode:	
  1761                           ; 1 bytes @ 0x6
  1762                           
  1763  0076                     ??_WH_Save_Last_Temp:	
  1764                           ; 1 bytes @ 0x6
  1765                           
  1766  0076                     ??_get_temp_after_reset:	
  1767                           ; 1 bytes @ 0x6
  1768                           
  1769  0076                     ___awdiv@quotient:	
  1770                           ; 1 bytes @ 0x6
  1771                           
  1772  0076                     i1__Umul8_16@word_mpld:	
  1773                           ; 2 bytes @ 0x6
  1774                           
  1775                           
  1776                           ; 2 bytes @ 0x6
  1777  0076                     	ds	2
  1778  0078                     ?_SSD_OUT:
  1779  0078                     ??i1___lldiv:	
  1780                           ; 1 bytes @ 0x8
  1781                           
  1782  0078                     ??i1___fldiv:	
  1783                           ; 1 bytes @ 0x8
  1784                           
  1785  0078                     SSD_OUT@ssd:	
  1786                           ; 1 bytes @ 0x8
  1787                           
  1788  0078                     i1__Umul8_16@multiplier:	
  1789                           ; 1 bytes @ 0x8
  1790                           
  1791  0078                     i1___xxtofl@sign:	
  1792                           ; 1 bytes @ 0x8
  1793                           
  1794                           
  1795                           ; 1 bytes @ 0x8
  1796  0078                     	ds	1
  1797  0079                     ??_SSD_OUT:
  1798  0079                     SSD_OUT@Data:	
  1799                           ; 1 bytes @ 0x9
  1800                           
  1801  0079                     i1___xxtofl@exp:	
  1802                           ; 1 bytes @ 0x9
  1803                           
  1804  0079                     i1___lldiv@quotient:	
  1805                           ; 1 bytes @ 0x9
  1806                           
  1807                           
  1808                           ; 4 bytes @ 0x9
  1809  0079                     	ds	1
  1810  007A                     ??_DISP_Elements:
  1811  007A                     i1___xxtofl@arg:	
  1812                           ; 1 bytes @ 0xA
  1813                           
  1814                           
  1815                           ; 4 bytes @ 0xA
  1816  007A                     	ds	2
  1817  007C                     DISP_Elements@var:
  1818                           
  1819                           ; 1 bytes @ 0xC
  1820  007C                     	ds	1
  1821  007D                     ??_DISP_Update:
  1822  007D                     i1___lldiv@counter:	
  1823                           ; 1 bytes @ 0xD
  1824                           
  1825                           
  1826                           ; 1 bytes @ 0xD
  1827  007D                     	ds	1
  1828  007E                     ??_Tmepreture_Update:
  1829  007E                     ??_Get_temp:	
  1830                           ; 1 bytes @ 0xE
  1831                           
  1832                           
  1833                           	psect	cstackBANK0
  1834  0020                     __pcstackBANK0:	
  1835                           ; 1 bytes @ 0xE
  1836                           
  1837  0020                     ??_Temp_ten_average:
  1838  0020                     ?i1___flmul:	
  1839                           ; 1 bytes @ 0x0
  1840                           
  1841  0020                     i1___fldiv@rem:	
  1842                           ; 4 bytes @ 0x0
  1843                           
  1844  0020                     i1___flmul@b:	
  1845                           ; 4 bytes @ 0x0
  1846                           
  1847                           
  1848                           ; 4 bytes @ 0x0
  1849  0020                     	ds	4
  1850  0024                     i1___fldiv@sign:
  1851  0024                     i1___flmul@a:	
  1852                           ; 1 bytes @ 0x4
  1853                           
  1854                           
  1855                           ; 4 bytes @ 0x4
  1856  0024                     	ds	1
  1857  0025                     i1___fldiv@new_exp:
  1858                           
  1859                           ; 2 bytes @ 0x5
  1860  0025                     	ds	2
  1861  0027                     i1___fldiv@grs:
  1862                           
  1863                           ; 4 bytes @ 0x7
  1864  0027                     	ds	1
  1865  0028                     ??i1___flmul:
  1866                           
  1867                           ; 1 bytes @ 0x8
  1868  0028                     	ds	3
  1869  002B                     i1___fldiv@bexp:
  1870                           
  1871                           ; 1 bytes @ 0xB
  1872  002B                     	ds	1
  1873  002C                     i1___fldiv@aexp:
  1874                           
  1875                           ; 1 bytes @ 0xC
  1876  002C                     	ds	1
  1877  002D                     ?i1___fltol:
  1878  002D                     i1___flmul@sign:	
  1879                           ; 4 bytes @ 0xD
  1880                           
  1881  002D                     i1___fltol@f1:	
  1882                           ; 1 bytes @ 0xD
  1883                           
  1884                           
  1885                           ; 4 bytes @ 0xD
  1886  002D                     	ds	1
  1887  002E                     i1___flmul@grs:
  1888                           
  1889                           ; 4 bytes @ 0xE
  1890  002E                     	ds	3
  1891  0031                     ??i1___fltol:
  1892                           
  1893                           ; 1 bytes @ 0x11
  1894  0031                     	ds	1
  1895  0032                     i1___flmul@aexp:
  1896                           
  1897                           ; 1 bytes @ 0x12
  1898  0032                     	ds	1
  1899  0033                     i1___flmul@bexp:
  1900                           
  1901                           ; 1 bytes @ 0x13
  1902  0033                     	ds	1
  1903  0034                     i1___flmul@prod:
  1904                           
  1905                           ; 4 bytes @ 0x14
  1906  0034                     	ds	1
  1907  0035                     i1___fltol@sign1:
  1908                           
  1909                           ; 1 bytes @ 0x15
  1910  0035                     	ds	1
  1911  0036                     i1___fltol@exp1:
  1912                           
  1913                           ; 1 bytes @ 0x16
  1914  0036                     	ds	2
  1915  0038                     i1___flmul@temp:
  1916                           
  1917                           ; 2 bytes @ 0x18
  1918  0038                     	ds	2
  1919  003A                     ??_TMR_Update:
  1920                           
  1921                           ; 1 bytes @ 0x1A
  1922  003A                     	ds	4
  1923                           
  1924                           	psect	maintext
  1925  1C67                     __pmaintext:	
  1926 ;;
  1927 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1928 ;;
  1929 ;; *************** function _main *****************
  1930 ;; Defined at:
  1931 ;;		line 24 in file "main.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : B00/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels required when called:   12
  1951 ;; This function calls:
  1952 ;;		_OS_init
  1953 ;; This function is called by:
  1954 ;;		Startup code after reset
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function _main
  1960  1C67                     _main:
  1961  1C67                     l5542:	
  1962                           ;incstack = 0
  1963 ;; hardware stack exceeded
  1964                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1965                           
  1966                           
  1967                           ;main.c: 28: OS_init();
  1968  1C67  160A  158A  277D  160A  158A  	fcall	_OS_init
  1969  1C6C                     l31:	
  1970                           ;main.c: 30: while(1)
  1971                           
  1972  1C6C                     l32:	
  1973                           ;main.c: 31: {
  1974                           
  1975  1C6C  2C6C               	goto	l31
  1976  1C6D  120A  118A  2812   	ljmp	start
  1977  1C70                     __end_of_main:
  1978                           
  1979                           	psect	text1
  1980  1F7D                     __ptext1:	
  1981 ;; *************** function _OS_init *****************
  1982 ;; Defined at:
  1983 ;;		line 40 in file "main.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1997 ;;      Params:         0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0
  2000 ;;      Totals:         0       0       0       0       0
  2001 ;;Total ram usage:        0 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:   11
  2004 ;; This function calls:
  2005 ;;		_ADC_INIT
  2006 ;;		_I2C_Master_init
  2007 ;;		_Led_init
  2008 ;;		_SDD_Init
  2009 ;;		_SW_Init
  2010 ;;		_Timer_Start
  2011 ;;		_Timer_init
  2012 ;;		_WH_CL_Init
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function _OS_init
  2020  1F7D                     _OS_init:
  2021  1F7D                     l5422:	
  2022                           ;incstack = 0
  2023 ;; hardware stack exceeded
  2024                           ; Regs used in _OS_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2025                           
  2026                           
  2027                           ;main.c: 42: Timer_init();
  2028  1F7D  160A  158A  23FD  160A  158A  	fcall	_Timer_init
  2029                           
  2030                           ;main.c: 43: ADC_INIT();
  2031  1F82  160A  158A  24C2  160A  158A  	fcall	_ADC_INIT
  2032  1F87                     l5424:
  2033                           
  2034                           ;main.c: 44: I2C_Master_init(100000);
  2035  1F87  3000               	movlw	0
  2036  1F88  1683               	bsf	3,5	;RP0=1, select bank1
  2037  1F89  1303               	bcf	3,6	;RP1=0, select bank1
  2038  1F8A  00B1               	movwf	(I2C_Master_init@baud+3)^(0+128)
  2039  1F8B  3001               	movlw	1
  2040  1F8C  00B0               	movwf	(I2C_Master_init@baud+2)^(0+128)
  2041  1F8D  3086               	movlw	134
  2042  1F8E  00AF               	movwf	(I2C_Master_init@baud+1)^(0+128)
  2043  1F8F  30A0               	movlw	160
  2044  1F90  00AE               	movwf	I2C_Master_init@baud^(0+128)
  2045  1F91  160A  158A  2690  160A  158A  	fcall	_I2C_Master_init
  2046  1F96                     l5426:
  2047                           
  2048                           ;main.c: 45: SDD_Init();
  2049  1F96  160A  158A  2470  160A  158A  	fcall	_SDD_Init
  2050  1F9B                     l5428:
  2051                           
  2052                           ;main.c: 46: SW_Init();
  2053  1F9B  160A  118A  20FE  160A  158A  	fcall	_SW_Init
  2054  1FA0                     l5430:
  2055                           
  2056                           ;main.c: 47: WH_CL_Init();
  2057  1FA0  160A  158A  245E  160A  158A  	fcall	_WH_CL_Init
  2058  1FA5                     l5432:
  2059                           
  2060                           ;main.c: 48: Led_init();
  2061  1FA5  160A  158A  2455  160A  158A  	fcall	_Led_init
  2062  1FAA                     l5434:
  2063                           
  2064                           ;main.c: 49: Timer_Start(10);
  2065  1FAA  300A               	movlw	10
  2066  1FAB  160A  158A  2539  160A  158A  	fcall	_Timer_Start
  2067  1FB0                     l5436:
  2068                           
  2069                           ;main.c: 50: PORTC &=~(1 << 5);
  2070  1FB0  30DF               	movlw	223
  2071  1FB1  00FF               	movwf	btemp+1
  2072  1FB2  087F               	movf	btemp+1,w
  2073  1FB3  1283               	bcf	3,5	;RP0=0, select bank0
  2074  1FB4  1303               	bcf	3,6	;RP1=0, select bank0
  2075  1FB5  0587               	andwf	7,f	;volatile
  2076  1FB6                     l5438:
  2077                           
  2078                           ;main.c: 51: TRISD &=~0xFF;
  2079  1FB6  1683               	bsf	3,5	;RP0=1, select bank1
  2080  1FB7  1303               	bcf	3,6	;RP1=0, select bank1
  2081  1FB8  0188               	clrf	8	;volatile
  2082  1FB9                     l5440:
  2083                           
  2084                           ;main.c: 52: TRISA &=~ 0xFB;
  2085  1FB9  3004               	movlw	4
  2086  1FBA  00FF               	movwf	btemp+1
  2087  1FBB  087F               	movf	btemp+1,w
  2088  1FBC  0585               	andwf	5,f	;volatile
  2089  1FBD                     l37:
  2090  1FBD  0008               	return
  2091  1FBE                     __end_of_OS_init:
  2092                           
  2093                           	psect	text2
  2094  1C5E                     __ptext2:	
  2095 ;; *************** function _WH_CL_Init *****************
  2096 ;; Defined at:
  2097 ;;		line 39 in file "WH.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    7
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_OS_init
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _WH_CL_Init
  2127  1C5E                     _WH_CL_Init:
  2128  1C5E                     l5346:	
  2129                           ;incstack = 0
  2130 ;; hardware stack exceeded
  2131                           ; Regs used in _WH_CL_Init: [wreg+status,2]
  2132                           
  2133                           
  2134                           ;WH.c: 41: (((TRISC)) = ((TRISC) & (~(1 << (5))))|((0) << (5)));
  2135  1C5E  1683               	bsf	3,5	;RP0=1, select bank1
  2136  1C5F  1303               	bcf	3,6	;RP1=0, select bank1
  2137  1C60  0807               	movf	7,w	;volatile
  2138  1C61  39DF               	andlw	223
  2139  1C62  0087               	movwf	7	;volatile
  2140                           
  2141                           ;WH.c: 42: (((TRISC)) = ((TRISC) & (~(1 << (2))))|((0) << (2)));
  2142  1C63  0807               	movf	7,w	;volatile
  2143  1C64  39FB               	andlw	251
  2144  1C65  0087               	movwf	7	;volatile
  2145  1C66                     l503:
  2146  1C66  0008               	return
  2147  1C67                     __end_of_WH_CL_Init:
  2148                           
  2149                           	psect	text3
  2150  1BFD                     __ptext3:	
  2151 ;; *************** function _Timer_init *****************
  2152 ;; Defined at:
  2153 ;;		line 15 in file "TIMER.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;		None
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		None
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         0       0       0       0       0
  2168 ;;      Locals:         0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0
  2170 ;;      Totals:         0       0       0       0       0
  2171 ;;Total ram usage:        0 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    7
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_OS_init
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           
  2182                           ;psect for function _Timer_init
  2183  1BFD                     _Timer_init:
  2184  1BFD                     l5308:	
  2185                           ;incstack = 0
  2186 ;; hardware stack exceeded
  2187                           ; Regs used in _Timer_init: []
  2188                           
  2189                           
  2190                           ;TIMER.c: 17: T1CKPS1 = 0; T1CKPS0 = 0;
  2191  1BFD  1283               	bcf	3,5	;RP0=0, select bank0
  2192  1BFE  1303               	bcf	3,6	;RP1=0, select bank0
  2193  1BFF  1290               	bcf	16,5	;volatile
  2194  1C00  1210               	bcf	16,4	;volatile
  2195                           
  2196                           ;TIMER.c: 18: (TMR1ON = 0);
  2197  1C01  1010               	bcf	16,0	;volatile
  2198  1C02                     l313:
  2199  1C02  0008               	return
  2200  1C03                     __end_of_Timer_init:
  2201                           
  2202                           	psect	text4
  2203  1D39                     __ptext4:	
  2204 ;; *************** function _Timer_Start *****************
  2205 ;; Defined at:
  2206 ;;		line 22 in file "TIMER.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  tick_ms         1    wreg     unsigned char 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  tick_ms         1   15[BANK3 ] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2220 ;;      Params:         0       0       0       0       0
  2221 ;;      Locals:         0       0       0       1       0
  2222 ;;      Temps:          0       0       0       0       0
  2223 ;;      Totals:         0       0       0       1       0
  2224 ;;Total ram usage:        1 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:   10
  2227 ;; This function calls:
  2228 ;;		_Timer_update_reg
  2229 ;; This function is called by:
  2230 ;;		_OS_init
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           
  2235                           ;psect for function _Timer_Start
  2236  1D39                     _Timer_Start:
  2237                           
  2238                           ;incstack = 0
  2239 ;; hardware stack exceeded
  2240                           ; Regs used in _Timer_Start: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2241                           ;Timer_Start@tick_ms stored from wreg
  2242  1D39  1683               	bsf	3,5	;RP0=1, select bank3
  2243  1D3A  1703               	bsf	3,6	;RP1=1, select bank3
  2244  1D3B  00CC               	movwf	Timer_Start@tick_ms^(0+384)
  2245  1D3C                     l5350:
  2246                           
  2247                           ;TIMER.c: 24: PEIE = 1;
  2248  1D3C  170B               	bsf	11,6	;volatile
  2249                           
  2250                           ;TIMER.c: 25: GIE = 1;
  2251  1D3D  178B               	bsf	11,7	;volatile
  2252  1D3E                     l5352:
  2253                           
  2254                           ;TIMER.c: 26: Timer_update_reg(tick_ms);
  2255  1D3E  084C               	movf	Timer_Start@tick_ms^(0+384),w
  2256  1D3F  120A  118A  270D  160A  158A  	fcall	_Timer_update_reg
  2257  1D44                     l5354:
  2258                           
  2259                           ;TIMER.c: 27: (TMR1CS = 0);;
  2260  1D44  1283               	bcf	3,5	;RP0=0, select bank0
  2261  1D45  1303               	bcf	3,6	;RP1=0, select bank0
  2262  1D46  1090               	bcf	16,1	;volatile
  2263  1D47                     l5356:
  2264                           
  2265                           ;TIMER.c: 28: (TMR1IF = 0);
  2266  1D47  100C               	bcf	12,0	;volatile
  2267  1D48                     l5358:
  2268                           
  2269                           ;TIMER.c: 29: (TMR1IE = 1);
  2270  1D48  1683               	bsf	3,5	;RP0=1, select bank1
  2271  1D49  1303               	bcf	3,6	;RP1=0, select bank1
  2272  1D4A  140C               	bsf	12,0	;volatile
  2273  1D4B                     l5360:
  2274                           
  2275                           ;TIMER.c: 30: (TMR1ON = 1);
  2276  1D4B  1283               	bcf	3,5	;RP0=0, select bank0
  2277  1D4C  1303               	bcf	3,6	;RP1=0, select bank0
  2278  1D4D  1410               	bsf	16,0	;volatile
  2279  1D4E                     l316:
  2280  1D4E  0008               	return
  2281  1D4F                     __end_of_Timer_Start:
  2282                           
  2283                           	psect	text5
  2284  070D                     __ptext5:	
  2285 ;; *************** function _Timer_update_reg *****************
  2286 ;; Defined at:
  2287 ;;		line 37 in file "TIMER.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  tick_ms         1    wreg     unsigned char 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  tick_ms         1   14[BANK3 ] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         0       0       0       0       0
  2302 ;;      Locals:         0       0       0       5       0
  2303 ;;      Temps:          0       0       0       4       0
  2304 ;;      Totals:         0       0       0       9       0
  2305 ;;Total ram usage:        9 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    9
  2308 ;; This function calls:
  2309 ;;		___fldiv
  2310 ;;		___flmul
  2311 ;;		___flsub
  2312 ;;		___fltol
  2313 ;;		___xxtofl
  2314 ;; This function is called by:
  2315 ;;		_Timer_Start
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _Timer_update_reg
  2321  070D                     _Timer_update_reg:
  2322                           
  2323                           ;incstack = 0
  2324 ;; hardware stack exceeded
  2325                           ; Regs used in _Timer_update_reg: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2326                           ;Timer_update_reg@tick_ms stored from wreg
  2327  070D  1683               	bsf	3,5	;RP0=1, select bank3
  2328  070E  1703               	bsf	3,6	;RP1=1, select bank3
  2329  070F  00CB               	movwf	Timer_update_reg@tick_ms^(0+384)
  2330  0710                     l5254:
  2331                           
  2332                           ;TIMER.c: 39: if((tick_ms >= 1) && (tick_ms <= 65))
  2333  0710  084B               	movf	Timer_update_reg@tick_ms^(0+384),w
  2334  0711  1903               	btfsc	3,2
  2335  0712  2F14               	goto	u8421
  2336  0713  2F15               	goto	u8420
  2337  0714                     u8421:
  2338  0714  2FE0               	goto	l322
  2339  0715                     u8420:
  2340  0715                     l5256:
  2341  0715  3042               	movlw	66
  2342  0716  024B               	subwf	Timer_update_reg@tick_ms^(0+384),w
  2343  0717  1803               	skipnc
  2344  0718  2F1A               	goto	u8431
  2345  0719  2F1B               	goto	u8430
  2346  071A                     u8431:
  2347  071A  2FE0               	goto	l322
  2348  071B                     u8430:
  2349  071B                     l5258:
  2350                           
  2351                           ;TIMER.c: 40: {;TIMER.c: 41: Timer_Update_Vlue = (65536 - (((tick_ms * 0.001) * 4000000)
      +                           / 4 ));
  2352  071B  084B               	movf	Timer_update_reg@tick_ms^(0+384),w
  2353  071C  00C3               	movwf	??_Timer_update_reg^(0+384)
  2354  071D  01C4               	clrf	(??_Timer_update_reg^(0+384)+1)
  2355  071E  01C5               	clrf	(??_Timer_update_reg^(0+384)+2)
  2356  071F  01C6               	clrf	(??_Timer_update_reg^(0+384)+3)
  2357  0720  0846               	movf	(??_Timer_update_reg+3)^(0+384),w
  2358  0721  1683               	bsf	3,5	;RP0=1, select bank1
  2359  0722  1303               	bcf	3,6	;RP1=0, select bank1
  2360  0723  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  2361  0724  1683               	bsf	3,5	;RP0=1, select bank3
  2362  0725  1703               	bsf	3,6	;RP1=1, select bank3
  2363  0726  0845               	movf	(??_Timer_update_reg+2)^(0+384),w
  2364  0727  1683               	bsf	3,5	;RP0=1, select bank1
  2365  0728  1303               	bcf	3,6	;RP1=0, select bank1
  2366  0729  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  2367  072A  1683               	bsf	3,5	;RP0=1, select bank3
  2368  072B  1703               	bsf	3,6	;RP1=1, select bank3
  2369  072C  0844               	movf	(??_Timer_update_reg+1)^(0+384),w
  2370  072D  1683               	bsf	3,5	;RP0=1, select bank1
  2371  072E  1303               	bcf	3,6	;RP1=0, select bank1
  2372  072F  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  2373  0730  1683               	bsf	3,5	;RP0=1, select bank3
  2374  0731  1703               	bsf	3,6	;RP1=1, select bank3
  2375  0732  0843               	movf	??_Timer_update_reg^(0+384),w
  2376  0733  1683               	bsf	3,5	;RP0=1, select bank1
  2377  0734  1303               	bcf	3,6	;RP1=0, select bank1
  2378  0735  00A0               	movwf	___xxtofl@val^(0+128)
  2379  0736  3000               	movlw	0
  2380  0737  160A  118A  2744  120A  118A  	fcall	___xxtofl
  2381  073C  1683               	bsf	3,5	;RP0=1, select bank1
  2382  073D  1303               	bcf	3,6	;RP1=0, select bank1
  2383  073E  0823               	movf	(?___xxtofl+3)^(0+128),w
  2384  073F  00B5               	movwf	(___flmul@a+3)^(0+128)
  2385  0740  0822               	movf	(?___xxtofl+2)^(0+128),w
  2386  0741  00B4               	movwf	(___flmul@a+2)^(0+128)
  2387  0742  0821               	movf	(?___xxtofl+1)^(0+128),w
  2388  0743  00B3               	movwf	(___flmul@a+1)^(0+128)
  2389  0744  0820               	movf	?___xxtofl^(0+128),w
  2390  0745  00B2               	movwf	___flmul@a^(0+128)
  2391  0746  303A               	movlw	58
  2392  0747  00B1               	movwf	(___flmul@b+3)^(0+128)
  2393  0748  3083               	movlw	131
  2394  0749  00B0               	movwf	(___flmul@b+2)^(0+128)
  2395  074A  3012               	movlw	18
  2396  074B  00AF               	movwf	(___flmul@b+1)^(0+128)
  2397  074C  306F               	movlw	111
  2398  074D  00AE               	movwf	___flmul@b^(0+128)
  2399  074E  120A  118A  204B  120A  118A  	fcall	___flmul
  2400  0753  1683               	bsf	3,5	;RP0=1, select bank1
  2401  0754  1303               	bcf	3,6	;RP1=0, select bank1
  2402  0755  0831               	movf	(?___flmul+3)^(0+128),w
  2403  0756  1683               	bsf	3,5	;RP0=1, select bank3
  2404  0757  1703               	bsf	3,6	;RP1=1, select bank3
  2405  0758  00CA               	movwf	(_Timer_update_reg$1109+3)^(0+384)
  2406  0759  1683               	bsf	3,5	;RP0=1, select bank1
  2407  075A  1303               	bcf	3,6	;RP1=0, select bank1
  2408  075B  0830               	movf	(?___flmul+2)^(0+128),w
  2409  075C  1683               	bsf	3,5	;RP0=1, select bank3
  2410  075D  1703               	bsf	3,6	;RP1=1, select bank3
  2411  075E  00C9               	movwf	(_Timer_update_reg$1109+2)^(0+384)
  2412  075F  1683               	bsf	3,5	;RP0=1, select bank1
  2413  0760  1303               	bcf	3,6	;RP1=0, select bank1
  2414  0761  082F               	movf	(?___flmul+1)^(0+128),w
  2415  0762  1683               	bsf	3,5	;RP0=1, select bank3
  2416  0763  1703               	bsf	3,6	;RP1=1, select bank3
  2417  0764  00C8               	movwf	(_Timer_update_reg$1109+1)^(0+384)
  2418  0765  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0766  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0767  082E               	movf	?___flmul^(0+128),w
  2421  0768  1683               	bsf	3,5	;RP0=1, select bank3
  2422  0769  1703               	bsf	3,6	;RP1=1, select bank3
  2423  076A  00C7               	movwf	_Timer_update_reg$1109^(0+384)
  2424                           
  2425                           ;TIMER.c: 40: {;TIMER.c: 41: Timer_Update_Vlue = (65536 - (((tick_ms * 0.001) * 4000000)
      +                           / 4 ));
  2426  076B  3047               	movlw	71
  2427  076C  1683               	bsf	3,5	;RP0=1, select bank1
  2428  076D  1303               	bcf	3,6	;RP1=0, select bank1
  2429  076E  00E9               	movwf	(___flsub@b+3)^(0+128)
  2430  076F  3080               	movlw	128
  2431  0770  00E8               	movwf	(___flsub@b+2)^(0+128)
  2432  0771  3000               	movlw	0
  2433  0772  00E7               	movwf	(___flsub@b+1)^(0+128)
  2434  0773  3000               	movlw	0
  2435  0774  00E6               	movwf	___flsub@b^(0+128)
  2436  0775  1683               	bsf	3,5	;RP0=1, select bank3
  2437  0776  1703               	bsf	3,6	;RP1=1, select bank3
  2438  0777  084A               	movf	(_Timer_update_reg$1109+3)^(0+384),w
  2439  0778  1683               	bsf	3,5	;RP0=1, select bank1
  2440  0779  1303               	bcf	3,6	;RP1=0, select bank1
  2441  077A  00B5               	movwf	(___flmul@a+3)^(0+128)
  2442  077B  1683               	bsf	3,5	;RP0=1, select bank3
  2443  077C  1703               	bsf	3,6	;RP1=1, select bank3
  2444  077D  0849               	movf	(_Timer_update_reg$1109+2)^(0+384),w
  2445  077E  1683               	bsf	3,5	;RP0=1, select bank1
  2446  077F  1303               	bcf	3,6	;RP1=0, select bank1
  2447  0780  00B4               	movwf	(___flmul@a+2)^(0+128)
  2448  0781  1683               	bsf	3,5	;RP0=1, select bank3
  2449  0782  1703               	bsf	3,6	;RP1=1, select bank3
  2450  0783  0848               	movf	(_Timer_update_reg$1109+1)^(0+384),w
  2451  0784  1683               	bsf	3,5	;RP0=1, select bank1
  2452  0785  1303               	bcf	3,6	;RP1=0, select bank1
  2453  0786  00B3               	movwf	(___flmul@a+1)^(0+128)
  2454  0787  1683               	bsf	3,5	;RP0=1, select bank3
  2455  0788  1703               	bsf	3,6	;RP1=1, select bank3
  2456  0789  0847               	movf	_Timer_update_reg$1109^(0+384),w
  2457  078A  1683               	bsf	3,5	;RP0=1, select bank1
  2458  078B  1303               	bcf	3,6	;RP1=0, select bank1
  2459  078C  00B2               	movwf	___flmul@a^(0+128)
  2460  078D  304A               	movlw	74
  2461  078E  00B1               	movwf	(___flmul@b+3)^(0+128)
  2462  078F  3074               	movlw	116
  2463  0790  00B0               	movwf	(___flmul@b+2)^(0+128)
  2464  0791  3024               	movlw	36
  2465  0792  00AF               	movwf	(___flmul@b+1)^(0+128)
  2466  0793  3000               	movlw	0
  2467  0794  00AE               	movwf	___flmul@b^(0+128)
  2468  0795  120A  118A  204B  120A  118A  	fcall	___flmul
  2469  079A  1683               	bsf	3,5	;RP0=1, select bank1
  2470  079B  1303               	bcf	3,6	;RP1=0, select bank1
  2471  079C  0831               	movf	(?___flmul+3)^(0+128),w
  2472  079D  00CF               	movwf	(___fldiv@b+3)^(0+128)
  2473  079E  0830               	movf	(?___flmul+2)^(0+128),w
  2474  079F  00CE               	movwf	(___fldiv@b+2)^(0+128)
  2475  07A0  082F               	movf	(?___flmul+1)^(0+128),w
  2476  07A1  00CD               	movwf	(___fldiv@b+1)^(0+128)
  2477  07A2  082E               	movf	?___flmul^(0+128),w
  2478  07A3  00CC               	movwf	___fldiv@b^(0+128)
  2479  07A4  3040               	movlw	64
  2480  07A5  00CB               	movwf	(___fldiv@a+3)^(0+128)
  2481  07A6  3080               	movlw	128
  2482  07A7  00CA               	movwf	(___fldiv@a+2)^(0+128)
  2483  07A8  3000               	movlw	0
  2484  07A9  00C9               	movwf	(___fldiv@a+1)^(0+128)
  2485  07AA  3000               	movlw	0
  2486  07AB  00C8               	movwf	___fldiv@a^(0+128)
  2487  07AC  120A  158A  21B8  120A  118A  	fcall	___fldiv
  2488  07B1  1683               	bsf	3,5	;RP0=1, select bank1
  2489  07B2  1303               	bcf	3,6	;RP1=0, select bank1
  2490  07B3  084B               	movf	(?___fldiv+3)^(0+128),w
  2491  07B4  00E5               	movwf	(___flsub@a+3)^(0+128)
  2492  07B5  084A               	movf	(?___fldiv+2)^(0+128),w
  2493  07B6  00E4               	movwf	(___flsub@a+2)^(0+128)
  2494  07B7  0849               	movf	(?___fldiv+1)^(0+128),w
  2495  07B8  00E3               	movwf	(___flsub@a+1)^(0+128)
  2496  07B9  0848               	movf	?___fldiv^(0+128),w
  2497  07BA  00E2               	movwf	___flsub@a^(0+128)
  2498  07BB  160A  158A  25F4  120A  118A  	fcall	___flsub
  2499  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  2500  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  2501  07C2  0865               	movf	(?___flsub+3)^(0+128),w
  2502  07C3  00ED               	movwf	(___fltol@f1+3)^(0+128)
  2503  07C4  0864               	movf	(?___flsub+2)^(0+128),w
  2504  07C5  00EC               	movwf	(___fltol@f1+2)^(0+128)
  2505  07C6  0863               	movf	(?___flsub+1)^(0+128),w
  2506  07C7  00EB               	movwf	(___fltol@f1+1)^(0+128)
  2507  07C8  0862               	movf	?___flsub^(0+128),w
  2508  07C9  00EA               	movwf	___fltol@f1^(0+128)
  2509  07CA  160A  118A  25EC  120A  118A  	fcall	___fltol
  2510  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  2511  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  2512  07D1  086B               	movf	(?___fltol+1)^(0+128),w
  2513  07D2  00EF               	movwf	(_Timer_Update_Vlue+1)^(0+128)
  2514  07D3  086A               	movf	?___fltol^(0+128),w
  2515  07D4  00EE               	movwf	_Timer_Update_Vlue^(0+128)
  2516  07D5                     l5260:
  2517                           
  2518                           ;TIMER.c: 43: ((TMR1) = (Timer_Update_Vlue));
  2519  07D5  086F               	movf	(_Timer_Update_Vlue+1)^(0+128),w
  2520  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  2521  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  2522  07D8  008F               	movwf	15	;volatile
  2523  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  2524  07DA  1303               	bcf	3,6	;RP1=0, select bank1
  2525  07DB  086E               	movf	_Timer_Update_Vlue^(0+128),w
  2526  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  2527  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  2528  07DE  008E               	movwf	14	;volatile
  2529                           
  2530                           ;TIMER.c: 44: }
  2531  07DF  2FE6               	goto	l324
  2532  07E0                     l322:
  2533                           
  2534                           ;TIMER.c: 45: else;TIMER.c: 46: {;TIMER.c: 47: ((TMR1) = (55536));
  2535  07E0  30D8               	movlw	216
  2536  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  2537  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  2538  07E3  008F               	movwf	15	;volatile
  2539  07E4  30F0               	movlw	240
  2540  07E5  008E               	movwf	14	;volatile
  2541  07E6                     l324:
  2542  07E6  0008               	return
  2543  07E7                     __end_of_Timer_update_reg:
  2544                           
  2545                           	psect	text6
  2546  1744                     __ptext6:	
  2547 ;; *************** function ___xxtofl *****************
  2548 ;; Defined at:
  2549 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  sign            1    wreg     unsigned char 
  2552 ;;  val             4    0[BANK1 ] long 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  sign            1    8[BANK1 ] unsigned char 
  2555 ;;  arg             4   10[BANK1 ] unsigned long 
  2556 ;;  exp             1    9[BANK1 ] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  4    0[BANK1 ] unsigned char 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, btemp+1
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2566 ;;      Params:         0       0       4       0       0
  2567 ;;      Locals:         0       0       6       0       0
  2568 ;;      Temps:          0       0       4       0       0
  2569 ;;      Totals:         0       0      14       0       0
  2570 ;;Total ram usage:       14 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    7
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_Timer_update_reg
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           
  2581                           ;psect for function ___xxtofl
  2582  1744                     ___xxtofl:
  2583                           
  2584                           ;incstack = 0
  2585 ;; hardware stack exceeded
  2586                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  2587                           ;___xxtofl@sign stored from wreg
  2588  1744  1683               	bsf	3,5	;RP0=1, select bank1
  2589  1745  1303               	bcf	3,6	;RP1=0, select bank1
  2590  1746  00A8               	movwf	___xxtofl@sign^(0+128)
  2591  1747                     l5206:
  2592  1747  0828               	movf	___xxtofl@sign^(0+128),w
  2593  1748  1903               	btfsc	3,2
  2594  1749  2F4B               	goto	u8281
  2595  174A  2F4C               	goto	u8280
  2596  174B                     u8281:
  2597  174B  2F60               	goto	l5212
  2598  174C                     u8280:
  2599  174C                     l5208:
  2600  174C  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  2601  174D  2F4F               	goto	u8291
  2602  174E  2F50               	goto	u8290
  2603  174F                     u8291:
  2604  174F  2F60               	goto	l5212
  2605  1750                     u8290:
  2606  1750                     l5210:
  2607  1750  0920               	comf	___xxtofl@val^(0+128),w
  2608  1751  00AA               	movwf	___xxtofl@arg^(0+128)
  2609  1752  0921               	comf	(___xxtofl@val^(0+128)+1),w
  2610  1753  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  2611  1754  0922               	comf	(___xxtofl@val^(0+128)+2),w
  2612  1755  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  2613  1756  0923               	comf	(___xxtofl@val^(0+128)+3),w
  2614  1757  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  2615  1758  0AAA               	incf	___xxtofl@arg^(0+128),f
  2616  1759  1903               	skipnz
  2617  175A  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
  2618  175B  1903               	skipnz
  2619  175C  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
  2620  175D  1903               	skipnz
  2621  175E  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
  2622  175F  2F68               	goto	l1129
  2623  1760                     l5212:
  2624  1760  0823               	movf	(___xxtofl@val+3)^(0+128),w
  2625  1761  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  2626  1762  0822               	movf	(___xxtofl@val+2)^(0+128),w
  2627  1763  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  2628  1764  0821               	movf	(___xxtofl@val+1)^(0+128),w
  2629  1765  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  2630  1766  0820               	movf	___xxtofl@val^(0+128),w
  2631  1767  00AA               	movwf	___xxtofl@arg^(0+128)
  2632  1768                     l1129:
  2633  1768  0823               	movf	(___xxtofl@val+3)^(0+128),w
  2634  1769  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
  2635  176A  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
  2636  176B  0420               	iorwf	___xxtofl@val^(0+128),w
  2637  176C  1D03               	skipz
  2638  176D  2F6F               	goto	u8301
  2639  176E  2F70               	goto	u8300
  2640  176F                     u8301:
  2641  176F  2F79               	goto	l5218
  2642  1770                     u8300:
  2643  1770                     l5214:
  2644  1770  3000               	movlw	0
  2645  1771  00A3               	movwf	(?___xxtofl+3)^(0+128)
  2646  1772  3000               	movlw	0
  2647  1773  00A2               	movwf	(?___xxtofl+2)^(0+128)
  2648  1774  3000               	movlw	0
  2649  1775  00A1               	movwf	(?___xxtofl+1)^(0+128)
  2650  1776  3000               	movlw	0
  2651  1777  00A0               	movwf	?___xxtofl^(0+128)
  2652  1778  2FFF               	goto	l1131
  2653  1779                     l5218:
  2654  1779  3096               	movlw	150
  2655  177A  00FF               	movwf	btemp+1
  2656  177B  087F               	movf	btemp+1,w
  2657  177C  00A9               	movwf	___xxtofl@exp^(0+128)
  2658  177D  2F8B               	goto	l5224
  2659  177E                     l5220:
  2660  177E  3001               	movlw	1
  2661  177F  00FF               	movwf	btemp+1
  2662  1780  087F               	movf	btemp+1,w
  2663  1781  07A9               	addwf	___xxtofl@exp^(0+128),f
  2664  1782                     l5222:
  2665  1782  3001               	movlw	1
  2666  1783                     u8315:
  2667  1783  1003               	clrc
  2668  1784  0CAD               	rrf	(___xxtofl@arg+3)^(0+128),f
  2669  1785  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  2670  1786  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  2671  1787  0CAA               	rrf	___xxtofl@arg^(0+128),f
  2672  1788  3EFF               	addlw	-1
  2673  1789  1D03               	skipz
  2674  178A  2F83               	goto	u8315
  2675  178B                     l5224:
  2676  178B  30FE               	movlw	254
  2677  178C  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  2678  178D  1D03               	btfss	3,2
  2679  178E  2F90               	goto	u8321
  2680  178F  2F91               	goto	u8320
  2681  1790                     u8321:
  2682  1790  2F7E               	goto	l5220
  2683  1791                     u8320:
  2684  1791  2FAD               	goto	l5232
  2685  1792                     l5226:
  2686  1792  3001               	movlw	1
  2687  1793  00FF               	movwf	btemp+1
  2688  1794  087F               	movf	btemp+1,w
  2689  1795  07A9               	addwf	___xxtofl@exp^(0+128),f
  2690  1796                     l5228:
  2691  1796  3001               	movlw	1
  2692  1797  07AA               	addwf	___xxtofl@arg^(0+128),f
  2693  1798  3000               	movlw	0
  2694  1799  1803               	skipnc
  2695  179A  3001               	movlw	1
  2696  179B  07AB               	addwf	(___xxtofl@arg+1)^(0+128),f
  2697  179C  3000               	movlw	0
  2698  179D  1803               	skipnc
  2699  179E  3001               	movlw	1
  2700  179F  07AC               	addwf	(___xxtofl@arg+2)^(0+128),f
  2701  17A0  3000               	movlw	0
  2702  17A1  1803               	skipnc
  2703  17A2  3001               	movlw	1
  2704  17A3  07AD               	addwf	(___xxtofl@arg+3)^(0+128),f
  2705  17A4                     l5230:
  2706  17A4  3001               	movlw	1
  2707  17A5                     u8335:
  2708  17A5  1003               	clrc
  2709  17A6  0CAD               	rrf	(___xxtofl@arg+3)^(0+128),f
  2710  17A7  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  2711  17A8  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  2712  17A9  0CAA               	rrf	___xxtofl@arg^(0+128),f
  2713  17AA  3EFF               	addlw	-1
  2714  17AB  1D03               	skipz
  2715  17AC  2FA5               	goto	u8335
  2716  17AD                     l5232:
  2717  17AD  30FF               	movlw	255
  2718  17AE  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  2719  17AF  1D03               	btfss	3,2
  2720  17B0  2FB2               	goto	u8341
  2721  17B1  2FB3               	goto	u8340
  2722  17B2                     u8341:
  2723  17B2  2F92               	goto	l5226
  2724  17B3                     u8340:
  2725  17B3  2FBF               	goto	l5236
  2726  17B4                     l5234:
  2727  17B4  3001               	movlw	1
  2728  17B5  02A9               	subwf	___xxtofl@exp^(0+128),f
  2729  17B6  3001               	movlw	1
  2730  17B7  00A4               	movwf	??___xxtofl^(0+128)
  2731  17B8                     u8355:
  2732  17B8  1003               	clrc
  2733  17B9  0DAA               	rlf	___xxtofl@arg^(0+128),f
  2734  17BA  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
  2735  17BB  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
  2736  17BC  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
  2737  17BD  0BA4               	decfsz	??___xxtofl^(0+128),f
  2738  17BE  2FB8               	goto	u8355
  2739  17BF                     l5236:
  2740  17BF  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
  2741  17C0  2FC2               	goto	u8361
  2742  17C1  2FC3               	goto	u8360
  2743  17C2                     u8361:
  2744  17C2  2FC9               	goto	l1142
  2745  17C3                     u8360:
  2746  17C3                     l5238:
  2747  17C3  3002               	movlw	2
  2748  17C4  0229               	subwf	___xxtofl@exp^(0+128),w
  2749  17C5  1803               	skipnc
  2750  17C6  2FC8               	goto	u8371
  2751  17C7  2FC9               	goto	u8370
  2752  17C8                     u8371:
  2753  17C8  2FB4               	goto	l5234
  2754  17C9                     u8370:
  2755  17C9                     l1142:
  2756  17C9  1829               	btfsc	___xxtofl@exp^(0+128),0
  2757  17CA  2FCC               	goto	u8381
  2758  17CB  2FCD               	goto	u8380
  2759  17CC                     u8381:
  2760  17CC  2FD5               	goto	l1143
  2761  17CD                     u8380:
  2762  17CD                     l5240:
  2763  17CD  30FF               	movlw	255
  2764  17CE  05AA               	andwf	___xxtofl@arg^(0+128),f
  2765  17CF  30FF               	movlw	255
  2766  17D0  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
  2767  17D1  307F               	movlw	127
  2768  17D2  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
  2769  17D3  30FF               	movlw	255
  2770  17D4  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
  2771  17D5                     l1143:
  2772  17D5  1003               	clrc
  2773  17D6  0CA9               	rrf	___xxtofl@exp^(0+128),f
  2774  17D7                     l5242:
  2775  17D7  0829               	movf	___xxtofl@exp^(0+128),w
  2776  17D8  00A4               	movwf	??___xxtofl^(0+128)
  2777  17D9  01A5               	clrf	(??___xxtofl^(0+128)+1)
  2778  17DA  01A6               	clrf	(??___xxtofl^(0+128)+2)
  2779  17DB  01A7               	clrf	(??___xxtofl^(0+128)+3)
  2780  17DC  3018               	movlw	24
  2781  17DD                     u8395:
  2782  17DD  1003               	clrc
  2783  17DE  0DA4               	rlf	??___xxtofl^(0+128),f
  2784  17DF  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
  2785  17E0  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
  2786  17E1  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
  2787  17E2                     u8390:
  2788  17E2  3EFF               	addlw	-1
  2789  17E3  1D03               	skipz
  2790  17E4  2FDD               	goto	u8395
  2791  17E5  0824               	movf	??___xxtofl^(0+128),w
  2792  17E6  04AA               	iorwf	___xxtofl@arg^(0+128),f
  2793  17E7  0825               	movf	(??___xxtofl+1)^(0+128),w
  2794  17E8  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
  2795  17E9  0826               	movf	(??___xxtofl+2)^(0+128),w
  2796  17EA  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
  2797  17EB  0827               	movf	(??___xxtofl+3)^(0+128),w
  2798  17EC  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
  2799  17ED                     l5244:
  2800  17ED  0828               	movf	___xxtofl@sign^(0+128),w
  2801  17EE  1903               	btfsc	3,2
  2802  17EF  2FF1               	goto	u8401
  2803  17F0  2FF2               	goto	u8400
  2804  17F1                     u8401:
  2805  17F1  2FF7               	goto	l5250
  2806  17F2                     u8400:
  2807  17F2                     l5246:
  2808  17F2  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  2809  17F3  2FF5               	goto	u8411
  2810  17F4  2FF6               	goto	u8410
  2811  17F5                     u8411:
  2812  17F5  2FF7               	goto	l5250
  2813  17F6                     u8410:
  2814  17F6                     l5248:
  2815  17F6  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
  2816  17F7                     l5250:
  2817  17F7  082D               	movf	(___xxtofl@arg+3)^(0+128),w
  2818  17F8  00A3               	movwf	(?___xxtofl+3)^(0+128)
  2819  17F9  082C               	movf	(___xxtofl@arg+2)^(0+128),w
  2820  17FA  00A2               	movwf	(?___xxtofl+2)^(0+128)
  2821  17FB  082B               	movf	(___xxtofl@arg+1)^(0+128),w
  2822  17FC  00A1               	movwf	(?___xxtofl+1)^(0+128)
  2823  17FD  082A               	movf	___xxtofl@arg^(0+128),w
  2824  17FE  00A0               	movwf	?___xxtofl^(0+128)
  2825  17FF                     l1131:
  2826  17FF  0008               	return
  2827  1800                     __end_of___xxtofl:
  2828                           
  2829                           	psect	text7
  2830  15EC                     __ptext7:	
  2831 ;; *************** function ___fltol *****************
  2832 ;; Defined at:
  2833 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  f1              4   74[BANK1 ] unsigned char 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  exp1            1    5[BANK3 ] unsigned char 
  2838 ;;  sign1           1    4[BANK3 ] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  4   74[BANK1 ] long 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0, btemp+1
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2848 ;;      Params:         0       0       4       0       0
  2849 ;;      Locals:         0       0       0       2       0
  2850 ;;      Temps:          0       0       0       4       0
  2851 ;;      Totals:         0       0       4       6       0
  2852 ;;Total ram usage:       10 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    7
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_Timer_update_reg
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           
  2863                           ;psect for function ___fltol
  2864  15EC                     ___fltol:
  2865  15EC                     l4876:	
  2866                           ;incstack = 0
  2867 ;; hardware stack exceeded
  2868                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  2869                           
  2870  15EC  1003               	clrc
  2871  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  2872  15EE  1303               	bcf	3,6	;RP1=0, select bank1
  2873  15EF  0D6C               	rlf	(___fltol@f1+2)^(0+128),w
  2874  15F0  0D6D               	rlf	(___fltol@f1+3)^(0+128),w
  2875  15F1  00FF               	movwf	btemp+1
  2876  15F2  087F               	movf	btemp+1,w
  2877  15F3  1683               	bsf	3,5	;RP0=1, select bank3
  2878  15F4  1703               	bsf	3,6	;RP1=1, select bank3
  2879  15F5  00C2               	movwf	___fltol@exp1^(0+384)
  2880  15F6  0842               	movf	___fltol@exp1^(0+384),w
  2881  15F7  1D03               	btfss	3,2
  2882  15F8  2DFA               	goto	u7521
  2883  15F9  2DFB               	goto	u7520
  2884  15FA                     u7521:
  2885  15FA  2E06               	goto	l4882
  2886  15FB                     u7520:
  2887  15FB                     l4878:
  2888  15FB  3000               	movlw	0
  2889  15FC  1683               	bsf	3,5	;RP0=1, select bank1
  2890  15FD  1303               	bcf	3,6	;RP1=0, select bank1
  2891  15FE  00ED               	movwf	(?___fltol+3)^(0+128)
  2892  15FF  3000               	movlw	0
  2893  1600  00EC               	movwf	(?___fltol+2)^(0+128)
  2894  1601  3000               	movlw	0
  2895  1602  00EB               	movwf	(?___fltol+1)^(0+128)
  2896  1603  3000               	movlw	0
  2897  1604  00EA               	movwf	?___fltol^(0+128)
  2898  1605  2E89               	goto	l882
  2899  1606                     l4882:
  2900  1606  1683               	bsf	3,5	;RP0=1, select bank1
  2901  1607  1303               	bcf	3,6	;RP1=0, select bank1
  2902  1608  086A               	movf	___fltol@f1^(0+128),w
  2903  1609  1683               	bsf	3,5	;RP0=1, select bank3
  2904  160A  1703               	bsf	3,6	;RP1=1, select bank3
  2905  160B  00BD               	movwf	??___fltol^(0+384)
  2906  160C  1683               	bsf	3,5	;RP0=1, select bank1
  2907  160D  1303               	bcf	3,6	;RP1=0, select bank1
  2908  160E  086B               	movf	(___fltol@f1+1)^(0+128),w
  2909  160F  1683               	bsf	3,5	;RP0=1, select bank3
  2910  1610  1703               	bsf	3,6	;RP1=1, select bank3
  2911  1611  00BE               	movwf	(??___fltol^(0+384)+1)
  2912  1612  1683               	bsf	3,5	;RP0=1, select bank1
  2913  1613  1303               	bcf	3,6	;RP1=0, select bank1
  2914  1614  086C               	movf	(___fltol@f1+2)^(0+128),w
  2915  1615  1683               	bsf	3,5	;RP0=1, select bank3
  2916  1616  1703               	bsf	3,6	;RP1=1, select bank3
  2917  1617  00BF               	movwf	(??___fltol^(0+384)+2)
  2918  1618  1683               	bsf	3,5	;RP0=1, select bank1
  2919  1619  1303               	bcf	3,6	;RP1=0, select bank1
  2920  161A  086D               	movf	(___fltol@f1+3)^(0+128),w
  2921  161B  1683               	bsf	3,5	;RP0=1, select bank3
  2922  161C  1703               	bsf	3,6	;RP1=1, select bank3
  2923  161D  00C0               	movwf	(??___fltol^(0+384)+3)
  2924  161E  301F               	movlw	31
  2925  161F                     u7535:
  2926  161F  1003               	clrc
  2927  1620  0CC0               	rrf	(??___fltol^(0+384)+3),f
  2928  1621  0CBF               	rrf	(??___fltol^(0+384)+2),f
  2929  1622  0CBE               	rrf	(??___fltol^(0+384)+1),f
  2930  1623  0CBD               	rrf	??___fltol^(0+384),f
  2931  1624                     u7530:
  2932  1624  3EFF               	addlw	-1
  2933  1625  1D03               	skipz
  2934  1626  2E1F               	goto	u7535
  2935  1627  083D               	movf	??___fltol^(0+384),w
  2936  1628  00FF               	movwf	btemp+1
  2937  1629  087F               	movf	btemp+1,w
  2938  162A  00C1               	movwf	___fltol@sign1^(0+384)
  2939  162B                     l4884:
  2940  162B  1683               	bsf	3,5	;RP0=1, select bank1
  2941  162C  1303               	bcf	3,6	;RP1=0, select bank1
  2942  162D  17EC               	bsf	(___fltol@f1^(0+128)+2),7
  2943  162E                     l4886:
  2944  162E  30FF               	movlw	255
  2945  162F  05EA               	andwf	___fltol@f1^(0+128),f
  2946  1630  30FF               	movlw	255
  2947  1631  05EB               	andwf	(___fltol@f1+1)^(0+128),f
  2948  1632  30FF               	movlw	255
  2949  1633  05EC               	andwf	(___fltol@f1+2)^(0+128),f
  2950  1634  3000               	movlw	0
  2951  1635  05ED               	andwf	(___fltol@f1+3)^(0+128),f
  2952  1636                     l4888:
  2953  1636  3096               	movlw	150
  2954  1637  1683               	bsf	3,5	;RP0=1, select bank3
  2955  1638  1703               	bsf	3,6	;RP1=1, select bank3
  2956  1639  02C2               	subwf	___fltol@exp1^(0+384),f
  2957  163A                     l4890:
  2958  163A  1FC2               	btfss	___fltol@exp1^(0+384),7
  2959  163B  2E3D               	goto	u7541
  2960  163C  2E3E               	goto	u7540
  2961  163D                     u7541:
  2962  163D  2E5C               	goto	l4902
  2963  163E                     u7540:
  2964  163E                     l4892:
  2965  163E  0842               	movf	___fltol@exp1^(0+384),w
  2966  163F  3A80               	xorlw	128
  2967  1640  3E97               	addlw	151
  2968  1641  1803               	skipnc
  2969  1642  2E44               	goto	u7551
  2970  1643  2E45               	goto	u7550
  2971  1644                     u7551:
  2972  1644  2E46               	goto	l4898
  2973  1645                     u7550:
  2974  1645  2DFB               	goto	l4878
  2975  1646                     l4898:
  2976  1646  3001               	movlw	1
  2977  1647                     u7565:
  2978  1647  1003               	clrc
  2979  1648  1683               	bsf	3,5	;RP0=1, select bank1
  2980  1649  1303               	bcf	3,6	;RP1=0, select bank1
  2981  164A  0CED               	rrf	(___fltol@f1+3)^(0+128),f
  2982  164B  0CEC               	rrf	(___fltol@f1+2)^(0+128),f
  2983  164C  0CEB               	rrf	(___fltol@f1+1)^(0+128),f
  2984  164D  0CEA               	rrf	___fltol@f1^(0+128),f
  2985  164E  3EFF               	addlw	-1
  2986  164F  1D03               	skipz
  2987  1650  2E47               	goto	u7565
  2988  1651                     l4900:
  2989  1651  3001               	movlw	1
  2990  1652  00FF               	movwf	btemp+1
  2991  1653  087F               	movf	btemp+1,w
  2992  1654  1683               	bsf	3,5	;RP0=1, select bank3
  2993  1655  1703               	bsf	3,6	;RP1=1, select bank3
  2994  1656  07C2               	addwf	___fltol@exp1^(0+384),f
  2995  1657  1D03               	btfss	3,2
  2996  1658  2E5A               	goto	u7571
  2997  1659  2E5B               	goto	u7570
  2998  165A                     u7571:
  2999  165A  2E46               	goto	l4898
  3000  165B                     u7570:
  3001  165B  2E77               	goto	l4910
  3002  165C                     l4902:
  3003  165C  3020               	movlw	32
  3004  165D  0242               	subwf	___fltol@exp1^(0+384),w
  3005  165E  1C03               	skipc
  3006  165F  2E61               	goto	u7581
  3007  1660  2E62               	goto	u7580
  3008  1661                     u7581:
  3009  1661  2E72               	goto	l889
  3010  1662                     u7580:
  3011  1662  2DFB               	goto	l4878
  3012  1663                     l4908:
  3013  1663  3001               	movlw	1
  3014  1664  00BD               	movwf	??___fltol^(0+384)
  3015  1665                     u7595:
  3016  1665  1003               	clrc
  3017  1666  1683               	bsf	3,5	;RP0=1, select bank1
  3018  1667  1303               	bcf	3,6	;RP1=0, select bank1
  3019  1668  0DEA               	rlf	___fltol@f1^(0+128),f
  3020  1669  0DEB               	rlf	(___fltol@f1+1)^(0+128),f
  3021  166A  0DEC               	rlf	(___fltol@f1+2)^(0+128),f
  3022  166B  0DED               	rlf	(___fltol@f1+3)^(0+128),f
  3023  166C  1683               	bsf	3,5	;RP0=1, select bank3
  3024  166D  1703               	bsf	3,6	;RP1=1, select bank3
  3025  166E  0BBD               	decfsz	??___fltol^(0+384),f
  3026  166F  2E65               	goto	u7595
  3027  1670  3001               	movlw	1
  3028  1671  02C2               	subwf	___fltol@exp1^(0+384),f
  3029  1672                     l889:
  3030  1672  0842               	movf	___fltol@exp1^(0+384),w
  3031  1673  1D03               	btfss	3,2
  3032  1674  2E76               	goto	u7601
  3033  1675  2E77               	goto	u7600
  3034  1676                     u7601:
  3035  1676  2E63               	goto	l4908
  3036  1677                     u7600:
  3037  1677                     l4910:
  3038  1677  0841               	movf	___fltol@sign1^(0+384),w
  3039  1678  1903               	btfsc	3,2
  3040  1679  2E7B               	goto	u7611
  3041  167A  2E7C               	goto	u7610
  3042  167B                     u7611:
  3043  167B  2E89               	goto	l892
  3044  167C                     u7610:
  3045  167C                     l4912:
  3046  167C  1683               	bsf	3,5	;RP0=1, select bank1
  3047  167D  1303               	bcf	3,6	;RP1=0, select bank1
  3048  167E  09EA               	comf	___fltol@f1^(0+128),f
  3049  167F  09EB               	comf	(___fltol@f1+1)^(0+128),f
  3050  1680  09EC               	comf	(___fltol@f1+2)^(0+128),f
  3051  1681  09ED               	comf	(___fltol@f1+3)^(0+128),f
  3052  1682  0AEA               	incf	___fltol@f1^(0+128),f
  3053  1683  1903               	skipnz
  3054  1684  0AEB               	incf	(___fltol@f1+1)^(0+128),f
  3055  1685  1903               	skipnz
  3056  1686  0AEC               	incf	(___fltol@f1+2)^(0+128),f
  3057  1687  1903               	skipnz
  3058  1688  0AED               	incf	(___fltol@f1+3)^(0+128),f
  3059  1689                     l892:
  3060  1689                     l882:
  3061  1689  0008               	return
  3062  168A                     __end_of___fltol:
  3063                           
  3064                           	psect	text8
  3065  1DF4                     __ptext8:	
  3066 ;; *************** function ___flsub *****************
  3067 ;; Defined at:
  3068 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  a               4   66[BANK1 ] long 
  3071 ;;  b               4   70[BANK1 ] long 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  4   66[BANK1 ] long 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         0       0       8       0       0
  3084 ;;      Locals:         0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0
  3086 ;;      Totals:         0       0       8       0       0
  3087 ;;Total ram usage:        8 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    8
  3090 ;; This function calls:
  3091 ;;		___fladd
  3092 ;; This function is called by:
  3093 ;;		_Timer_update_reg
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function ___flsub
  3099  1DF4                     ___flsub:
  3100  1DF4                     l4914:	
  3101                           ;incstack = 0
  3102 ;; hardware stack exceeded
  3103                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3104                           
  3105  1DF4  3080               	movlw	128
  3106  1DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3107  1DF6  1303               	bcf	3,6	;RP1=0, select bank1
  3108  1DF7  06E5               	xorwf	(___flsub@a+3)^(0+128),f
  3109  1DF8                     l4916:
  3110  1DF8  0869               	movf	(___flsub@b+3)^(0+128),w
  3111  1DF9  00A3               	movwf	(___fladd@b+3)^(0+128)
  3112  1DFA  0868               	movf	(___flsub@b+2)^(0+128),w
  3113  1DFB  00A2               	movwf	(___fladd@b+2)^(0+128)
  3114  1DFC  0867               	movf	(___flsub@b+1)^(0+128),w
  3115  1DFD  00A1               	movwf	(___fladd@b+1)^(0+128)
  3116  1DFE  0866               	movf	___flsub@b^(0+128),w
  3117  1DFF  00A0               	movwf	___fladd@b^(0+128)
  3118  1E00  0865               	movf	(___flsub@a+3)^(0+128),w
  3119  1E01  00A7               	movwf	(___fladd@a+3)^(0+128)
  3120  1E02  0864               	movf	(___flsub@a+2)^(0+128),w
  3121  1E03  00A6               	movwf	(___fladd@a+2)^(0+128)
  3122  1E04  0863               	movf	(___flsub@a+1)^(0+128),w
  3123  1E05  00A5               	movwf	(___fladd@a+1)^(0+128)
  3124  1E06  0862               	movf	___flsub@a^(0+128),w
  3125  1E07  00A4               	movwf	___fladd@a^(0+128)
  3126  1E08  120A  158A  2578  160A  158A  	fcall	___fladd
  3127  1E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3128  1E0E  1303               	bcf	3,6	;RP1=0, select bank1
  3129  1E0F  0823               	movf	(?___fladd+3)^(0+128),w
  3130  1E10  00E5               	movwf	(?___flsub+3)^(0+128)
  3131  1E11  0822               	movf	(?___fladd+2)^(0+128),w
  3132  1E12  00E4               	movwf	(?___flsub+2)^(0+128)
  3133  1E13  0821               	movf	(?___fladd+1)^(0+128),w
  3134  1E14  00E3               	movwf	(?___flsub+1)^(0+128)
  3135  1E15  0820               	movf	?___fladd^(0+128),w
  3136  1E16  00E2               	movwf	?___flsub^(0+128)
  3137  1E17                     l1035:
  3138  1E17  0008               	return
  3139  1E18                     __end_of___flsub:
  3140                           
  3141                           	psect	text9
  3142  0D78                     __ptext9:	
  3143 ;; *************** function ___fladd *****************
  3144 ;; Defined at:
  3145 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  b               4    0[BANK1 ] long 
  3148 ;;  a               4    4[BANK1 ] long 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  grs             1   19[BANK1 ] unsigned char 
  3151 ;;  bexp            1   18[BANK1 ] unsigned char 
  3152 ;;  aexp            1   17[BANK1 ] unsigned char 
  3153 ;;  signs           1   16[BANK1 ] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  4    0[BANK1 ] unsigned char 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, btemp+1
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3163 ;;      Params:         0       0       8       0       0
  3164 ;;      Locals:         0       0       4       0       0
  3165 ;;      Temps:          0       0       8       0       0
  3166 ;;      Totals:         0       0      20       0       0
  3167 ;;Total ram usage:       20 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    7
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		___flsub
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           
  3178                           ;psect for function ___fladd
  3179  0D78                     ___fladd:
  3180  0D78                     l4660:	
  3181                           ;incstack = 0
  3182 ;; hardware stack exceeded
  3183                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3184                           
  3185  0D78  1683               	bsf	3,5	;RP0=1, select bank1
  3186  0D79  1303               	bcf	3,6	;RP1=0, select bank1
  3187  0D7A  0823               	movf	(___fladd@b^(0+128)+3),w
  3188  0D7B  3980               	andlw	128
  3189  0D7C  00FF               	movwf	btemp+1
  3190  0D7D  087F               	movf	btemp+1,w
  3191  0D7E  00B0               	movwf	___fladd@signs^(0+128)
  3192  0D7F                     l4662:
  3193  0D7F  0823               	movf	(___fladd@b^(0+128)+3),w
  3194  0D80  00A8               	movwf	??___fladd^(0+128)
  3195  0D81  0728               	addwf	??___fladd^(0+128),w
  3196  0D82  00FF               	movwf	btemp+1
  3197  0D83  087F               	movf	btemp+1,w
  3198  0D84  00B2               	movwf	___fladd@bexp^(0+128)
  3199  0D85                     l4664:
  3200  0D85  1FA2               	btfss	(___fladd@b^(0+128)+2),7
  3201  0D86  2D88               	goto	u7031
  3202  0D87  2D89               	goto	u7030
  3203  0D88                     u7031:
  3204  0D88  2D8A               	goto	l4668
  3205  0D89                     u7030:
  3206  0D89                     l4666:
  3207  0D89  1432               	bsf	___fladd@bexp^(0+128),0
  3208  0D8A                     l4668:
  3209  0D8A  0832               	movf	___fladd@bexp^(0+128),w
  3210  0D8B  1903               	btfsc	3,2
  3211  0D8C  2D8E               	goto	u7041
  3212  0D8D  2D8F               	goto	u7040
  3213  0D8E                     u7041:
  3214  0D8E  2D9F               	goto	l4678
  3215  0D8F                     u7040:
  3216  0D8F                     l4670:
  3217  0D8F  0A32               	incf	___fladd@bexp^(0+128),w
  3218  0D90  1D03               	btfss	3,2
  3219  0D91  2D93               	goto	u7051
  3220  0D92  2D94               	goto	u7050
  3221  0D93                     u7051:
  3222  0D93  2D9C               	goto	l4674
  3223  0D94                     u7050:
  3224  0D94                     l4672:
  3225  0D94  3000               	movlw	0
  3226  0D95  00A3               	movwf	(___fladd@b+3)^(0+128)
  3227  0D96  3000               	movlw	0
  3228  0D97  00A2               	movwf	(___fladd@b+2)^(0+128)
  3229  0D98  3000               	movlw	0
  3230  0D99  00A1               	movwf	(___fladd@b+1)^(0+128)
  3231  0D9A  3000               	movlw	0
  3232  0D9B  00A0               	movwf	___fladd@b^(0+128)
  3233  0D9C                     l4674:
  3234  0D9C  17A2               	bsf	(___fladd@b^(0+128)+2),7
  3235  0D9D                     l4676:
  3236  0D9D  01A3               	clrf	(___fladd@b^(0+128)+3)
  3237  0D9E  2DA7               	goto	l4680
  3238  0D9F                     l4678:
  3239  0D9F  3000               	movlw	0
  3240  0DA0  00A3               	movwf	(___fladd@b+3)^(0+128)
  3241  0DA1  3000               	movlw	0
  3242  0DA2  00A2               	movwf	(___fladd@b+2)^(0+128)
  3243  0DA3  3000               	movlw	0
  3244  0DA4  00A1               	movwf	(___fladd@b+1)^(0+128)
  3245  0DA5  3000               	movlw	0
  3246  0DA6  00A0               	movwf	___fladd@b^(0+128)
  3247  0DA7                     l4680:
  3248  0DA7  0827               	movf	(___fladd@a^(0+128)+3),w
  3249  0DA8  3980               	andlw	128
  3250  0DA9  00FF               	movwf	btemp+1
  3251  0DAA  087F               	movf	btemp+1,w
  3252  0DAB  00B1               	movwf	___fladd@aexp^(0+128)
  3253  0DAC                     l4682:
  3254  0DAC  0831               	movf	___fladd@aexp^(0+128),w
  3255  0DAD  0630               	xorwf	___fladd@signs^(0+128),w
  3256  0DAE  1903               	skipnz
  3257  0DAF  2DB1               	goto	u7061
  3258  0DB0  2DB2               	goto	u7060
  3259  0DB1                     u7061:
  3260  0DB1  2DB3               	goto	l4686
  3261  0DB2                     u7060:
  3262  0DB2                     l4684:
  3263  0DB2  1730               	bsf	___fladd@signs^(0+128),6
  3264  0DB3                     l4686:
  3265  0DB3  0827               	movf	(___fladd@a^(0+128)+3),w
  3266  0DB4  00A8               	movwf	??___fladd^(0+128)
  3267  0DB5  0728               	addwf	??___fladd^(0+128),w
  3268  0DB6  00FF               	movwf	btemp+1
  3269  0DB7  087F               	movf	btemp+1,w
  3270  0DB8  00B1               	movwf	___fladd@aexp^(0+128)
  3271  0DB9                     l4688:
  3272  0DB9  1FA6               	btfss	(___fladd@a^(0+128)+2),7
  3273  0DBA  2DBC               	goto	u7071
  3274  0DBB  2DBD               	goto	u7070
  3275  0DBC                     u7071:
  3276  0DBC  2DBE               	goto	l4692
  3277  0DBD                     u7070:
  3278  0DBD                     l4690:
  3279  0DBD  1431               	bsf	___fladd@aexp^(0+128),0
  3280  0DBE                     l4692:
  3281  0DBE  0831               	movf	___fladd@aexp^(0+128),w
  3282  0DBF  1903               	btfsc	3,2
  3283  0DC0  2DC2               	goto	u7081
  3284  0DC1  2DC3               	goto	u7080
  3285  0DC2                     u7081:
  3286  0DC2  2DD3               	goto	l4702
  3287  0DC3                     u7080:
  3288  0DC3                     l4694:
  3289  0DC3  0A31               	incf	___fladd@aexp^(0+128),w
  3290  0DC4  1D03               	btfss	3,2
  3291  0DC5  2DC7               	goto	u7091
  3292  0DC6  2DC8               	goto	u7090
  3293  0DC7                     u7091:
  3294  0DC7  2DD0               	goto	l4698
  3295  0DC8                     u7090:
  3296  0DC8                     l4696:
  3297  0DC8  3000               	movlw	0
  3298  0DC9  00A7               	movwf	(___fladd@a+3)^(0+128)
  3299  0DCA  3000               	movlw	0
  3300  0DCB  00A6               	movwf	(___fladd@a+2)^(0+128)
  3301  0DCC  3000               	movlw	0
  3302  0DCD  00A5               	movwf	(___fladd@a+1)^(0+128)
  3303  0DCE  3000               	movlw	0
  3304  0DCF  00A4               	movwf	___fladd@a^(0+128)
  3305  0DD0                     l4698:
  3306  0DD0  17A6               	bsf	(___fladd@a^(0+128)+2),7
  3307  0DD1                     l4700:
  3308  0DD1  01A7               	clrf	(___fladd@a^(0+128)+3)
  3309  0DD2  2DDB               	goto	l989
  3310  0DD3                     l4702:
  3311  0DD3  3000               	movlw	0
  3312  0DD4  00A7               	movwf	(___fladd@a+3)^(0+128)
  3313  0DD5  3000               	movlw	0
  3314  0DD6  00A6               	movwf	(___fladd@a+2)^(0+128)
  3315  0DD7  3000               	movlw	0
  3316  0DD8  00A5               	movwf	(___fladd@a+1)^(0+128)
  3317  0DD9  3000               	movlw	0
  3318  0DDA  00A4               	movwf	___fladd@a^(0+128)
  3319  0DDB                     l989:
  3320  0DDB  0832               	movf	___fladd@bexp^(0+128),w
  3321  0DDC  0231               	subwf	___fladd@aexp^(0+128),w
  3322  0DDD  1803               	skipnc
  3323  0DDE  2DE0               	goto	u7101
  3324  0DDF  2DE1               	goto	u7100
  3325  0DE0                     u7101:
  3326  0DE0  2E25               	goto	l4738
  3327  0DE1                     u7100:
  3328  0DE1                     l4704:
  3329  0DE1  1F30               	btfss	___fladd@signs^(0+128),6
  3330  0DE2  2DE4               	goto	u7111
  3331  0DE3  2DE5               	goto	u7110
  3332  0DE4                     u7111:
  3333  0DE4  2DE9               	goto	l4708
  3334  0DE5                     u7110:
  3335  0DE5                     l4706:
  3336  0DE5  3080               	movlw	128
  3337  0DE6  00FF               	movwf	btemp+1
  3338  0DE7  087F               	movf	btemp+1,w
  3339  0DE8  06B0               	xorwf	___fladd@signs^(0+128),f
  3340  0DE9                     l4708:
  3341  0DE9  0832               	movf	___fladd@bexp^(0+128),w
  3342  0DEA  00FF               	movwf	btemp+1
  3343  0DEB  087F               	movf	btemp+1,w
  3344  0DEC  00B3               	movwf	___fladd@grs^(0+128)
  3345  0DED                     l4710:
  3346  0DED  0831               	movf	___fladd@aexp^(0+128),w
  3347  0DEE  00FF               	movwf	btemp+1
  3348  0DEF  087F               	movf	btemp+1,w
  3349  0DF0  00B2               	movwf	___fladd@bexp^(0+128)
  3350  0DF1                     l4712:
  3351  0DF1  0833               	movf	___fladd@grs^(0+128),w
  3352  0DF2  00FF               	movwf	btemp+1
  3353  0DF3  087F               	movf	btemp+1,w
  3354  0DF4  00B1               	movwf	___fladd@aexp^(0+128)
  3355  0DF5                     l4714:
  3356  0DF5  0820               	movf	___fladd@b^(0+128),w
  3357  0DF6  00FF               	movwf	btemp+1
  3358  0DF7  087F               	movf	btemp+1,w
  3359  0DF8  00B3               	movwf	___fladd@grs^(0+128)
  3360  0DF9                     l4716:
  3361  0DF9  0824               	movf	___fladd@a^(0+128),w
  3362  0DFA  00FF               	movwf	btemp+1
  3363  0DFB  087F               	movf	btemp+1,w
  3364  0DFC  00A0               	movwf	___fladd@b^(0+128)
  3365  0DFD                     l4718:
  3366  0DFD  0833               	movf	___fladd@grs^(0+128),w
  3367  0DFE  00FF               	movwf	btemp+1
  3368  0DFF  087F               	movf	btemp+1,w
  3369  0E00  00A4               	movwf	___fladd@a^(0+128)
  3370  0E01                     l4720:
  3371  0E01  0821               	movf	(___fladd@b^(0+128)+1),w
  3372  0E02  00FF               	movwf	btemp+1
  3373  0E03  087F               	movf	btemp+1,w
  3374  0E04  00B3               	movwf	___fladd@grs^(0+128)
  3375  0E05                     l4722:
  3376  0E05  0825               	movf	(___fladd@a^(0+128)+1),w
  3377  0E06  00FF               	movwf	btemp+1
  3378  0E07  087F               	movf	btemp+1,w
  3379  0E08  00A1               	movwf	(___fladd@b^(0+128)+1)
  3380  0E09                     l4724:
  3381  0E09  0833               	movf	___fladd@grs^(0+128),w
  3382  0E0A  00FF               	movwf	btemp+1
  3383  0E0B  087F               	movf	btemp+1,w
  3384  0E0C  00A5               	movwf	(___fladd@a^(0+128)+1)
  3385  0E0D                     l4726:
  3386  0E0D  0822               	movf	(___fladd@b^(0+128)+2),w
  3387  0E0E  00FF               	movwf	btemp+1
  3388  0E0F  087F               	movf	btemp+1,w
  3389  0E10  00B3               	movwf	___fladd@grs^(0+128)
  3390  0E11                     l4728:
  3391  0E11  0826               	movf	(___fladd@a^(0+128)+2),w
  3392  0E12  00FF               	movwf	btemp+1
  3393  0E13  087F               	movf	btemp+1,w
  3394  0E14  00A2               	movwf	(___fladd@b^(0+128)+2)
  3395  0E15                     l4730:
  3396  0E15  0833               	movf	___fladd@grs^(0+128),w
  3397  0E16  00FF               	movwf	btemp+1
  3398  0E17  087F               	movf	btemp+1,w
  3399  0E18  00A6               	movwf	(___fladd@a^(0+128)+2)
  3400  0E19                     l4732:
  3401  0E19  0823               	movf	(___fladd@b^(0+128)+3),w
  3402  0E1A  00FF               	movwf	btemp+1
  3403  0E1B  087F               	movf	btemp+1,w
  3404  0E1C  00B3               	movwf	___fladd@grs^(0+128)
  3405  0E1D                     l4734:
  3406  0E1D  0827               	movf	(___fladd@a^(0+128)+3),w
  3407  0E1E  00FF               	movwf	btemp+1
  3408  0E1F  087F               	movf	btemp+1,w
  3409  0E20  00A3               	movwf	(___fladd@b^(0+128)+3)
  3410  0E21                     l4736:
  3411  0E21  0833               	movf	___fladd@grs^(0+128),w
  3412  0E22  00FF               	movwf	btemp+1
  3413  0E23  087F               	movf	btemp+1,w
  3414  0E24  00A7               	movwf	(___fladd@a^(0+128)+3)
  3415  0E25                     l4738:
  3416  0E25  01B3               	clrf	___fladd@grs^(0+128)
  3417  0E26                     l4740:
  3418  0E26  0831               	movf	___fladd@aexp^(0+128),w
  3419  0E27  00A8               	movwf	??___fladd^(0+128)
  3420  0E28  01A9               	clrf	(??___fladd^(0+128)+1)
  3421  0E29  0829               	movf	(??___fladd+1)^(0+128),w
  3422  0E2A  00AB               	movwf	((??___fladd+2)^(0+128)+1)
  3423  0E2B  0832               	movf	___fladd@bexp^(0+128),w
  3424  0E2C  0228               	subwf	??___fladd^(0+128),w
  3425  0E2D  00AA               	movwf	(??___fladd+2)^(0+128)
  3426  0E2E  1C03               	skipc
  3427  0E2F  03AB               	decf	((??___fladd+2)^(0+128)+1),f
  3428  0E30  082B               	movf	(??___fladd+3)^(0+128),w
  3429  0E31  3A80               	xorlw	128
  3430  0E32  00FF               	movwf	btemp+1
  3431  0E33  3080               	movlw	128
  3432  0E34  027F               	subwf	btemp+1,w
  3433  0E35  1D03               	skipz
  3434  0E36  2E39               	goto	u7125
  3435  0E37  301A               	movlw	26
  3436  0E38  022A               	subwf	(??___fladd+2)^(0+128),w
  3437  0E39                     u7125:
  3438  0E39  1C03               	skipc
  3439  0E3A  2E3C               	goto	u7121
  3440  0E3B  2E3D               	goto	u7120
  3441  0E3C                     u7121:
  3442  0E3C  2E7A               	goto	l4760
  3443  0E3D                     u7120:
  3444  0E3D                     l4742:
  3445  0E3D  1683               	bsf	3,5	;RP0=1, select bank1
  3446  0E3E  1303               	bcf	3,6	;RP1=0, select bank1
  3447  0E3F  0823               	movf	(___fladd@b+3)^(0+128),w
  3448  0E40  0422               	iorwf	(___fladd@b+2)^(0+128),w
  3449  0E41  0421               	iorwf	(___fladd@b+1)^(0+128),w
  3450  0E42  0420               	iorwf	___fladd@b^(0+128),w
  3451  0E43  1D03               	skipz
  3452  0E44  2E46               	goto	u7131
  3453  0E45  2E48               	goto	u7130
  3454  0E46                     u7131:
  3455  0E46  3001               	movlw	1
  3456  0E47  2E49               	goto	u7140
  3457  0E48                     u7130:
  3458  0E48  3000               	movlw	0
  3459  0E49                     u7140:
  3460  0E49  00FF               	movwf	btemp+1
  3461  0E4A  087F               	movf	btemp+1,w
  3462  0E4B  00B3               	movwf	___fladd@grs^(0+128)
  3463  0E4C                     l4744:
  3464  0E4C  3000               	movlw	0
  3465  0E4D  00A3               	movwf	(___fladd@b+3)^(0+128)
  3466  0E4E  3000               	movlw	0
  3467  0E4F  00A2               	movwf	(___fladd@b+2)^(0+128)
  3468  0E50  3000               	movlw	0
  3469  0E51  00A1               	movwf	(___fladd@b+1)^(0+128)
  3470  0E52  3000               	movlw	0
  3471  0E53  00A0               	movwf	___fladd@b^(0+128)
  3472  0E54                     l4746:
  3473  0E54  0831               	movf	___fladd@aexp^(0+128),w
  3474  0E55  00FF               	movwf	btemp+1
  3475  0E56  087F               	movf	btemp+1,w
  3476  0E57  00B2               	movwf	___fladd@bexp^(0+128)
  3477  0E58  2E82               	goto	l993
  3478  0E59                     l995:
  3479  0E59  1C33               	btfss	___fladd@grs^(0+128),0
  3480  0E5A  2E5C               	goto	u7151
  3481  0E5B  2E5D               	goto	u7150
  3482  0E5C                     u7151:
  3483  0E5C  2E66               	goto	l4750
  3484  0E5D                     u7150:
  3485  0E5D                     l4748:
  3486  0E5D  0833               	movf	___fladd@grs^(0+128),w
  3487  0E5E  00A8               	movwf	??___fladd^(0+128)
  3488  0E5F  1003               	clrc
  3489  0E60  0C28               	rrf	??___fladd^(0+128),w
  3490  0E61  3801               	iorlw	1
  3491  0E62  00FF               	movwf	btemp+1
  3492  0E63  087F               	movf	btemp+1,w
  3493  0E64  00B3               	movwf	___fladd@grs^(0+128)
  3494  0E65  2E68               	goto	l4752
  3495  0E66                     l4750:
  3496  0E66  1003               	clrc
  3497  0E67  0CB3               	rrf	___fladd@grs^(0+128),f
  3498  0E68                     l4752:
  3499  0E68  1C20               	btfss	___fladd@b^(0+128),0
  3500  0E69  2E6B               	goto	u7161
  3501  0E6A  2E6C               	goto	u7160
  3502  0E6B                     u7161:
  3503  0E6B  2E6D               	goto	l4756
  3504  0E6C                     u7160:
  3505  0E6C                     l4754:
  3506  0E6C  17B3               	bsf	___fladd@grs^(0+128),7
  3507  0E6D                     l4756:
  3508  0E6D  3001               	movlw	1
  3509  0E6E  00A8               	movwf	??___fladd^(0+128)
  3510  0E6F                     u7175:
  3511  0E6F  0D23               	rlf	(___fladd@b+3)^(0+128),w
  3512  0E70  0CA3               	rrf	(___fladd@b+3)^(0+128),f
  3513  0E71  0CA2               	rrf	(___fladd@b+2)^(0+128),f
  3514  0E72  0CA1               	rrf	(___fladd@b+1)^(0+128),f
  3515  0E73  0CA0               	rrf	___fladd@b^(0+128),f
  3516  0E74  0BA8               	decfsz	(??___fladd^(0+128))& (0+127),f
  3517  0E75  2E6F               	goto	u7175
  3518  0E76                     l4758:
  3519  0E76  3001               	movlw	1
  3520  0E77  00FF               	movwf	btemp+1
  3521  0E78  087F               	movf	btemp+1,w
  3522  0E79  07B2               	addwf	___fladd@bexp^(0+128),f
  3523  0E7A                     l4760:
  3524  0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  3525  0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  3526  0E7C  0831               	movf	___fladd@aexp^(0+128),w
  3527  0E7D  0232               	subwf	___fladd@bexp^(0+128),w
  3528  0E7E  1C03               	skipc
  3529  0E7F  2E81               	goto	u7181
  3530  0E80  2E82               	goto	u7180
  3531  0E81                     u7181:
  3532  0E81  2E59               	goto	l995
  3533  0E82                     u7180:
  3534  0E82                     l993:
  3535  0E82  1B30               	btfsc	___fladd@signs^(0+128),6
  3536  0E83  2E85               	goto	u7191
  3537  0E84  2E86               	goto	u7190
  3538  0E85                     u7191:
  3539  0E85  2ED1               	goto	l4786
  3540  0E86                     u7190:
  3541  0E86                     l4762:
  3542  0E86  0832               	movf	___fladd@bexp^(0+128),w
  3543  0E87  1D03               	btfss	3,2
  3544  0E88  2E8A               	goto	u7201
  3545  0E89  2E8B               	goto	u7200
  3546  0E8A                     u7201:
  3547  0E8A  2E94               	goto	l4768
  3548  0E8B                     u7200:
  3549  0E8B                     l4764:
  3550  0E8B  3000               	movlw	0
  3551  0E8C  00A3               	movwf	(?___fladd+3)^(0+128)
  3552  0E8D  3000               	movlw	0
  3553  0E8E  00A2               	movwf	(?___fladd+2)^(0+128)
  3554  0E8F  3000               	movlw	0
  3555  0E90  00A1               	movwf	(?___fladd+1)^(0+128)
  3556  0E91  3000               	movlw	0
  3557  0E92  00A0               	movwf	?___fladd^(0+128)
  3558  0E93  2FFF               	goto	l1002
  3559  0E94                     l4768:
  3560  0E94  0824               	movf	___fladd@a^(0+128),w
  3561  0E95  07A0               	addwf	___fladd@b^(0+128),f
  3562  0E96  0825               	movf	(___fladd@a+1)^(0+128),w
  3563  0E97  1103               	clrz
  3564  0E98  1803               	skipnc
  3565  0E99  3E01               	addlw	1
  3566  0E9A  1903               	skipnz
  3567  0E9B  2E9D               	goto	u7211
  3568  0E9C  07A1               	addwf	(___fladd@b+1)^(0+128),f
  3569  0E9D                     u7211:
  3570  0E9D  0826               	movf	(___fladd@a+2)^(0+128),w
  3571  0E9E  1103               	clrz
  3572  0E9F  1803               	skipnc
  3573  0EA0  3E01               	addlw	1
  3574  0EA1  1903               	skipnz
  3575  0EA2  2EA4               	goto	u7212
  3576  0EA3  07A2               	addwf	(___fladd@b+2)^(0+128),f
  3577  0EA4                     u7212:
  3578  0EA4  0827               	movf	(___fladd@a+3)^(0+128),w
  3579  0EA5  1103               	clrz
  3580  0EA6  1803               	skipnc
  3581  0EA7  3E01               	addlw	1
  3582  0EA8  1903               	skipnz
  3583  0EA9  2EAB               	goto	u7213
  3584  0EAA  07A3               	addwf	(___fladd@b+3)^(0+128),f
  3585  0EAB                     u7213:
  3586  0EAB                     l4770:
  3587  0EAB  1C23               	btfss	(___fladd@b+3)^(0+128),0
  3588  0EAC  2EAE               	goto	u7221
  3589  0EAD  2EAF               	goto	u7220
  3590  0EAE                     u7221:
  3591  0EAE  2F85               	goto	l4822
  3592  0EAF                     u7220:
  3593  0EAF                     l4772:
  3594  0EAF  1C33               	btfss	___fladd@grs^(0+128),0
  3595  0EB0  2EB2               	goto	u7231
  3596  0EB1  2EB3               	goto	u7230
  3597  0EB2                     u7231:
  3598  0EB2  2EBC               	goto	l4776
  3599  0EB3                     u7230:
  3600  0EB3                     l4774:
  3601  0EB3  0833               	movf	___fladd@grs^(0+128),w
  3602  0EB4  00A8               	movwf	??___fladd^(0+128)
  3603  0EB5  1003               	clrc
  3604  0EB6  0C28               	rrf	??___fladd^(0+128),w
  3605  0EB7  3801               	iorlw	1
  3606  0EB8  00FF               	movwf	btemp+1
  3607  0EB9  087F               	movf	btemp+1,w
  3608  0EBA  00B3               	movwf	___fladd@grs^(0+128)
  3609  0EBB  2EBE               	goto	l4778
  3610  0EBC                     l4776:
  3611  0EBC  1003               	clrc
  3612  0EBD  0CB3               	rrf	___fladd@grs^(0+128),f
  3613  0EBE                     l4778:
  3614  0EBE  1C20               	btfss	___fladd@b^(0+128),0
  3615  0EBF  2EC1               	goto	u7241
  3616  0EC0  2EC2               	goto	u7240
  3617  0EC1                     u7241:
  3618  0EC1  2EC3               	goto	l4782
  3619  0EC2                     u7240:
  3620  0EC2                     l4780:
  3621  0EC2  17B3               	bsf	___fladd@grs^(0+128),7
  3622  0EC3                     l4782:
  3623  0EC3  3001               	movlw	1
  3624  0EC4  00A8               	movwf	??___fladd^(0+128)
  3625  0EC5                     u7255:
  3626  0EC5  0D23               	rlf	(___fladd@b+3)^(0+128),w
  3627  0EC6  0CA3               	rrf	(___fladd@b+3)^(0+128),f
  3628  0EC7  0CA2               	rrf	(___fladd@b+2)^(0+128),f
  3629  0EC8  0CA1               	rrf	(___fladd@b+1)^(0+128),f
  3630  0EC9  0CA0               	rrf	___fladd@b^(0+128),f
  3631  0ECA  0BA8               	decfsz	(??___fladd^(0+128))& (0+127),f
  3632  0ECB  2EC5               	goto	u7255
  3633  0ECC                     l4784:
  3634  0ECC  3001               	movlw	1
  3635  0ECD  00FF               	movwf	btemp+1
  3636  0ECE  087F               	movf	btemp+1,w
  3637  0ECF  07B2               	addwf	___fladd@bexp^(0+128),f
  3638  0ED0  2F85               	goto	l4822
  3639  0ED1                     l4786:
  3640  0ED1  0823               	movf	(___fladd@b+3)^(0+128),w
  3641  0ED2  3A80               	xorlw	128
  3642  0ED3  00FF               	movwf	btemp+1
  3643  0ED4  0827               	movf	(___fladd@a+3)^(0+128),w
  3644  0ED5  3A80               	xorlw	128
  3645  0ED6  027F               	subwf	btemp+1,w
  3646  0ED7  1D03               	skipz
  3647  0ED8  2EE3               	goto	u7263
  3648  0ED9  0826               	movf	(___fladd@a+2)^(0+128),w
  3649  0EDA  0222               	subwf	(___fladd@b+2)^(0+128),w
  3650  0EDB  1D03               	skipz
  3651  0EDC  2EE3               	goto	u7263
  3652  0EDD  0825               	movf	(___fladd@a+1)^(0+128),w
  3653  0EDE  0221               	subwf	(___fladd@b+1)^(0+128),w
  3654  0EDF  1D03               	skipz
  3655  0EE0  2EE3               	goto	u7263
  3656  0EE1  0824               	movf	___fladd@a^(0+128),w
  3657  0EE2  0220               	subwf	___fladd@b^(0+128),w
  3658  0EE3                     u7263:
  3659  0EE3  1803               	skipnc
  3660  0EE4  2EE6               	goto	u7261
  3661  0EE5  2EE7               	goto	u7260
  3662  0EE6                     u7261:
  3663  0EE6  2F3F               	goto	l4798
  3664  0EE7                     u7260:
  3665  0EE7                     l4788:
  3666  0EE7  30FF               	movlw	255
  3667  0EE8  00A8               	movwf	??___fladd^(0+128)
  3668  0EE9  30FF               	movlw	255
  3669  0EEA  00A9               	movwf	(??___fladd^(0+128)+1)
  3670  0EEB  30FF               	movlw	255
  3671  0EEC  00AA               	movwf	(??___fladd^(0+128)+2)
  3672  0EED  30FF               	movlw	255
  3673  0EEE  00AB               	movwf	(??___fladd^(0+128)+3)
  3674  0EEF  0824               	movf	___fladd@a^(0+128),w
  3675  0EF0  00AC               	movwf	(??___fladd+4)^(0+128)
  3676  0EF1  0825               	movf	(___fladd@a+1)^(0+128),w
  3677  0EF2  00AD               	movwf	((??___fladd+4)^(0+128)+1)
  3678  0EF3  0826               	movf	(___fladd@a+2)^(0+128),w
  3679  0EF4  00AE               	movwf	((??___fladd+4)^(0+128)+2)
  3680  0EF5  0827               	movf	(___fladd@a+3)^(0+128),w
  3681  0EF6  00AF               	movwf	((??___fladd+4)^(0+128)+3)
  3682  0EF7  0820               	movf	___fladd@b^(0+128),w
  3683  0EF8  02AC               	subwf	(??___fladd+4)^(0+128),f
  3684  0EF9  0821               	movf	(___fladd@b+1)^(0+128),w
  3685  0EFA  1C03               	skipc
  3686  0EFB  0F21               	incfsz	(___fladd@b+1)^(0+128),w
  3687  0EFC  2EFE               	goto	u7271
  3688  0EFD  2EFF               	goto	u7272
  3689  0EFE                     u7271:
  3690  0EFE  02AD               	subwf	((??___fladd+4)^(0+128)+1),f
  3691  0EFF                     u7272:
  3692  0EFF  0822               	movf	(___fladd@b+2)^(0+128),w
  3693  0F00  1C03               	skipc
  3694  0F01  0F22               	incfsz	(___fladd@b+2)^(0+128),w
  3695  0F02  2F04               	goto	u7273
  3696  0F03  2F05               	goto	u7274
  3697  0F04                     u7273:
  3698  0F04  02AE               	subwf	((??___fladd+4)^(0+128)+2),f
  3699  0F05                     u7274:
  3700  0F05  0823               	movf	(___fladd@b+3)^(0+128),w
  3701  0F06  1C03               	skipc
  3702  0F07  0F23               	incfsz	(___fladd@b+3)^(0+128),w
  3703  0F08  2F0A               	goto	u7275
  3704  0F09  2F0B               	goto	u7276
  3705  0F0A                     u7275:
  3706  0F0A  02AF               	subwf	((??___fladd+4)^(0+128)+3),f
  3707  0F0B                     u7276:
  3708  0F0B  082C               	movf	(??___fladd+4)^(0+128),w
  3709  0F0C  07A8               	addwf	??___fladd^(0+128),f
  3710  0F0D  082D               	movf	(??___fladd+5)^(0+128),w
  3711  0F0E  1803               	skipnc
  3712  0F0F  0F2D               	incfsz	(??___fladd+5)^(0+128),w
  3713  0F10  2F12               	goto	u7280
  3714  0F11  2F13               	goto	u7281
  3715  0F12                     u7280:
  3716  0F12  07A9               	addwf	(??___fladd^(0+128)+1),f
  3717  0F13                     u7281:
  3718  0F13  082E               	movf	(??___fladd+6)^(0+128),w
  3719  0F14  1803               	skipnc
  3720  0F15  0F2E               	incfsz	(??___fladd+6)^(0+128),w
  3721  0F16  2F18               	goto	u7282
  3722  0F17  2F19               	goto	u7283
  3723  0F18                     u7282:
  3724  0F18  07AA               	addwf	(??___fladd^(0+128)+2),f
  3725  0F19                     u7283:
  3726  0F19  082F               	movf	(??___fladd+7)^(0+128),w
  3727  0F1A  1803               	skipnc
  3728  0F1B  0A2F               	incf	(??___fladd+7)^(0+128),w
  3729  0F1C  07AB               	addwf	(??___fladd^(0+128)+3),f
  3730  0F1D  082B               	movf	(??___fladd+3)^(0+128),w
  3731  0F1E  00A3               	movwf	(___fladd@b+3)^(0+128)
  3732  0F1F  082A               	movf	(??___fladd+2)^(0+128),w
  3733  0F20  00A2               	movwf	(___fladd@b+2)^(0+128)
  3734  0F21  0829               	movf	(??___fladd+1)^(0+128),w
  3735  0F22  00A1               	movwf	(___fladd@b+1)^(0+128)
  3736  0F23  0828               	movf	??___fladd^(0+128),w
  3737  0F24  00A0               	movwf	___fladd@b^(0+128)
  3738  0F25                     l4790:
  3739  0F25  3080               	movlw	128
  3740  0F26  00FF               	movwf	btemp+1
  3741  0F27  087F               	movf	btemp+1,w
  3742  0F28  06B0               	xorwf	___fladd@signs^(0+128),f
  3743  0F29                     l4792:
  3744  0F29  09B3               	comf	___fladd@grs^(0+128),f
  3745  0F2A  0AB3               	incf	___fladd@grs^(0+128),f
  3746  0F2B                     l4794:
  3747  0F2B  0833               	movf	___fladd@grs^(0+128),w
  3748  0F2C  1D03               	btfss	3,2
  3749  0F2D  2F2F               	goto	u7291
  3750  0F2E  2F30               	goto	u7290
  3751  0F2F                     u7291:
  3752  0F2F  2F4D               	goto	l1010
  3753  0F30                     u7290:
  3754  0F30                     l4796:
  3755  0F30  3001               	movlw	1
  3756  0F31  07A0               	addwf	___fladd@b^(0+128),f
  3757  0F32  3000               	movlw	0
  3758  0F33  1803               	skipnc
  3759  0F34  3001               	movlw	1
  3760  0F35  07A1               	addwf	(___fladd@b+1)^(0+128),f
  3761  0F36  3000               	movlw	0
  3762  0F37  1803               	skipnc
  3763  0F38  3001               	movlw	1
  3764  0F39  07A2               	addwf	(___fladd@b+2)^(0+128),f
  3765  0F3A  3000               	movlw	0
  3766  0F3B  1803               	skipnc
  3767  0F3C  3001               	movlw	1
  3768  0F3D  07A3               	addwf	(___fladd@b+3)^(0+128),f
  3769  0F3E  2F4D               	goto	l1010
  3770  0F3F                     l4798:
  3771  0F3F  0824               	movf	___fladd@a^(0+128),w
  3772  0F40  02A0               	subwf	___fladd@b^(0+128),f
  3773  0F41  0825               	movf	(___fladd@a+1)^(0+128),w
  3774  0F42  1C03               	skipc
  3775  0F43  0F25               	incfsz	(___fladd@a+1)^(0+128),w
  3776  0F44  02A1               	subwf	(___fladd@b+1)^(0+128),f
  3777  0F45  0826               	movf	(___fladd@a+2)^(0+128),w
  3778  0F46  1C03               	skipc
  3779  0F47  0F26               	incfsz	(___fladd@a+2)^(0+128),w
  3780  0F48  02A2               	subwf	(___fladd@b+2)^(0+128),f
  3781  0F49  0827               	movf	(___fladd@a+3)^(0+128),w
  3782  0F4A  1C03               	skipc
  3783  0F4B  0F27               	incfsz	(___fladd@a+3)^(0+128),w
  3784  0F4C  02A3               	subwf	(___fladd@b+3)^(0+128),f
  3785  0F4D                     l1010:
  3786  0F4D  0823               	movf	(___fladd@b+3)^(0+128),w
  3787  0F4E  0422               	iorwf	(___fladd@b+2)^(0+128),w
  3788  0F4F  0421               	iorwf	(___fladd@b+1)^(0+128),w
  3789  0F50  0420               	iorwf	___fladd@b^(0+128),w
  3790  0F51  1D03               	skipz
  3791  0F52  2F54               	goto	u7301
  3792  0F53  2F55               	goto	u7300
  3793  0F54                     u7301:
  3794  0F54  2F81               	goto	l4820
  3795  0F55                     u7300:
  3796  0F55                     l4800:
  3797  0F55  0833               	movf	___fladd@grs^(0+128),w
  3798  0F56  1D03               	btfss	3,2
  3799  0F57  2F59               	goto	u7311
  3800  0F58  2F5A               	goto	u7310
  3801  0F59                     u7311:
  3802  0F59  2F81               	goto	l4820
  3803  0F5A                     u7310:
  3804  0F5A                     l4802:
  3805  0F5A  3000               	movlw	0
  3806  0F5B  00A3               	movwf	(?___fladd+3)^(0+128)
  3807  0F5C  3000               	movlw	0
  3808  0F5D  00A2               	movwf	(?___fladd+2)^(0+128)
  3809  0F5E  3000               	movlw	0
  3810  0F5F  00A1               	movwf	(?___fladd+1)^(0+128)
  3811  0F60  3000               	movlw	0
  3812  0F61  00A0               	movwf	?___fladd^(0+128)
  3813  0F62  2FFF               	goto	l1002
  3814  0F63                     l4806:
  3815  0F63  3001               	movlw	1
  3816  0F64  00A8               	movwf	??___fladd^(0+128)
  3817  0F65                     u7325:
  3818  0F65  1003               	clrc
  3819  0F66  0DA0               	rlf	___fladd@b^(0+128),f
  3820  0F67  0DA1               	rlf	(___fladd@b+1)^(0+128),f
  3821  0F68  0DA2               	rlf	(___fladd@b+2)^(0+128),f
  3822  0F69  0DA3               	rlf	(___fladd@b+3)^(0+128),f
  3823  0F6A  0BA8               	decfsz	??___fladd^(0+128),f
  3824  0F6B  2F65               	goto	u7325
  3825  0F6C                     l4808:
  3826  0F6C  1FB3               	btfss	___fladd@grs^(0+128),7
  3827  0F6D  2F6F               	goto	u7331
  3828  0F6E  2F70               	goto	u7330
  3829  0F6F                     u7331:
  3830  0F6F  2F71               	goto	l1014
  3831  0F70                     u7330:
  3832  0F70                     l4810:
  3833  0F70  1420               	bsf	___fladd@b^(0+128),0
  3834  0F71                     l1014:
  3835  0F71  1C33               	btfss	___fladd@grs^(0+128),0
  3836  0F72  2F74               	goto	u7341
  3837  0F73  2F75               	goto	u7340
  3838  0F74                     u7341:
  3839  0F74  2F78               	goto	l4814
  3840  0F75                     u7340:
  3841  0F75                     l4812:
  3842  0F75  1403               	setc
  3843  0F76  0DB3               	rlf	___fladd@grs^(0+128),f
  3844  0F77  2F7A               	goto	l4816
  3845  0F78                     l4814:
  3846  0F78  1003               	clrc
  3847  0F79  0DB3               	rlf	___fladd@grs^(0+128),f
  3848  0F7A                     l4816:
  3849  0F7A  0832               	movf	___fladd@bexp^(0+128),w
  3850  0F7B  1903               	btfsc	3,2
  3851  0F7C  2F7E               	goto	u7351
  3852  0F7D  2F7F               	goto	u7350
  3853  0F7E                     u7351:
  3854  0F7E  2F81               	goto	l4820
  3855  0F7F                     u7350:
  3856  0F7F                     l4818:
  3857  0F7F  3001               	movlw	1
  3858  0F80  02B2               	subwf	___fladd@bexp^(0+128),f
  3859  0F81                     l4820:
  3860  0F81  1FA2               	btfss	(___fladd@b+2)^(0+128),7
  3861  0F82  2F84               	goto	u7361
  3862  0F83  2F85               	goto	u7360
  3863  0F84                     u7361:
  3864  0F84  2F63               	goto	l4806
  3865  0F85                     u7360:
  3866  0F85                     l4822:
  3867  0F85  01B1               	clrf	___fladd@aexp^(0+128)
  3868  0F86                     l4824:
  3869  0F86  1FB3               	btfss	___fladd@grs^(0+128),7
  3870  0F87  2F89               	goto	u7371
  3871  0F88  2F8A               	goto	u7370
  3872  0F89                     u7371:
  3873  0F89  2F98               	goto	l4832
  3874  0F8A                     u7370:
  3875  0F8A                     l4826:
  3876  0F8A  0833               	movf	___fladd@grs^(0+128),w
  3877  0F8B  397F               	andlw	127
  3878  0F8C  1903               	btfsc	3,2
  3879  0F8D  2F8F               	goto	u7381
  3880  0F8E  2F90               	goto	u7380
  3881  0F8F                     u7381:
  3882  0F8F  2F93               	goto	l1020
  3883  0F90                     u7380:
  3884  0F90                     l4828:
  3885  0F90  01B1               	clrf	___fladd@aexp^(0+128)
  3886  0F91  0AB1               	incf	___fladd@aexp^(0+128),f
  3887  0F92  2F98               	goto	l4832
  3888  0F93                     l1020:
  3889  0F93  1C20               	btfss	___fladd@b^(0+128),0
  3890  0F94  2F96               	goto	u7391
  3891  0F95  2F97               	goto	u7390
  3892  0F96                     u7391:
  3893  0F96  2F98               	goto	l4832
  3894  0F97                     u7390:
  3895  0F97  2F90               	goto	l4828
  3896  0F98                     l4832:
  3897  0F98  0831               	movf	___fladd@aexp^(0+128),w
  3898  0F99  1903               	btfsc	3,2
  3899  0F9A  2F9C               	goto	u7401
  3900  0F9B  2F9D               	goto	u7400
  3901  0F9C                     u7401:
  3902  0F9C  2FD1               	goto	l4842
  3903  0F9D                     u7400:
  3904  0F9D                     l4834:
  3905  0F9D  3001               	movlw	1
  3906  0F9E  07A0               	addwf	___fladd@b^(0+128),f
  3907  0F9F  3000               	movlw	0
  3908  0FA0  1803               	skipnc
  3909  0FA1  3001               	movlw	1
  3910  0FA2  07A1               	addwf	(___fladd@b+1)^(0+128),f
  3911  0FA3  3000               	movlw	0
  3912  0FA4  1803               	skipnc
  3913  0FA5  3001               	movlw	1
  3914  0FA6  07A2               	addwf	(___fladd@b+2)^(0+128),f
  3915  0FA7  3000               	movlw	0
  3916  0FA8  1803               	skipnc
  3917  0FA9  3001               	movlw	1
  3918  0FAA  07A3               	addwf	(___fladd@b+3)^(0+128),f
  3919  0FAB                     l4836:
  3920  0FAB  1C23               	btfss	(___fladd@b+3)^(0+128),0
  3921  0FAC  2FAE               	goto	u7411
  3922  0FAD  2FAF               	goto	u7410
  3923  0FAE                     u7411:
  3924  0FAE  2FD1               	goto	l4842
  3925  0FAF                     u7410:
  3926  0FAF                     l4838:
  3927  0FAF  0820               	movf	___fladd@b^(0+128),w
  3928  0FB0  00A8               	movwf	??___fladd^(0+128)
  3929  0FB1  0821               	movf	(___fladd@b+1)^(0+128),w
  3930  0FB2  00A9               	movwf	(??___fladd^(0+128)+1)
  3931  0FB3  0822               	movf	(___fladd@b+2)^(0+128),w
  3932  0FB4  00AA               	movwf	(??___fladd^(0+128)+2)
  3933  0FB5  0823               	movf	(___fladd@b+3)^(0+128),w
  3934  0FB6  00AB               	movwf	(??___fladd^(0+128)+3)
  3935  0FB7  3001               	movlw	1
  3936  0FB8  00AC               	movwf	(??___fladd+4)^(0+128)
  3937  0FB9                     u7425:
  3938  0FB9  0D2B               	rlf	(??___fladd^(0+128)+3),w
  3939  0FBA  0CAB               	rrf	(??___fladd^(0+128)+3),f
  3940  0FBB  0CAA               	rrf	(??___fladd^(0+128)+2),f
  3941  0FBC  0CA9               	rrf	(??___fladd^(0+128)+1),f
  3942  0FBD  0CA8               	rrf	??___fladd^(0+128),f
  3943  0FBE                     u7420:
  3944  0FBE  0BAC               	decfsz	(??___fladd+4)^(0+128),f
  3945  0FBF  2FB9               	goto	u7425
  3946  0FC0  082B               	movf	(??___fladd+3)^(0+128),w
  3947  0FC1  00A3               	movwf	(___fladd@b+3)^(0+128)
  3948  0FC2  082A               	movf	(??___fladd+2)^(0+128),w
  3949  0FC3  00A2               	movwf	(___fladd@b+2)^(0+128)
  3950  0FC4  0829               	movf	(??___fladd+1)^(0+128),w
  3951  0FC5  00A1               	movwf	(___fladd@b+1)^(0+128)
  3952  0FC6  0828               	movf	??___fladd^(0+128),w
  3953  0FC7  00A0               	movwf	___fladd@b^(0+128)
  3954  0FC8  0A32               	incf	___fladd@bexp^(0+128),w
  3955  0FC9  1903               	btfsc	3,2
  3956  0FCA  2FCC               	goto	u7431
  3957  0FCB  2FCD               	goto	u7430
  3958  0FCC                     u7431:
  3959  0FCC  2FD1               	goto	l4842
  3960  0FCD                     u7430:
  3961  0FCD                     l4840:
  3962  0FCD  3001               	movlw	1
  3963  0FCE  00FF               	movwf	btemp+1
  3964  0FCF  087F               	movf	btemp+1,w
  3965  0FD0  07B2               	addwf	___fladd@bexp^(0+128),f
  3966  0FD1                     l4842:
  3967  0FD1  0A32               	incf	___fladd@bexp^(0+128),w
  3968  0FD2  1903               	btfsc	3,2
  3969  0FD3  2FD5               	goto	u7441
  3970  0FD4  2FD6               	goto	u7440
  3971  0FD5                     u7441:
  3972  0FD5  2FDB               	goto	l4846
  3973  0FD6                     u7440:
  3974  0FD6                     l4844:
  3975  0FD6  0832               	movf	___fladd@bexp^(0+128),w
  3976  0FD7  1D03               	btfss	3,2
  3977  0FD8  2FDA               	goto	u7451
  3978  0FD9  2FDB               	goto	u7450
  3979  0FDA                     u7451:
  3980  0FDA  2FE9               	goto	l4852
  3981  0FDB                     u7450:
  3982  0FDB                     l4846:
  3983  0FDB  3000               	movlw	0
  3984  0FDC  00A3               	movwf	(___fladd@b+3)^(0+128)
  3985  0FDD  3000               	movlw	0
  3986  0FDE  00A2               	movwf	(___fladd@b+2)^(0+128)
  3987  0FDF  3000               	movlw	0
  3988  0FE0  00A1               	movwf	(___fladd@b+1)^(0+128)
  3989  0FE1  3000               	movlw	0
  3990  0FE2  00A0               	movwf	___fladd@b^(0+128)
  3991  0FE3                     l4848:
  3992  0FE3  0832               	movf	___fladd@bexp^(0+128),w
  3993  0FE4  1D03               	btfss	3,2
  3994  0FE5  2FE7               	goto	u7461
  3995  0FE6  2FE8               	goto	u7460
  3996  0FE7                     u7461:
  3997  0FE7  2FE9               	goto	l4852
  3998  0FE8                     u7460:
  3999  0FE8                     l4850:
  4000  0FE8  01B0               	clrf	___fladd@signs^(0+128)
  4001  0FE9                     l4852:
  4002  0FE9  1C32               	btfss	___fladd@bexp^(0+128),0
  4003  0FEA  2FEC               	goto	u7471
  4004  0FEB  2FED               	goto	u7470
  4005  0FEC                     u7471:
  4006  0FEC  2FEF               	goto	l4856
  4007  0FED                     u7470:
  4008  0FED                     l4854:
  4009  0FED  17A2               	bsf	(___fladd@b^(0+128)+2),7
  4010  0FEE  2FF3               	goto	l1031
  4011  0FEF                     l4856:
  4012  0FEF  307F               	movlw	127
  4013  0FF0  00FF               	movwf	btemp+1
  4014  0FF1  087F               	movf	btemp+1,w
  4015  0FF2  05A2               	andwf	(___fladd@b^(0+128)+2),f
  4016  0FF3                     l1031:
  4017  0FF3  0832               	movf	___fladd@bexp^(0+128),w
  4018  0FF4  00A8               	movwf	??___fladd^(0+128)
  4019  0FF5  1003               	clrc
  4020  0FF6  0C28               	rrf	??___fladd^(0+128),w
  4021  0FF7  00FF               	movwf	btemp+1
  4022  0FF8  087F               	movf	btemp+1,w
  4023  0FF9  00A3               	movwf	(___fladd@b^(0+128)+3)
  4024  0FFA                     l4858:
  4025  0FFA  1FB0               	btfss	___fladd@signs^(0+128),7
  4026  0FFB  2FFD               	goto	u7481
  4027  0FFC  2FFE               	goto	u7480
  4028  0FFD                     u7481:
  4029  0FFD  2FFF               	goto	l1032
  4030  0FFE                     u7480:
  4031  0FFE                     l4860:
  4032  0FFE  17A3               	bsf	(___fladd@b^(0+128)+3),7
  4033  0FFF                     l1032:
  4034  0FFF                     l1002:
  4035  0FFF  0008               	return
  4036  1000                     __end_of___fladd:
  4037                           
  4038                           	psect	text10
  4039  004B                     __ptext10:	
  4040 ;; *************** function ___flmul *****************
  4041 ;; Defined at:
  4042 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  b               4   14[BANK1 ] unsigned char 
  4045 ;;  a               4   18[BANK1 ] unsigned char 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  prod            4   34[BANK1 ] struct .
  4048 ;;  grs             4   29[BANK1 ] unsigned long 
  4049 ;;  temp            2   38[BANK1 ] struct .
  4050 ;;  bexp            1   33[BANK1 ] unsigned char 
  4051 ;;  aexp            1   28[BANK1 ] unsigned char 
  4052 ;;  sign            1   27[BANK1 ] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  4   14[BANK1 ] unsigned char 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4062 ;;      Params:         0       0       8       0       0
  4063 ;;      Locals:         0       0      13       0       0
  4064 ;;      Temps:          0       0       5       0       0
  4065 ;;      Totals:         0       0      26       0       0
  4066 ;;Total ram usage:       26 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:    8
  4069 ;; This function calls:
  4070 ;;		__Umul8_16
  4071 ;; This function is called by:
  4072 ;;		_Timer_update_reg
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           
  4077                           ;psect for function ___flmul
  4078  004B                     ___flmul:
  4079  004B                     l5064:	
  4080                           ;incstack = 0
  4081 ;; hardware stack exceeded
  4082                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4083                           
  4084  004B  1683               	bsf	3,5	;RP0=1, select bank1
  4085  004C  1303               	bcf	3,6	;RP1=0, select bank1
  4086  004D  0831               	movf	(___flmul@b^(0+128)+3),w
  4087  004E  3980               	andlw	128
  4088  004F  00FF               	movwf	btemp+1
  4089  0050  087F               	movf	btemp+1,w
  4090  0051  00BB               	movwf	___flmul@sign^(0+128)
  4091  0052                     l5066:
  4092  0052  0831               	movf	(___flmul@b^(0+128)+3),w
  4093  0053  00B6               	movwf	??___flmul^(0+128)
  4094  0054  0736               	addwf	??___flmul^(0+128),w
  4095  0055  00FF               	movwf	btemp+1
  4096  0056  087F               	movf	btemp+1,w
  4097  0057  00C1               	movwf	___flmul@bexp^(0+128)
  4098  0058                     l5068:
  4099  0058  1FB0               	btfss	(___flmul@b^(0+128)+2),7
  4100  0059  285B               	goto	u7911
  4101  005A  285C               	goto	u7910
  4102  005B                     u7911:
  4103  005B  285D               	goto	l5072
  4104  005C                     u7910:
  4105  005C                     l5070:
  4106  005C  1441               	bsf	___flmul@bexp^(0+128),0
  4107  005D                     l5072:
  4108  005D  0841               	movf	___flmul@bexp^(0+128),w
  4109  005E  1903               	btfsc	3,2
  4110  005F  2861               	goto	u7921
  4111  0060  2862               	goto	u7920
  4112  0061                     u7921:
  4113  0061  2871               	goto	l5080
  4114  0062                     u7920:
  4115  0062                     l5074:
  4116  0062  0A41               	incf	___flmul@bexp^(0+128),w
  4117  0063  1D03               	btfss	3,2
  4118  0064  2866               	goto	u7931
  4119  0065  2867               	goto	u7930
  4120  0066                     u7931:
  4121  0066  286F               	goto	l5078
  4122  0067                     u7930:
  4123  0067                     l5076:
  4124  0067  3000               	movlw	0
  4125  0068  00B1               	movwf	(___flmul@b+3)^(0+128)
  4126  0069  3000               	movlw	0
  4127  006A  00B0               	movwf	(___flmul@b+2)^(0+128)
  4128  006B  3000               	movlw	0
  4129  006C  00AF               	movwf	(___flmul@b+1)^(0+128)
  4130  006D  3000               	movlw	0
  4131  006E  00AE               	movwf	___flmul@b^(0+128)
  4132  006F                     l5078:
  4133  006F  17B0               	bsf	(___flmul@b^(0+128)+2),7
  4134  0070  2879               	goto	l5082
  4135  0071                     l5080:
  4136  0071  3000               	movlw	0
  4137  0072  00B1               	movwf	(___flmul@b+3)^(0+128)
  4138  0073  3000               	movlw	0
  4139  0074  00B0               	movwf	(___flmul@b+2)^(0+128)
  4140  0075  3000               	movlw	0
  4141  0076  00AF               	movwf	(___flmul@b+1)^(0+128)
  4142  0077  3000               	movlw	0
  4143  0078  00AE               	movwf	___flmul@b^(0+128)
  4144  0079                     l5082:
  4145  0079  0835               	movf	(___flmul@a^(0+128)+3),w
  4146  007A  3980               	andlw	128
  4147  007B  00FF               	movwf	btemp+1
  4148  007C  087F               	movf	btemp+1,w
  4149  007D  06BB               	xorwf	___flmul@sign^(0+128),f
  4150  007E                     l5084:
  4151  007E  0835               	movf	(___flmul@a^(0+128)+3),w
  4152  007F  00B6               	movwf	??___flmul^(0+128)
  4153  0080  0736               	addwf	??___flmul^(0+128),w
  4154  0081  00FF               	movwf	btemp+1
  4155  0082  087F               	movf	btemp+1,w
  4156  0083  00BC               	movwf	___flmul@aexp^(0+128)
  4157  0084                     l5086:
  4158  0084  1FB4               	btfss	(___flmul@a^(0+128)+2),7
  4159  0085  2887               	goto	u7941
  4160  0086  2888               	goto	u7940
  4161  0087                     u7941:
  4162  0087  2889               	goto	l5090
  4163  0088                     u7940:
  4164  0088                     l5088:
  4165  0088  143C               	bsf	___flmul@aexp^(0+128),0
  4166  0089                     l5090:
  4167  0089  083C               	movf	___flmul@aexp^(0+128),w
  4168  008A  1903               	btfsc	3,2
  4169  008B  288D               	goto	u7951
  4170  008C  288E               	goto	u7950
  4171  008D                     u7951:
  4172  008D  289D               	goto	l5098
  4173  008E                     u7950:
  4174  008E                     l5092:
  4175  008E  0A3C               	incf	___flmul@aexp^(0+128),w
  4176  008F  1D03               	btfss	3,2
  4177  0090  2892               	goto	u7961
  4178  0091  2893               	goto	u7960
  4179  0092                     u7961:
  4180  0092  289B               	goto	l5096
  4181  0093                     u7960:
  4182  0093                     l5094:
  4183  0093  3000               	movlw	0
  4184  0094  00B5               	movwf	(___flmul@a+3)^(0+128)
  4185  0095  3000               	movlw	0
  4186  0096  00B4               	movwf	(___flmul@a+2)^(0+128)
  4187  0097  3000               	movlw	0
  4188  0098  00B3               	movwf	(___flmul@a+1)^(0+128)
  4189  0099  3000               	movlw	0
  4190  009A  00B2               	movwf	___flmul@a^(0+128)
  4191  009B                     l5096:
  4192  009B  17B4               	bsf	(___flmul@a^(0+128)+2),7
  4193  009C  28A5               	goto	l5100
  4194  009D                     l5098:
  4195  009D  3000               	movlw	0
  4196  009E  00B5               	movwf	(___flmul@a+3)^(0+128)
  4197  009F  3000               	movlw	0
  4198  00A0  00B4               	movwf	(___flmul@a+2)^(0+128)
  4199  00A1  3000               	movlw	0
  4200  00A2  00B3               	movwf	(___flmul@a+1)^(0+128)
  4201  00A3  3000               	movlw	0
  4202  00A4  00B2               	movwf	___flmul@a^(0+128)
  4203  00A5                     l5100:
  4204  00A5  083C               	movf	___flmul@aexp^(0+128),w
  4205  00A6  1903               	btfsc	3,2
  4206  00A7  28A9               	goto	u7971
  4207  00A8  28AA               	goto	u7970
  4208  00A9                     u7971:
  4209  00A9  28AF               	goto	l5104
  4210  00AA                     u7970:
  4211  00AA                     l5102:
  4212  00AA  0841               	movf	___flmul@bexp^(0+128),w
  4213  00AB  1D03               	btfss	3,2
  4214  00AC  28AE               	goto	u7981
  4215  00AD  28AF               	goto	u7980
  4216  00AE                     u7981:
  4217  00AE  28B8               	goto	l5108
  4218  00AF                     u7980:
  4219  00AF                     l5104:
  4220  00AF  3000               	movlw	0
  4221  00B0  00B1               	movwf	(?___flmul+3)^(0+128)
  4222  00B1  3000               	movlw	0
  4223  00B2  00B0               	movwf	(?___flmul+2)^(0+128)
  4224  00B3  3000               	movlw	0
  4225  00B4  00AF               	movwf	(?___flmul+1)^(0+128)
  4226  00B5  3000               	movlw	0
  4227  00B6  00AE               	movwf	?___flmul^(0+128)
  4228  00B7  2BAB               	goto	l1085
  4229  00B8                     l5108:
  4230  00B8  082E               	movf	___flmul@b^(0+128),w
  4231  00B9  00FF               	movwf	btemp+1
  4232  00BA  087F               	movf	btemp+1,w
  4233  00BB  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  4234  00BC  0834               	movf	(___flmul@a^(0+128)+2),w
  4235  00BD  160A  158A  2667  120A  118A  	fcall	__Umul8_16
  4236  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  4237  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  4238  00C4  0821               	movf	(?__Umul8_16+1)^(0+128),w
  4239  00C5  00C7               	movwf	(___flmul@temp+1)^(0+128)
  4240  00C6  0820               	movf	?__Umul8_16^(0+128),w
  4241  00C7  00C6               	movwf	___flmul@temp^(0+128)
  4242  00C8                     l5110:
  4243  00C8  0846               	movf	___flmul@temp^(0+128),w
  4244  00C9  00B6               	movwf	??___flmul^(0+128)
  4245  00CA  01B7               	clrf	(??___flmul^(0+128)+1)
  4246  00CB  01B8               	clrf	(??___flmul^(0+128)+2)
  4247  00CC  01B9               	clrf	(??___flmul^(0+128)+3)
  4248  00CD  0839               	movf	(??___flmul+3)^(0+128),w
  4249  00CE  00C0               	movwf	(___flmul@grs+3)^(0+128)
  4250  00CF  0838               	movf	(??___flmul+2)^(0+128),w
  4251  00D0  00BF               	movwf	(___flmul@grs+2)^(0+128)
  4252  00D1  0837               	movf	(??___flmul+1)^(0+128),w
  4253  00D2  00BE               	movwf	(___flmul@grs+1)^(0+128)
  4254  00D3  0836               	movf	??___flmul^(0+128),w
  4255  00D4  00BD               	movwf	___flmul@grs^(0+128)
  4256  00D5                     l5112:
  4257  00D5  0847               	movf	(___flmul@temp^(0+128)+1),w
  4258  00D6  00B6               	movwf	??___flmul^(0+128)
  4259  00D7  01B7               	clrf	(??___flmul^(0+128)+1)
  4260  00D8  01B8               	clrf	(??___flmul^(0+128)+2)
  4261  00D9  01B9               	clrf	(??___flmul^(0+128)+3)
  4262  00DA  0839               	movf	(??___flmul+3)^(0+128),w
  4263  00DB  00C5               	movwf	(___flmul@prod+3)^(0+128)
  4264  00DC  0838               	movf	(??___flmul+2)^(0+128),w
  4265  00DD  00C4               	movwf	(___flmul@prod+2)^(0+128)
  4266  00DE  0837               	movf	(??___flmul+1)^(0+128),w
  4267  00DF  00C3               	movwf	(___flmul@prod+1)^(0+128)
  4268  00E0  0836               	movf	??___flmul^(0+128),w
  4269  00E1  00C2               	movwf	___flmul@prod^(0+128)
  4270  00E2  082F               	movf	(___flmul@b^(0+128)+1),w
  4271  00E3  00FF               	movwf	btemp+1
  4272  00E4  087F               	movf	btemp+1,w
  4273  00E5  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  4274  00E6  0833               	movf	(___flmul@a^(0+128)+1),w
  4275  00E7  160A  158A  2667  120A  118A  	fcall	__Umul8_16
  4276  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  4277  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  4278  00EE  0821               	movf	(?__Umul8_16+1)^(0+128),w
  4279  00EF  00C7               	movwf	(___flmul@temp+1)^(0+128)
  4280  00F0  0820               	movf	?__Umul8_16^(0+128),w
  4281  00F1  00C6               	movwf	___flmul@temp^(0+128)
  4282  00F2                     l5114:
  4283  00F2  0846               	movf	___flmul@temp^(0+128),w
  4284  00F3  00B6               	movwf	??___flmul^(0+128)
  4285  00F4  01B7               	clrf	(??___flmul^(0+128)+1)
  4286  00F5  01B8               	clrf	(??___flmul^(0+128)+2)
  4287  00F6  01B9               	clrf	(??___flmul^(0+128)+3)
  4288  00F7  0836               	movf	??___flmul^(0+128),w
  4289  00F8  07BD               	addwf	___flmul@grs^(0+128),f
  4290  00F9  0837               	movf	(??___flmul+1)^(0+128),w
  4291  00FA  1103               	clrz
  4292  00FB  1803               	skipnc
  4293  00FC  3E01               	addlw	1
  4294  00FD  1903               	skipnz
  4295  00FE  2900               	goto	u7991
  4296  00FF  07BE               	addwf	(___flmul@grs+1)^(0+128),f
  4297  0100                     u7991:
  4298  0100  0838               	movf	(??___flmul+2)^(0+128),w
  4299  0101  1103               	clrz
  4300  0102  1803               	skipnc
  4301  0103  3E01               	addlw	1
  4302  0104  1903               	skipnz
  4303  0105  2907               	goto	u7992
  4304  0106  07BF               	addwf	(___flmul@grs+2)^(0+128),f
  4305  0107                     u7992:
  4306  0107  0839               	movf	(??___flmul+3)^(0+128),w
  4307  0108  1103               	clrz
  4308  0109  1803               	skipnc
  4309  010A  3E01               	addlw	1
  4310  010B  1903               	skipnz
  4311  010C  290E               	goto	u7993
  4312  010D  07C0               	addwf	(___flmul@grs+3)^(0+128),f
  4313  010E                     u7993:
  4314  010E                     l5116:
  4315  010E  0847               	movf	(___flmul@temp^(0+128)+1),w
  4316  010F  00B6               	movwf	??___flmul^(0+128)
  4317  0110  01B7               	clrf	(??___flmul^(0+128)+1)
  4318  0111  01B8               	clrf	(??___flmul^(0+128)+2)
  4319  0112  01B9               	clrf	(??___flmul^(0+128)+3)
  4320  0113  0836               	movf	??___flmul^(0+128),w
  4321  0114  07C2               	addwf	___flmul@prod^(0+128),f
  4322  0115  0837               	movf	(??___flmul+1)^(0+128),w
  4323  0116  1103               	clrz
  4324  0117  1803               	skipnc
  4325  0118  3E01               	addlw	1
  4326  0119  1903               	skipnz
  4327  011A  291C               	goto	u8001
  4328  011B  07C3               	addwf	(___flmul@prod+1)^(0+128),f
  4329  011C                     u8001:
  4330  011C  0838               	movf	(??___flmul+2)^(0+128),w
  4331  011D  1103               	clrz
  4332  011E  1803               	skipnc
  4333  011F  3E01               	addlw	1
  4334  0120  1903               	skipnz
  4335  0121  2923               	goto	u8002
  4336  0122  07C4               	addwf	(___flmul@prod+2)^(0+128),f
  4337  0123                     u8002:
  4338  0123  0839               	movf	(??___flmul+3)^(0+128),w
  4339  0124  1103               	clrz
  4340  0125  1803               	skipnc
  4341  0126  3E01               	addlw	1
  4342  0127  1903               	skipnz
  4343  0128  292A               	goto	u8003
  4344  0129  07C5               	addwf	(___flmul@prod+3)^(0+128),f
  4345  012A                     u8003:
  4346  012A  0830               	movf	(___flmul@b^(0+128)+2),w
  4347  012B  00FF               	movwf	btemp+1
  4348  012C  087F               	movf	btemp+1,w
  4349  012D  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  4350  012E  0832               	movf	___flmul@a^(0+128),w
  4351  012F  160A  158A  2667  120A  118A  	fcall	__Umul8_16
  4352  0134  1683               	bsf	3,5	;RP0=1, select bank1
  4353  0135  1303               	bcf	3,6	;RP1=0, select bank1
  4354  0136  0821               	movf	(?__Umul8_16+1)^(0+128),w
  4355  0137  00C7               	movwf	(___flmul@temp+1)^(0+128)
  4356  0138  0820               	movf	?__Umul8_16^(0+128),w
  4357  0139  00C6               	movwf	___flmul@temp^(0+128)
  4358  013A                     l5118:
  4359  013A  0846               	movf	___flmul@temp^(0+128),w
  4360  013B  00B6               	movwf	??___flmul^(0+128)
  4361  013C  01B7               	clrf	(??___flmul^(0+128)+1)
  4362  013D  01B8               	clrf	(??___flmul^(0+128)+2)
  4363  013E  01B9               	clrf	(??___flmul^(0+128)+3)
  4364  013F  0836               	movf	??___flmul^(0+128),w
  4365  0140  07BD               	addwf	___flmul@grs^(0+128),f
  4366  0141  0837               	movf	(??___flmul+1)^(0+128),w
  4367  0142  1103               	clrz
  4368  0143  1803               	skipnc
  4369  0144  3E01               	addlw	1
  4370  0145  1903               	skipnz
  4371  0146  2948               	goto	u8011
  4372  0147  07BE               	addwf	(___flmul@grs+1)^(0+128),f
  4373  0148                     u8011:
  4374  0148  0838               	movf	(??___flmul+2)^(0+128),w
  4375  0149  1103               	clrz
  4376  014A  1803               	skipnc
  4377  014B  3E01               	addlw	1
  4378  014C  1903               	skipnz
  4379  014D  294F               	goto	u8012
  4380  014E  07BF               	addwf	(___flmul@grs+2)^(0+128),f
  4381  014F                     u8012:
  4382  014F  0839               	movf	(??___flmul+3)^(0+128),w
  4383  0150  1103               	clrz
  4384  0151  1803               	skipnc
  4385  0152  3E01               	addlw	1
  4386  0153  1903               	skipnz
  4387  0154  2956               	goto	u8013
  4388  0155  07C0               	addwf	(___flmul@grs+3)^(0+128),f
  4389  0156                     u8013:
  4390  0156                     l5120:
  4391  0156  0847               	movf	(___flmul@temp^(0+128)+1),w
  4392  0157  00B6               	movwf	??___flmul^(0+128)
  4393  0158  01B7               	clrf	(??___flmul^(0+128)+1)
  4394  0159  01B8               	clrf	(??___flmul^(0+128)+2)
  4395  015A  01B9               	clrf	(??___flmul^(0+128)+3)
  4396  015B  0836               	movf	??___flmul^(0+128),w
  4397  015C  07C2               	addwf	___flmul@prod^(0+128),f
  4398  015D  0837               	movf	(??___flmul+1)^(0+128),w
  4399  015E  1103               	clrz
  4400  015F  1803               	skipnc
  4401  0160  3E01               	addlw	1
  4402  0161  1903               	skipnz
  4403  0162  2964               	goto	u8021
  4404  0163  07C3               	addwf	(___flmul@prod+1)^(0+128),f
  4405  0164                     u8021:
  4406  0164  0838               	movf	(??___flmul+2)^(0+128),w
  4407  0165  1103               	clrz
  4408  0166  1803               	skipnc
  4409  0167  3E01               	addlw	1
  4410  0168  1903               	skipnz
  4411  0169  296B               	goto	u8022
  4412  016A  07C4               	addwf	(___flmul@prod+2)^(0+128),f
  4413  016B                     u8022:
  4414  016B  0839               	movf	(??___flmul+3)^(0+128),w
  4415  016C  1103               	clrz
  4416  016D  1803               	skipnc
  4417  016E  3E01               	addlw	1
  4418  016F  1903               	skipnz
  4419  0170  2972               	goto	u8023
  4420  0171  07C5               	addwf	(___flmul@prod+3)^(0+128),f
  4421  0172                     u8023:
  4422  0172                     l5122:
  4423  0172  3008               	movlw	8
  4424  0173  00B6               	movwf	??___flmul^(0+128)
  4425  0174                     u8035:
  4426  0174  1003               	clrc
  4427  0175  0DBD               	rlf	___flmul@grs^(0+128),f
  4428  0176  0DBE               	rlf	(___flmul@grs+1)^(0+128),f
  4429  0177  0DBF               	rlf	(___flmul@grs+2)^(0+128),f
  4430  0178  0DC0               	rlf	(___flmul@grs+3)^(0+128),f
  4431  0179  0BB6               	decfsz	??___flmul^(0+128),f
  4432  017A  2974               	goto	u8035
  4433  017B                     l5124:
  4434  017B  082F               	movf	(___flmul@b^(0+128)+1),w
  4435  017C  00FF               	movwf	btemp+1
  4436  017D  087F               	movf	btemp+1,w
  4437  017E  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  4438  017F  0832               	movf	___flmul@a^(0+128),w
  4439  0180  160A  158A  2667  120A  118A  	fcall	__Umul8_16
  4440  0185  1683               	bsf	3,5	;RP0=1, select bank1
  4441  0186  1303               	bcf	3,6	;RP1=0, select bank1
  4442  0187  0821               	movf	(?__Umul8_16+1)^(0+128),w
  4443  0188  00C7               	movwf	(___flmul@temp+1)^(0+128)
  4444  0189  0820               	movf	?__Umul8_16^(0+128),w
  4445  018A  00C6               	movwf	___flmul@temp^(0+128)
  4446  018B                     l5126:
  4447  018B  0846               	movf	___flmul@temp^(0+128),w
  4448  018C  00B6               	movwf	??___flmul^(0+128)
  4449  018D  0847               	movf	(___flmul@temp+1)^(0+128),w
  4450  018E  00B7               	movwf	(??___flmul^(0+128)+1)
  4451  018F  01B8               	clrf	(??___flmul^(0+128)+2)
  4452  0190  01B9               	clrf	(??___flmul^(0+128)+3)
  4453  0191  0836               	movf	??___flmul^(0+128),w
  4454  0192  07BD               	addwf	___flmul@grs^(0+128),f
  4455  0193  0837               	movf	(??___flmul+1)^(0+128),w
  4456  0194  1103               	clrz
  4457  0195  1803               	skipnc
  4458  0196  3E01               	addlw	1
  4459  0197  1903               	skipnz
  4460  0198  299A               	goto	u8041
  4461  0199  07BE               	addwf	(___flmul@grs+1)^(0+128),f
  4462  019A                     u8041:
  4463  019A  0838               	movf	(??___flmul+2)^(0+128),w
  4464  019B  1103               	clrz
  4465  019C  1803               	skipnc
  4466  019D  3E01               	addlw	1
  4467  019E  1903               	skipnz
  4468  019F  29A1               	goto	u8042
  4469  01A0  07BF               	addwf	(___flmul@grs+2)^(0+128),f
  4470  01A1                     u8042:
  4471  01A1  0839               	movf	(??___flmul+3)^(0+128),w
  4472  01A2  1103               	clrz
  4473  01A3  1803               	skipnc
  4474  01A4  3E01               	addlw	1
  4475  01A5  1903               	skipnz
  4476  01A6  29A8               	goto	u8043
  4477  01A7  07C0               	addwf	(___flmul@grs+3)^(0+128),f
  4478  01A8                     u8043:
  4479  01A8                     l5128:
  4480  01A8  082E               	movf	___flmul@b^(0+128),w
  4481  01A9  00FF               	movwf	btemp+1
  4482  01AA  087F               	movf	btemp+1,w
  4483  01AB  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  4484  01AC  0833               	movf	(___flmul@a^(0+128)+1),w
  4485  01AD  160A  158A  2667  120A  118A  	fcall	__Umul8_16
  4486  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  4487  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  4488  01B4  0821               	movf	(?__Umul8_16+1)^(0+128),w
  4489  01B5  00C7               	movwf	(___flmul@temp+1)^(0+128)
  4490  01B6  0820               	movf	?__Umul8_16^(0+128),w
  4491  01B7  00C6               	movwf	___flmul@temp^(0+128)
  4492  01B8                     l5130:
  4493  01B8  0846               	movf	___flmul@temp^(0+128),w
  4494  01B9  00B6               	movwf	??___flmul^(0+128)
  4495  01BA  0847               	movf	(___flmul@temp+1)^(0+128),w
  4496  01BB  00B7               	movwf	(??___flmul^(0+128)+1)
  4497  01BC  01B8               	clrf	(??___flmul^(0+128)+2)
  4498  01BD  01B9               	clrf	(??___flmul^(0+128)+3)
  4499  01BE  0836               	movf	??___flmul^(0+128),w
  4500  01BF  07BD               	addwf	___flmul@grs^(0+128),f
  4501  01C0  0837               	movf	(??___flmul+1)^(0+128),w
  4502  01C1  1103               	clrz
  4503  01C2  1803               	skipnc
  4504  01C3  3E01               	addlw	1
  4505  01C4  1903               	skipnz
  4506  01C5  29C7               	goto	u8051
  4507  01C6  07BE               	addwf	(___flmul@grs+1)^(0+128),f
  4508  01C7                     u8051:
  4509  01C7  0838               	movf	(??___flmul+2)^(0+128),w
  4510  01C8  1103               	clrz
  4511  01C9  1803               	skipnc
  4512  01CA  3E01               	addlw	1
  4513  01CB  1903               	skipnz
  4514  01CC  29CE               	goto	u8052
  4515  01CD  07BF               	addwf	(___flmul@grs+2)^(0+128),f
  4516  01CE                     u8052:
  4517  01CE  0839               	movf	(??___flmul+3)^(0+128),w
  4518  01CF  1103               	clrz
  4519  01D0  1803               	skipnc
  4520  01D1  3E01               	addlw	1
  4521  01D2  1903               	skipnz
  4522  01D3  29D5               	goto	u8053
  4523  01D4  07C0               	addwf	(___flmul@grs+3)^(0+128),f
  4524  01D5                     u8053:
  4525  01D5                     l5132:
  4526  01D5  3008               	movlw	8
  4527  01D6  00B6               	movwf	??___flmul^(0+128)
  4528  01D7                     u8065:
  4529  01D7  1003               	clrc
  4530  01D8  0DBD               	rlf	___flmul@grs^(0+128),f
  4531  01D9  0DBE               	rlf	(___flmul@grs+1)^(0+128),f
  4532  01DA  0DBF               	rlf	(___flmul@grs+2)^(0+128),f
  4533  01DB  0DC0               	rlf	(___flmul@grs+3)^(0+128),f
  4534  01DC  0BB6               	decfsz	??___flmul^(0+128),f
  4535  01DD  29D7               	goto	u8065
  4536  01DE  082E               	movf	___flmul@b^(0+128),w
  4537  01DF  00FF               	movwf	btemp+1
  4538  01E0  087F               	movf	btemp+1,w
  4539  01E1  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  4540  01E2  0832               	movf	___flmul@a^(0+128),w
  4541  01E3  160A  158A  2667  120A  118A  	fcall	__Umul8_16
  4542  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  4543  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  4544  01EA  0821               	movf	(?__Umul8_16+1)^(0+128),w
  4545  01EB  00C7               	movwf	(___flmul@temp+1)^(0+128)
  4546  01EC  0820               	movf	?__Umul8_16^(0+128),w
  4547  01ED  00C6               	movwf	___flmul@temp^(0+128)
  4548  01EE                     l5134:
  4549  01EE  0846               	movf	___flmul@temp^(0+128),w
  4550  01EF  00B6               	movwf	??___flmul^(0+128)
  4551  01F0  0847               	movf	(___flmul@temp+1)^(0+128),w
  4552  01F1  00B7               	movwf	(??___flmul^(0+128)+1)
  4553  01F2  01B8               	clrf	(??___flmul^(0+128)+2)
  4554  01F3  01B9               	clrf	(??___flmul^(0+128)+3)
  4555  01F4  0836               	movf	??___flmul^(0+128),w
  4556  01F5  07BD               	addwf	___flmul@grs^(0+128),f
  4557  01F6  0837               	movf	(??___flmul+1)^(0+128),w
  4558  01F7  1103               	clrz
  4559  01F8  1803               	skipnc
  4560  01F9  3E01               	addlw	1
  4561  01FA  1903               	skipnz
  4562  01FB  29FD               	goto	u8071
  4563  01FC  07BE               	addwf	(___flmul@grs+1)^(0+128),f
  4564  01FD                     u8071:
  4565  01FD  0838               	movf	(??___flmul+2)^(0+128),w
  4566  01FE  1103               	clrz
  4567  01FF  1803               	skipnc
  4568  0200  3E01               	addlw	1
  4569  0201  1903               	skipnz
  4570  0202  2A04               	goto	u8072
  4571  0203  07BF               	addwf	(___flmul@grs+2)^(0+128),f
  4572  0204                     u8072:
  4573  0204  0839               	movf	(??___flmul+3)^(0+128),w
  4574  0205  1103               	clrz
  4575  0206  1803               	skipnc
  4576  0207  3E01               	addlw	1
  4577  0208  1903               	skipnz
  4578  0209  2A0B               	goto	u8073
  4579  020A  07C0               	addwf	(___flmul@grs+3)^(0+128),f
  4580  020B                     u8073:
  4581  020B                     l5136:
  4582  020B  082F               	movf	(___flmul@b^(0+128)+1),w
  4583  020C  00FF               	movwf	btemp+1
  4584  020D  087F               	movf	btemp+1,w
  4585  020E  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  4586  020F  0834               	movf	(___flmul@a^(0+128)+2),w
  4587  0210  160A  158A  2667  120A  118A  	fcall	__Umul8_16
  4588  0215  1683               	bsf	3,5	;RP0=1, select bank1
  4589  0216  1303               	bcf	3,6	;RP1=0, select bank1
  4590  0217  0821               	movf	(?__Umul8_16+1)^(0+128),w
  4591  0218  00C7               	movwf	(___flmul@temp+1)^(0+128)
  4592  0219  0820               	movf	?__Umul8_16^(0+128),w
  4593  021A  00C6               	movwf	___flmul@temp^(0+128)
  4594  021B  0846               	movf	___flmul@temp^(0+128),w
  4595  021C  00B6               	movwf	??___flmul^(0+128)
  4596  021D  0847               	movf	(___flmul@temp+1)^(0+128),w
  4597  021E  00B7               	movwf	(??___flmul^(0+128)+1)
  4598  021F  01B8               	clrf	(??___flmul^(0+128)+2)
  4599  0220  01B9               	clrf	(??___flmul^(0+128)+3)
  4600  0221  0836               	movf	??___flmul^(0+128),w
  4601  0222  07C2               	addwf	___flmul@prod^(0+128),f
  4602  0223  0837               	movf	(??___flmul+1)^(0+128),w
  4603  0224  1103               	clrz
  4604  0225  1803               	skipnc
  4605  0226  3E01               	addlw	1
  4606  0227  1903               	skipnz
  4607  0228  2A2A               	goto	u8081
  4608  0229  07C3               	addwf	(___flmul@prod+1)^(0+128),f
  4609  022A                     u8081:
  4610  022A  0838               	movf	(??___flmul+2)^(0+128),w
  4611  022B  1103               	clrz
  4612  022C  1803               	skipnc
  4613  022D  3E01               	addlw	1
  4614  022E  1903               	skipnz
  4615  022F  2A31               	goto	u8082
  4616  0230  07C4               	addwf	(___flmul@prod+2)^(0+128),f
  4617  0231                     u8082:
  4618  0231  0839               	movf	(??___flmul+3)^(0+128),w
  4619  0232  1103               	clrz
  4620  0233  1803               	skipnc
  4621  0234  3E01               	addlw	1
  4622  0235  1903               	skipnz
  4623  0236  2A38               	goto	u8083
  4624  0237  07C5               	addwf	(___flmul@prod+3)^(0+128),f
  4625  0238                     u8083:
  4626  0238                     l5138:
  4627  0238  0830               	movf	(___flmul@b^(0+128)+2),w
  4628  0239  00FF               	movwf	btemp+1
  4629  023A  087F               	movf	btemp+1,w
  4630  023B  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  4631  023C  0833               	movf	(___flmul@a^(0+128)+1),w
  4632  023D  160A  158A  2667  120A  118A  	fcall	__Umul8_16
  4633  0242  1683               	bsf	3,5	;RP0=1, select bank1
  4634  0243  1303               	bcf	3,6	;RP1=0, select bank1
  4635  0244  0821               	movf	(?__Umul8_16+1)^(0+128),w
  4636  0245  00C7               	movwf	(___flmul@temp+1)^(0+128)
  4637  0246  0820               	movf	?__Umul8_16^(0+128),w
  4638  0247  00C6               	movwf	___flmul@temp^(0+128)
  4639  0248                     l5140:
  4640  0248  0846               	movf	___flmul@temp^(0+128),w
  4641  0249  00B6               	movwf	??___flmul^(0+128)
  4642  024A  0847               	movf	(___flmul@temp+1)^(0+128),w
  4643  024B  00B7               	movwf	(??___flmul^(0+128)+1)
  4644  024C  01B8               	clrf	(??___flmul^(0+128)+2)
  4645  024D  01B9               	clrf	(??___flmul^(0+128)+3)
  4646  024E  0836               	movf	??___flmul^(0+128),w
  4647  024F  07C2               	addwf	___flmul@prod^(0+128),f
  4648  0250  0837               	movf	(??___flmul+1)^(0+128),w
  4649  0251  1103               	clrz
  4650  0252  1803               	skipnc
  4651  0253  3E01               	addlw	1
  4652  0254  1903               	skipnz
  4653  0255  2A57               	goto	u8091
  4654  0256  07C3               	addwf	(___flmul@prod+1)^(0+128),f
  4655  0257                     u8091:
  4656  0257  0838               	movf	(??___flmul+2)^(0+128),w
  4657  0258  1103               	clrz
  4658  0259  1803               	skipnc
  4659  025A  3E01               	addlw	1
  4660  025B  1903               	skipnz
  4661  025C  2A5E               	goto	u8092
  4662  025D  07C4               	addwf	(___flmul@prod+2)^(0+128),f
  4663  025E                     u8092:
  4664  025E  0839               	movf	(??___flmul+3)^(0+128),w
  4665  025F  1103               	clrz
  4666  0260  1803               	skipnc
  4667  0261  3E01               	addlw	1
  4668  0262  1903               	skipnz
  4669  0263  2A65               	goto	u8093
  4670  0264  07C5               	addwf	(___flmul@prod+3)^(0+128),f
  4671  0265                     u8093:
  4672  0265  0830               	movf	(___flmul@b^(0+128)+2),w
  4673  0266  00FF               	movwf	btemp+1
  4674  0267  087F               	movf	btemp+1,w
  4675  0268  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  4676  0269  0834               	movf	(___flmul@a^(0+128)+2),w
  4677  026A  160A  158A  2667  120A  118A  	fcall	__Umul8_16
  4678  026F  1683               	bsf	3,5	;RP0=1, select bank1
  4679  0270  1303               	bcf	3,6	;RP1=0, select bank1
  4680  0271  0821               	movf	(?__Umul8_16+1)^(0+128),w
  4681  0272  00C7               	movwf	(___flmul@temp+1)^(0+128)
  4682  0273  0820               	movf	?__Umul8_16^(0+128),w
  4683  0274  00C6               	movwf	___flmul@temp^(0+128)
  4684  0275                     l5142:
  4685  0275  0846               	movf	___flmul@temp^(0+128),w
  4686  0276  00B6               	movwf	??___flmul^(0+128)
  4687  0277  0847               	movf	(___flmul@temp+1)^(0+128),w
  4688  0278  00B7               	movwf	(??___flmul^(0+128)+1)
  4689  0279  01B8               	clrf	(??___flmul^(0+128)+2)
  4690  027A  01B9               	clrf	(??___flmul^(0+128)+3)
  4691  027B  3008               	movlw	8
  4692  027C                     u8105:
  4693  027C  1003               	clrc
  4694  027D  0DB6               	rlf	??___flmul^(0+128),f
  4695  027E  0DB7               	rlf	(??___flmul^(0+128)+1),f
  4696  027F  0DB8               	rlf	(??___flmul^(0+128)+2),f
  4697  0280  0DB9               	rlf	(??___flmul^(0+128)+3),f
  4698  0281                     u8100:
  4699  0281  3EFF               	addlw	-1
  4700  0282  1D03               	skipz
  4701  0283  2A7C               	goto	u8105
  4702  0284  0836               	movf	??___flmul^(0+128),w
  4703  0285  07C2               	addwf	___flmul@prod^(0+128),f
  4704  0286  0837               	movf	(??___flmul+1)^(0+128),w
  4705  0287  1103               	clrz
  4706  0288  1803               	skipnc
  4707  0289  3E01               	addlw	1
  4708  028A  1903               	skipnz
  4709  028B  2A8D               	goto	u8111
  4710  028C  07C3               	addwf	(___flmul@prod+1)^(0+128),f
  4711  028D                     u8111:
  4712  028D  0838               	movf	(??___flmul+2)^(0+128),w
  4713  028E  1103               	clrz
  4714  028F  1803               	skipnc
  4715  0290  3E01               	addlw	1
  4716  0291  1903               	skipnz
  4717  0292  2A94               	goto	u8112
  4718  0293  07C4               	addwf	(___flmul@prod+2)^(0+128),f
  4719  0294                     u8112:
  4720  0294  0839               	movf	(??___flmul+3)^(0+128),w
  4721  0295  1103               	clrz
  4722  0296  1803               	skipnc
  4723  0297  3E01               	addlw	1
  4724  0298  1903               	skipnz
  4725  0299  2A9B               	goto	u8113
  4726  029A  07C5               	addwf	(___flmul@prod+3)^(0+128),f
  4727  029B                     u8113:
  4728  029B                     l5144:
  4729  029B  083D               	movf	___flmul@grs^(0+128),w
  4730  029C  00B6               	movwf	??___flmul^(0+128)
  4731  029D  083E               	movf	(___flmul@grs+1)^(0+128),w
  4732  029E  00B7               	movwf	(??___flmul^(0+128)+1)
  4733  029F  083F               	movf	(___flmul@grs+2)^(0+128),w
  4734  02A0  00B8               	movwf	(??___flmul^(0+128)+2)
  4735  02A1  0840               	movf	(___flmul@grs+3)^(0+128),w
  4736  02A2  00B9               	movwf	(??___flmul^(0+128)+3)
  4737  02A3  3018               	movlw	24
  4738  02A4                     u8125:
  4739  02A4  1003               	clrc
  4740  02A5  0CB9               	rrf	(??___flmul^(0+128)+3),f
  4741  02A6  0CB8               	rrf	(??___flmul^(0+128)+2),f
  4742  02A7  0CB7               	rrf	(??___flmul^(0+128)+1),f
  4743  02A8  0CB6               	rrf	??___flmul^(0+128),f
  4744  02A9                     u8120:
  4745  02A9  3EFF               	addlw	-1
  4746  02AA  1D03               	skipz
  4747  02AB  2AA4               	goto	u8125
  4748  02AC  0836               	movf	??___flmul^(0+128),w
  4749  02AD  07C2               	addwf	___flmul@prod^(0+128),f
  4750  02AE  0837               	movf	(??___flmul+1)^(0+128),w
  4751  02AF  1103               	clrz
  4752  02B0  1803               	skipnc
  4753  02B1  3E01               	addlw	1
  4754  02B2  1903               	skipnz
  4755  02B3  2AB5               	goto	u8131
  4756  02B4  07C3               	addwf	(___flmul@prod+1)^(0+128),f
  4757  02B5                     u8131:
  4758  02B5  0838               	movf	(??___flmul+2)^(0+128),w
  4759  02B6  1103               	clrz
  4760  02B7  1803               	skipnc
  4761  02B8  3E01               	addlw	1
  4762  02B9  1903               	skipnz
  4763  02BA  2ABC               	goto	u8132
  4764  02BB  07C4               	addwf	(___flmul@prod+2)^(0+128),f
  4765  02BC                     u8132:
  4766  02BC  0839               	movf	(??___flmul+3)^(0+128),w
  4767  02BD  1103               	clrz
  4768  02BE  1803               	skipnc
  4769  02BF  3E01               	addlw	1
  4770  02C0  1903               	skipnz
  4771  02C1  2AC3               	goto	u8133
  4772  02C2  07C5               	addwf	(___flmul@prod+3)^(0+128),f
  4773  02C3                     u8133:
  4774  02C3                     l5146:
  4775  02C3  3008               	movlw	8
  4776  02C4  00B6               	movwf	??___flmul^(0+128)
  4777  02C5                     u8145:
  4778  02C5  1003               	clrc
  4779  02C6  0DBD               	rlf	___flmul@grs^(0+128),f
  4780  02C7  0DBE               	rlf	(___flmul@grs+1)^(0+128),f
  4781  02C8  0DBF               	rlf	(___flmul@grs+2)^(0+128),f
  4782  02C9  0DC0               	rlf	(___flmul@grs+3)^(0+128),f
  4783  02CA  0BB6               	decfsz	??___flmul^(0+128),f
  4784  02CB  2AC5               	goto	u8145
  4785  02CC                     l5148:
  4786  02CC  0841               	movf	___flmul@bexp^(0+128),w
  4787  02CD  073C               	addwf	___flmul@aexp^(0+128),w
  4788  02CE  00B6               	movwf	??___flmul^(0+128)
  4789  02CF  01B7               	clrf	(??___flmul^(0+128)+1)
  4790  02D0  0DB7               	rlf	(??___flmul+1)^(0+128),f
  4791  02D1  0836               	movf	??___flmul^(0+128),w
  4792  02D2  3E82               	addlw	130
  4793  02D3  00C6               	movwf	___flmul@temp^(0+128)
  4794  02D4  0837               	movf	(??___flmul+1)^(0+128),w
  4795  02D5  1803               	skipnc
  4796  02D6  3E01               	addlw	1
  4797  02D7  3EFF               	addlw	255
  4798  02D8  00C7               	movwf	(___flmul@temp+1)^(0+128)
  4799  02D9  2AF7               	goto	l5160
  4800  02DA                     l5150:
  4801  02DA  3001               	movlw	1
  4802  02DB  00B6               	movwf	??___flmul^(0+128)
  4803  02DC                     u8155:
  4804  02DC  1003               	clrc
  4805  02DD  0DC2               	rlf	___flmul@prod^(0+128),f
  4806  02DE  0DC3               	rlf	(___flmul@prod+1)^(0+128),f
  4807  02DF  0DC4               	rlf	(___flmul@prod+2)^(0+128),f
  4808  02E0  0DC5               	rlf	(___flmul@prod+3)^(0+128),f
  4809  02E1  0BB6               	decfsz	??___flmul^(0+128),f
  4810  02E2  2ADC               	goto	u8155
  4811  02E3                     l5152:
  4812  02E3  1FC0               	btfss	(___flmul@grs+3)^(0+128),7
  4813  02E4  2AE6               	goto	u8161
  4814  02E5  2AE7               	goto	u8160
  4815  02E6                     u8161:
  4816  02E6  2AE8               	goto	l5156
  4817  02E7                     u8160:
  4818  02E7                     l5154:
  4819  02E7  1442               	bsf	___flmul@prod^(0+128),0
  4820  02E8                     l5156:
  4821  02E8  3001               	movlw	1
  4822  02E9  00B6               	movwf	??___flmul^(0+128)
  4823  02EA                     u8175:
  4824  02EA  1003               	clrc
  4825  02EB  0DBD               	rlf	___flmul@grs^(0+128),f
  4826  02EC  0DBE               	rlf	(___flmul@grs+1)^(0+128),f
  4827  02ED  0DBF               	rlf	(___flmul@grs+2)^(0+128),f
  4828  02EE  0DC0               	rlf	(___flmul@grs+3)^(0+128),f
  4829  02EF  0BB6               	decfsz	??___flmul^(0+128),f
  4830  02F0  2AEA               	goto	u8175
  4831  02F1                     l5158:
  4832  02F1  30FF               	movlw	255
  4833  02F2  07C6               	addwf	___flmul@temp^(0+128),f
  4834  02F3  1803               	skipnc
  4835  02F4  0AC7               	incf	(___flmul@temp+1)^(0+128),f
  4836  02F5  30FF               	movlw	255
  4837  02F6  07C7               	addwf	(___flmul@temp+1)^(0+128),f
  4838  02F7                     l5160:
  4839  02F7  1FC4               	btfss	(___flmul@prod+2)^(0+128),7
  4840  02F8  2AFA               	goto	u8181
  4841  02F9  2AFB               	goto	u8180
  4842  02FA                     u8181:
  4843  02FA  2ADA               	goto	l5150
  4844  02FB                     u8180:
  4845  02FB                     l5162:
  4846  02FB  01BC               	clrf	___flmul@aexp^(0+128)
  4847  02FC                     l5164:
  4848  02FC  1FC0               	btfss	(___flmul@grs+3)^(0+128),7
  4849  02FD  2AFF               	goto	u8191
  4850  02FE  2B00               	goto	u8190
  4851  02FF                     u8191:
  4852  02FF  2B1C               	goto	l5172
  4853  0300                     u8190:
  4854  0300                     l5166:
  4855  0300  30FF               	movlw	255
  4856  0301  053D               	andwf	___flmul@grs^(0+128),w
  4857  0302  00B6               	movwf	??___flmul^(0+128)
  4858  0303  30FF               	movlw	255
  4859  0304  053E               	andwf	(___flmul@grs+1)^(0+128),w
  4860  0305  00B7               	movwf	(??___flmul^(0+128)+1)
  4861  0306  30FF               	movlw	255
  4862  0307  053F               	andwf	(___flmul@grs+2)^(0+128),w
  4863  0308  00B8               	movwf	(??___flmul^(0+128)+2)
  4864  0309  307F               	movlw	127
  4865  030A  0540               	andwf	(___flmul@grs+3)^(0+128),w
  4866  030B  00B9               	movwf	(??___flmul^(0+128)+3)
  4867  030C  0839               	movf	(??___flmul+3)^(0+128),w
  4868  030D  0438               	iorwf	(??___flmul+2)^(0+128),w
  4869  030E  0437               	iorwf	(??___flmul+1)^(0+128),w
  4870  030F  0436               	iorwf	??___flmul^(0+128),w
  4871  0310  1903               	skipnz
  4872  0311  2B13               	goto	u8201
  4873  0312  2B14               	goto	u8200
  4874  0313                     u8201:
  4875  0313  2B17               	goto	l1091
  4876  0314                     u8200:
  4877  0314                     l5168:
  4878  0314  01BC               	clrf	___flmul@aexp^(0+128)
  4879  0315  0ABC               	incf	___flmul@aexp^(0+128),f
  4880  0316  2B1C               	goto	l5172
  4881  0317                     l1091:
  4882  0317  1C42               	btfss	___flmul@prod^(0+128),0
  4883  0318  2B1A               	goto	u8211
  4884  0319  2B1B               	goto	u8210
  4885  031A                     u8211:
  4886  031A  2B1C               	goto	l5172
  4887  031B                     u8210:
  4888  031B  2B14               	goto	l5168
  4889  031C                     l5172:
  4890  031C  083C               	movf	___flmul@aexp^(0+128),w
  4891  031D  1903               	btfsc	3,2
  4892  031E  2B20               	goto	u8221
  4893  031F  2B21               	goto	u8220
  4894  0320                     u8221:
  4895  0320  2B52               	goto	l5182
  4896  0321                     u8220:
  4897  0321                     l5174:
  4898  0321  3001               	movlw	1
  4899  0322  07C2               	addwf	___flmul@prod^(0+128),f
  4900  0323  3000               	movlw	0
  4901  0324  1803               	skipnc
  4902  0325  3001               	movlw	1
  4903  0326  07C3               	addwf	(___flmul@prod+1)^(0+128),f
  4904  0327  3000               	movlw	0
  4905  0328  1803               	skipnc
  4906  0329  3001               	movlw	1
  4907  032A  07C4               	addwf	(___flmul@prod+2)^(0+128),f
  4908  032B  3000               	movlw	0
  4909  032C  1803               	skipnc
  4910  032D  3001               	movlw	1
  4911  032E  07C5               	addwf	(___flmul@prod+3)^(0+128),f
  4912  032F                     l5176:
  4913  032F  1C45               	btfss	(___flmul@prod+3)^(0+128),0
  4914  0330  2B32               	goto	u8231
  4915  0331  2B33               	goto	u8230
  4916  0332                     u8231:
  4917  0332  2B52               	goto	l5182
  4918  0333                     u8230:
  4919  0333                     l5178:
  4920  0333  0842               	movf	___flmul@prod^(0+128),w
  4921  0334  00B6               	movwf	??___flmul^(0+128)
  4922  0335  0843               	movf	(___flmul@prod+1)^(0+128),w
  4923  0336  00B7               	movwf	(??___flmul^(0+128)+1)
  4924  0337  0844               	movf	(___flmul@prod+2)^(0+128),w
  4925  0338  00B8               	movwf	(??___flmul^(0+128)+2)
  4926  0339  0845               	movf	(___flmul@prod+3)^(0+128),w
  4927  033A  00B9               	movwf	(??___flmul^(0+128)+3)
  4928  033B  3001               	movlw	1
  4929  033C  00BA               	movwf	(??___flmul+4)^(0+128)
  4930  033D                     u8245:
  4931  033D  0D39               	rlf	(??___flmul^(0+128)+3),w
  4932  033E  0CB9               	rrf	(??___flmul^(0+128)+3),f
  4933  033F  0CB8               	rrf	(??___flmul^(0+128)+2),f
  4934  0340  0CB7               	rrf	(??___flmul^(0+128)+1),f
  4935  0341  0CB6               	rrf	??___flmul^(0+128),f
  4936  0342                     u8240:
  4937  0342  0BBA               	decfsz	(??___flmul+4)^(0+128),f
  4938  0343  2B3D               	goto	u8245
  4939  0344  0839               	movf	(??___flmul+3)^(0+128),w
  4940  0345  00C5               	movwf	(___flmul@prod+3)^(0+128)
  4941  0346  0838               	movf	(??___flmul+2)^(0+128),w
  4942  0347  00C4               	movwf	(___flmul@prod+2)^(0+128)
  4943  0348  0837               	movf	(??___flmul+1)^(0+128),w
  4944  0349  00C3               	movwf	(___flmul@prod+1)^(0+128)
  4945  034A  0836               	movf	??___flmul^(0+128),w
  4946  034B  00C2               	movwf	___flmul@prod^(0+128)
  4947  034C                     l5180:
  4948  034C  3001               	movlw	1
  4949  034D  07C6               	addwf	___flmul@temp^(0+128),f
  4950  034E  1803               	skipnc
  4951  034F  0AC7               	incf	(___flmul@temp+1)^(0+128),f
  4952  0350  3000               	movlw	0
  4953  0351  07C7               	addwf	(___flmul@temp+1)^(0+128),f
  4954  0352                     l5182:
  4955  0352  0847               	movf	(___flmul@temp+1)^(0+128),w
  4956  0353  3A80               	xorlw	128
  4957  0354  00FF               	movwf	btemp+1
  4958  0355  3080               	movlw	128
  4959  0356  027F               	subwf	btemp+1,w
  4960  0357  1D03               	skipz
  4961  0358  2B5B               	goto	u8255
  4962  0359  30FF               	movlw	255
  4963  035A  0246               	subwf	___flmul@temp^(0+128),w
  4964  035B                     u8255:
  4965  035B  1C03               	skipc
  4966  035C  2B5E               	goto	u8251
  4967  035D  2B5F               	goto	u8250
  4968  035E                     u8251:
  4969  035E  2B6A               	goto	l5186
  4970  035F                     u8250:
  4971  035F                     l5184:
  4972  035F  307F               	movlw	127
  4973  0360  1683               	bsf	3,5	;RP0=1, select bank1
  4974  0361  1303               	bcf	3,6	;RP1=0, select bank1
  4975  0362  00C5               	movwf	(___flmul@prod+3)^(0+128)
  4976  0363  3080               	movlw	128
  4977  0364  00C4               	movwf	(___flmul@prod+2)^(0+128)
  4978  0365  3000               	movlw	0
  4979  0366  00C3               	movwf	(___flmul@prod+1)^(0+128)
  4980  0367  3000               	movlw	0
  4981  0368  00C2               	movwf	___flmul@prod^(0+128)
  4982  0369  2B9F               	goto	l1097
  4983  036A                     l5186:
  4984  036A  1683               	bsf	3,5	;RP0=1, select bank1
  4985  036B  1303               	bcf	3,6	;RP1=0, select bank1
  4986  036C  0847               	movf	(___flmul@temp+1)^(0+128),w
  4987  036D  3A80               	xorlw	128
  4988  036E  00FF               	movwf	btemp+1
  4989  036F  3080               	movlw	128
  4990  0370  027F               	subwf	btemp+1,w
  4991  0371  1D03               	skipz
  4992  0372  2B75               	goto	u8265
  4993  0373  3001               	movlw	1
  4994  0374  0246               	subwf	___flmul@temp^(0+128),w
  4995  0375                     u8265:
  4996  0375  1803               	skipnc
  4997  0376  2B78               	goto	u8261
  4998  0377  2B79               	goto	u8260
  4999  0378                     u8261:
  5000  0378  2B85               	goto	l5192
  5001  0379                     u8260:
  5002  0379                     l5188:
  5003  0379  3000               	movlw	0
  5004  037A  1683               	bsf	3,5	;RP0=1, select bank1
  5005  037B  1303               	bcf	3,6	;RP1=0, select bank1
  5006  037C  00C5               	movwf	(___flmul@prod+3)^(0+128)
  5007  037D  3000               	movlw	0
  5008  037E  00C4               	movwf	(___flmul@prod+2)^(0+128)
  5009  037F  3000               	movlw	0
  5010  0380  00C3               	movwf	(___flmul@prod+1)^(0+128)
  5011  0381  3000               	movlw	0
  5012  0382  00C2               	movwf	___flmul@prod^(0+128)
  5013  0383                     l5190:
  5014  0383  01BB               	clrf	___flmul@sign^(0+128)
  5015  0384  2B9F               	goto	l1097
  5016  0385                     l5192:
  5017  0385  1683               	bsf	3,5	;RP0=1, select bank1
  5018  0386  1303               	bcf	3,6	;RP1=0, select bank1
  5019  0387  0846               	movf	___flmul@temp^(0+128),w
  5020  0388  00FF               	movwf	btemp+1
  5021  0389  087F               	movf	btemp+1,w
  5022  038A  00C1               	movwf	___flmul@bexp^(0+128)
  5023  038B                     l5194:
  5024  038B  30FF               	movlw	255
  5025  038C  05C2               	andwf	___flmul@prod^(0+128),f
  5026  038D  30FF               	movlw	255
  5027  038E  05C3               	andwf	(___flmul@prod+1)^(0+128),f
  5028  038F  307F               	movlw	127
  5029  0390  05C4               	andwf	(___flmul@prod+2)^(0+128),f
  5030  0391  3000               	movlw	0
  5031  0392  05C5               	andwf	(___flmul@prod+3)^(0+128),f
  5032  0393                     l5196:
  5033  0393  1C41               	btfss	___flmul@bexp^(0+128),0
  5034  0394  2B96               	goto	u8271
  5035  0395  2B97               	goto	u8270
  5036  0396                     u8271:
  5037  0396  2B98               	goto	l5200
  5038  0397                     u8270:
  5039  0397                     l5198:
  5040  0397  17C4               	bsf	(___flmul@prod^(0+128)+2),7
  5041  0398                     l5200:
  5042  0398  0841               	movf	___flmul@bexp^(0+128),w
  5043  0399  00B6               	movwf	??___flmul^(0+128)
  5044  039A  1003               	clrc
  5045  039B  0C36               	rrf	??___flmul^(0+128),w
  5046  039C  00FF               	movwf	btemp+1
  5047  039D  087F               	movf	btemp+1,w
  5048  039E  00C5               	movwf	(___flmul@prod^(0+128)+3)
  5049  039F                     l1097:
  5050  039F  083B               	movf	___flmul@sign^(0+128),w
  5051  03A0  00FF               	movwf	btemp+1
  5052  03A1  087F               	movf	btemp+1,w
  5053  03A2  04C5               	iorwf	(___flmul@prod^(0+128)+3),f
  5054  03A3                     l5202:
  5055  03A3  0845               	movf	(___flmul@prod+3)^(0+128),w
  5056  03A4  00B1               	movwf	(?___flmul+3)^(0+128)
  5057  03A5  0844               	movf	(___flmul@prod+2)^(0+128),w
  5058  03A6  00B0               	movwf	(?___flmul+2)^(0+128)
  5059  03A7  0843               	movf	(___flmul@prod+1)^(0+128),w
  5060  03A8  00AF               	movwf	(?___flmul+1)^(0+128)
  5061  03A9  0842               	movf	___flmul@prod^(0+128),w
  5062  03AA  00AE               	movwf	?___flmul^(0+128)
  5063  03AB                     l1085:
  5064  03AB  0008               	return
  5065  03AC                     __end_of___flmul:
  5066                           
  5067                           	psect	text11
  5068  1E67                     __ptext11:	
  5069 ;; *************** function __Umul8_16 *****************
  5070 ;; Defined at:
  5071 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  multiplier      1    wreg     unsigned char 
  5074 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  multiplier      1    8[BANK1 ] unsigned char 
  5077 ;;  word_mpld       2    6[BANK1 ] unsigned int 
  5078 ;;  product         2    4[BANK1 ] unsigned int 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  2    0[BANK1 ] unsigned int 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5088 ;;      Params:         0       0       2       0       0
  5089 ;;      Locals:         0       0       5       0       0
  5090 ;;      Temps:          0       0       2       0       0
  5091 ;;      Totals:         0       0       9       0       0
  5092 ;;Total ram usage:        9 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    7
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		___flmul
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           
  5103                           ;psect for function __Umul8_16
  5104  1E67                     __Umul8_16:
  5105                           
  5106                           ;incstack = 0
  5107 ;; hardware stack exceeded
  5108                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5109                           ;__Umul8_16@multiplier stored from wreg
  5110  1E67  1683               	bsf	3,5	;RP0=1, select bank1
  5111  1E68  1303               	bcf	3,6	;RP1=0, select bank1
  5112  1E69  00A8               	movwf	__Umul8_16@multiplier^(0+128)
  5113  1E6A                     l4862:
  5114  1E6A  01A4               	clrf	__Umul8_16@product^(0+128)
  5115  1E6B  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
  5116  1E6C                     l4864:
  5117  1E6C  0820               	movf	__Umul8_16@multiplicand^(0+128),w
  5118  1E6D  00A2               	movwf	??__Umul8_16^(0+128)
  5119  1E6E  01A3               	clrf	(??__Umul8_16^(0+128)+1)
  5120  1E6F  0822               	movf	??__Umul8_16^(0+128),w
  5121  1E70  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
  5122  1E71  0823               	movf	(??__Umul8_16+1)^(0+128),w
  5123  1E72  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
  5124  1E73                     l4866:
  5125  1E73  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
  5126  1E74  2E76               	goto	u7491
  5127  1E75  2E77               	goto	u7490
  5128  1E76                     u7491:
  5129  1E76  2E7D               	goto	l1104
  5130  1E77                     u7490:
  5131  1E77                     l4868:
  5132  1E77  0826               	movf	__Umul8_16@word_mpld^(0+128),w
  5133  1E78  07A4               	addwf	__Umul8_16@product^(0+128),f
  5134  1E79  1803               	skipnc
  5135  1E7A  0AA5               	incf	(__Umul8_16@product+1)^(0+128),f
  5136  1E7B  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
  5137  1E7C  07A5               	addwf	(__Umul8_16@product+1)^(0+128),f
  5138  1E7D                     l1104:
  5139  1E7D  3001               	movlw	1
  5140  1E7E                     u7505:
  5141  1E7E  1003               	clrc
  5142  1E7F  0DA6               	rlf	__Umul8_16@word_mpld^(0+128),f
  5143  1E80  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
  5144  1E81  3EFF               	addlw	-1
  5145  1E82  1D03               	skipz
  5146  1E83  2E7E               	goto	u7505
  5147  1E84  1003               	clrc
  5148  1E85  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
  5149  1E86                     l4870:
  5150  1E86  0828               	movf	__Umul8_16@multiplier^(0+128),w
  5151  1E87  1D03               	btfss	3,2
  5152  1E88  2E8A               	goto	u7511
  5153  1E89  2E8B               	goto	u7510
  5154  1E8A                     u7511:
  5155  1E8A  2E73               	goto	l4866
  5156  1E8B                     u7510:
  5157  1E8B                     l4872:
  5158  1E8B  0825               	movf	(__Umul8_16@product+1)^(0+128),w
  5159  1E8C  00A1               	movwf	(?__Umul8_16+1)^(0+128)
  5160  1E8D  0824               	movf	__Umul8_16@product^(0+128),w
  5161  1E8E  00A0               	movwf	?__Umul8_16^(0+128)
  5162  1E8F                     l1106:
  5163  1E8F  0008               	return
  5164  1E90                     __end_of__Umul8_16:
  5165                           
  5166                           	psect	text12
  5167  09B8                     __ptext12:	
  5168 ;; *************** function ___fldiv *****************
  5169 ;; Defined at:
  5170 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  a               4   40[BANK1 ] unsigned int 
  5173 ;;  b               4   44[BANK1 ] unsigned int 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  grs             4   60[BANK1 ] unsigned long 
  5176 ;;  rem             4   53[BANK1 ] unsigned long 
  5177 ;;  new_exp         2   58[BANK1 ] int 
  5178 ;;  aexp            1   65[BANK1 ] unsigned char 
  5179 ;;  bexp            1   64[BANK1 ] unsigned char 
  5180 ;;  sign            1   57[BANK1 ] unsigned char 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  4   40[BANK1 ] unsigned char 
  5183 ;; Registers used:
  5184 ;;		wreg, status,2, status,0, btemp+1
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5190 ;;      Params:         0       0       8       0       0
  5191 ;;      Locals:         0       0      13       0       0
  5192 ;;      Temps:          0       0       5       0       0
  5193 ;;      Totals:         0       0      26       0       0
  5194 ;;Total ram usage:       26 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    7
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_Timer_update_reg
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function ___fldiv
  5206  09B8                     ___fldiv:
  5207  09B8                     l4920:	
  5208                           ;incstack = 0
  5209 ;; hardware stack exceeded
  5210                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5211                           
  5212  09B8  1683               	bsf	3,5	;RP0=1, select bank1
  5213  09B9  1303               	bcf	3,6	;RP1=0, select bank1
  5214  09BA  084F               	movf	(___fldiv@b^(0+128)+3),w
  5215  09BB  3980               	andlw	128
  5216  09BC  00FF               	movwf	btemp+1
  5217  09BD  087F               	movf	btemp+1,w
  5218  09BE  00D9               	movwf	___fldiv@sign^(0+128)
  5219  09BF                     l4922:
  5220  09BF  084F               	movf	(___fldiv@b^(0+128)+3),w
  5221  09C0  00D0               	movwf	??___fldiv^(0+128)
  5222  09C1  0750               	addwf	??___fldiv^(0+128),w
  5223  09C2  00FF               	movwf	btemp+1
  5224  09C3  087F               	movf	btemp+1,w
  5225  09C4  00E0               	movwf	___fldiv@bexp^(0+128)
  5226  09C5                     l4924:
  5227  09C5  1FCE               	btfss	(___fldiv@b^(0+128)+2),7
  5228  09C6  29C8               	goto	u7621
  5229  09C7  29C9               	goto	u7620
  5230  09C8                     u7621:
  5231  09C8  29CA               	goto	l4928
  5232  09C9                     u7620:
  5233  09C9                     l4926:
  5234  09C9  1460               	bsf	___fldiv@bexp^(0+128),0
  5235  09CA                     l4928:
  5236  09CA  0860               	movf	___fldiv@bexp^(0+128),w
  5237  09CB  1903               	btfsc	3,2
  5238  09CC  29CE               	goto	u7631
  5239  09CD  29CF               	goto	u7630
  5240  09CE                     u7631:
  5241  09CE  29DF               	goto	l4938
  5242  09CF                     u7630:
  5243  09CF                     l4930:
  5244  09CF  0A60               	incf	___fldiv@bexp^(0+128),w
  5245  09D0  1D03               	btfss	3,2
  5246  09D1  29D3               	goto	u7641
  5247  09D2  29D4               	goto	u7640
  5248  09D3                     u7641:
  5249  09D3  29DC               	goto	l4934
  5250  09D4                     u7640:
  5251  09D4                     l4932:
  5252  09D4  3000               	movlw	0
  5253  09D5  00CF               	movwf	(___fldiv@b+3)^(0+128)
  5254  09D6  3000               	movlw	0
  5255  09D7  00CE               	movwf	(___fldiv@b+2)^(0+128)
  5256  09D8  3000               	movlw	0
  5257  09D9  00CD               	movwf	(___fldiv@b+1)^(0+128)
  5258  09DA  3000               	movlw	0
  5259  09DB  00CC               	movwf	___fldiv@b^(0+128)
  5260  09DC                     l4934:
  5261  09DC  17CE               	bsf	(___fldiv@b^(0+128)+2),7
  5262  09DD                     l4936:
  5263  09DD  01CF               	clrf	(___fldiv@b^(0+128)+3)
  5264  09DE  29E7               	goto	l4940
  5265  09DF                     l4938:
  5266  09DF  3000               	movlw	0
  5267  09E0  00CF               	movwf	(___fldiv@b+3)^(0+128)
  5268  09E1  3000               	movlw	0
  5269  09E2  00CE               	movwf	(___fldiv@b+2)^(0+128)
  5270  09E3  3000               	movlw	0
  5271  09E4  00CD               	movwf	(___fldiv@b+1)^(0+128)
  5272  09E5  3000               	movlw	0
  5273  09E6  00CC               	movwf	___fldiv@b^(0+128)
  5274  09E7                     l4940:
  5275  09E7  084B               	movf	(___fldiv@a^(0+128)+3),w
  5276  09E8  3980               	andlw	128
  5277  09E9  00FF               	movwf	btemp+1
  5278  09EA  087F               	movf	btemp+1,w
  5279  09EB  06D9               	xorwf	___fldiv@sign^(0+128),f
  5280  09EC                     l4942:
  5281  09EC  084B               	movf	(___fldiv@a^(0+128)+3),w
  5282  09ED  00D0               	movwf	??___fldiv^(0+128)
  5283  09EE  0750               	addwf	??___fldiv^(0+128),w
  5284  09EF  00FF               	movwf	btemp+1
  5285  09F0  087F               	movf	btemp+1,w
  5286  09F1  00E1               	movwf	___fldiv@aexp^(0+128)
  5287  09F2                     l4944:
  5288  09F2  1FCA               	btfss	(___fldiv@a^(0+128)+2),7
  5289  09F3  29F5               	goto	u7651
  5290  09F4  29F6               	goto	u7650
  5291  09F5                     u7651:
  5292  09F5  29F7               	goto	l4948
  5293  09F6                     u7650:
  5294  09F6                     l4946:
  5295  09F6  1461               	bsf	___fldiv@aexp^(0+128),0
  5296  09F7                     l4948:
  5297  09F7  0861               	movf	___fldiv@aexp^(0+128),w
  5298  09F8  1903               	btfsc	3,2
  5299  09F9  29FB               	goto	u7661
  5300  09FA  29FC               	goto	u7660
  5301  09FB                     u7661:
  5302  09FB  2A0C               	goto	l4958
  5303  09FC                     u7660:
  5304  09FC                     l4950:
  5305  09FC  0A61               	incf	___fldiv@aexp^(0+128),w
  5306  09FD  1D03               	btfss	3,2
  5307  09FE  2A00               	goto	u7671
  5308  09FF  2A01               	goto	u7670
  5309  0A00                     u7671:
  5310  0A00  2A09               	goto	l4954
  5311  0A01                     u7670:
  5312  0A01                     l4952:
  5313  0A01  3000               	movlw	0
  5314  0A02  00CB               	movwf	(___fldiv@a+3)^(0+128)
  5315  0A03  3000               	movlw	0
  5316  0A04  00CA               	movwf	(___fldiv@a+2)^(0+128)
  5317  0A05  3000               	movlw	0
  5318  0A06  00C9               	movwf	(___fldiv@a+1)^(0+128)
  5319  0A07  3000               	movlw	0
  5320  0A08  00C8               	movwf	___fldiv@a^(0+128)
  5321  0A09                     l4954:
  5322  0A09  17CA               	bsf	(___fldiv@a^(0+128)+2),7
  5323  0A0A                     l4956:
  5324  0A0A  01CB               	clrf	(___fldiv@a^(0+128)+3)
  5325  0A0B  2A14               	goto	l1045
  5326  0A0C                     l4958:
  5327  0A0C  3000               	movlw	0
  5328  0A0D  00CB               	movwf	(___fldiv@a+3)^(0+128)
  5329  0A0E  3000               	movlw	0
  5330  0A0F  00CA               	movwf	(___fldiv@a+2)^(0+128)
  5331  0A10  3000               	movlw	0
  5332  0A11  00C9               	movwf	(___fldiv@a+1)^(0+128)
  5333  0A12  3000               	movlw	0
  5334  0A13  00C8               	movwf	___fldiv@a^(0+128)
  5335  0A14                     l1045:
  5336  0A14  084B               	movf	(___fldiv@a+3)^(0+128),w
  5337  0A15  044A               	iorwf	(___fldiv@a+2)^(0+128),w
  5338  0A16  0449               	iorwf	(___fldiv@a+1)^(0+128),w
  5339  0A17  0448               	iorwf	___fldiv@a^(0+128),w
  5340  0A18  1D03               	skipz
  5341  0A19  2A1B               	goto	u7681
  5342  0A1A  2A1C               	goto	u7680
  5343  0A1B                     u7681:
  5344  0A1B  2A35               	goto	l4968
  5345  0A1C                     u7680:
  5346  0A1C                     l4960:
  5347  0A1C  3000               	movlw	0
  5348  0A1D  00CF               	movwf	(___fldiv@b+3)^(0+128)
  5349  0A1E  3000               	movlw	0
  5350  0A1F  00CE               	movwf	(___fldiv@b+2)^(0+128)
  5351  0A20  3000               	movlw	0
  5352  0A21  00CD               	movwf	(___fldiv@b+1)^(0+128)
  5353  0A22  3000               	movlw	0
  5354  0A23  00CC               	movwf	___fldiv@b^(0+128)
  5355  0A24  3080               	movlw	128
  5356  0A25  04CE               	iorwf	(___fldiv@b^(0+128)+2),f
  5357  0A26  307F               	movlw	127
  5358  0A27  04CF               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  5359  0A28                     l4962:
  5360  0A28  0859               	movf	___fldiv@sign^(0+128),w
  5361  0A29  00FF               	movwf	btemp+1
  5362  0A2A  087F               	movf	btemp+1,w
  5363  0A2B  04CF               	iorwf	(___fldiv@b^(0+128)+3),f
  5364  0A2C                     l4964:
  5365  0A2C  084F               	movf	(___fldiv@b+3)^(0+128),w
  5366  0A2D  00CB               	movwf	(?___fldiv+3)^(0+128)
  5367  0A2E  084E               	movf	(___fldiv@b+2)^(0+128),w
  5368  0A2F  00CA               	movwf	(?___fldiv+2)^(0+128)
  5369  0A30  084D               	movf	(___fldiv@b+1)^(0+128),w
  5370  0A31  00C9               	movwf	(?___fldiv+1)^(0+128)
  5371  0A32  084C               	movf	___fldiv@b^(0+128),w
  5372  0A33  00C8               	movwf	?___fldiv^(0+128)
  5373  0A34  2B94               	goto	l1047
  5374  0A35                     l4968:
  5375  0A35  0860               	movf	___fldiv@bexp^(0+128),w
  5376  0A36  1D03               	btfss	3,2
  5377  0A37  2A39               	goto	u7691
  5378  0A38  2A3A               	goto	u7690
  5379  0A39                     u7691:
  5380  0A39  2A43               	goto	l4974
  5381  0A3A                     u7690:
  5382  0A3A                     l4970:
  5383  0A3A  3000               	movlw	0
  5384  0A3B  00CB               	movwf	(?___fldiv+3)^(0+128)
  5385  0A3C  3000               	movlw	0
  5386  0A3D  00CA               	movwf	(?___fldiv+2)^(0+128)
  5387  0A3E  3000               	movlw	0
  5388  0A3F  00C9               	movwf	(?___fldiv+1)^(0+128)
  5389  0A40  3000               	movlw	0
  5390  0A41  00C8               	movwf	?___fldiv^(0+128)
  5391  0A42  2B94               	goto	l1047
  5392  0A43                     l4974:
  5393  0A43  0860               	movf	___fldiv@bexp^(0+128),w
  5394  0A44  00D0               	movwf	??___fldiv^(0+128)
  5395  0A45  01D1               	clrf	(??___fldiv^(0+128)+1)
  5396  0A46  0851               	movf	(??___fldiv+1)^(0+128),w
  5397  0A47  00D3               	movwf	((??___fldiv+2)^(0+128)+1)
  5398  0A48  0861               	movf	___fldiv@aexp^(0+128),w
  5399  0A49  0250               	subwf	??___fldiv^(0+128),w
  5400  0A4A  00D2               	movwf	(??___fldiv+2)^(0+128)
  5401  0A4B  1C03               	skipc
  5402  0A4C  03D3               	decf	((??___fldiv+2)^(0+128)+1),f
  5403  0A4D  0852               	movf	(??___fldiv+2)^(0+128),w
  5404  0A4E  3E7F               	addlw	127
  5405  0A4F  00DA               	movwf	___fldiv@new_exp^(0+128)
  5406  0A50  0853               	movf	(??___fldiv+3)^(0+128),w
  5407  0A51  1803               	skipnc
  5408  0A52  3E01               	addlw	1
  5409  0A53  3E00               	addlw	0
  5410  0A54  00DB               	movwf	(___fldiv@new_exp+1)^(0+128)
  5411  0A55                     l4976:
  5412  0A55  084F               	movf	(___fldiv@b+3)^(0+128),w
  5413  0A56  00D8               	movwf	(___fldiv@rem+3)^(0+128)
  5414  0A57  084E               	movf	(___fldiv@b+2)^(0+128),w
  5415  0A58  00D7               	movwf	(___fldiv@rem+2)^(0+128)
  5416  0A59  084D               	movf	(___fldiv@b+1)^(0+128),w
  5417  0A5A  00D6               	movwf	(___fldiv@rem+1)^(0+128)
  5418  0A5B  084C               	movf	___fldiv@b^(0+128),w
  5419  0A5C  00D5               	movwf	___fldiv@rem^(0+128)
  5420  0A5D                     l4978:
  5421  0A5D  3000               	movlw	0
  5422  0A5E  00CF               	movwf	(___fldiv@b+3)^(0+128)
  5423  0A5F  3000               	movlw	0
  5424  0A60  00CE               	movwf	(___fldiv@b+2)^(0+128)
  5425  0A61  3000               	movlw	0
  5426  0A62  00CD               	movwf	(___fldiv@b+1)^(0+128)
  5427  0A63  3000               	movlw	0
  5428  0A64  00CC               	movwf	___fldiv@b^(0+128)
  5429  0A65                     l4980:
  5430  0A65  3000               	movlw	0
  5431  0A66  00DF               	movwf	(___fldiv@grs+3)^(0+128)
  5432  0A67  3000               	movlw	0
  5433  0A68  00DE               	movwf	(___fldiv@grs+2)^(0+128)
  5434  0A69  3000               	movlw	0
  5435  0A6A  00DD               	movwf	(___fldiv@grs+1)^(0+128)
  5436  0A6B  3000               	movlw	0
  5437  0A6C  00DC               	movwf	___fldiv@grs^(0+128)
  5438  0A6D                     l4982:
  5439  0A6D  01E1               	clrf	___fldiv@aexp^(0+128)
  5440  0A6E  2AB9               	goto	l5002
  5441  0A6F                     l4984:
  5442  0A6F  0861               	movf	___fldiv@aexp^(0+128),w
  5443  0A70  1903               	btfsc	3,2
  5444  0A71  2A73               	goto	u7701
  5445  0A72  2A74               	goto	u7700
  5446  0A73                     u7701:
  5447  0A73  2A94               	goto	l4994
  5448  0A74                     u7700:
  5449  0A74                     l4986:
  5450  0A74  3001               	movlw	1
  5451  0A75  00D0               	movwf	??___fldiv^(0+128)
  5452  0A76                     u7715:
  5453  0A76  1003               	clrc
  5454  0A77  0DD5               	rlf	___fldiv@rem^(0+128),f
  5455  0A78  0DD6               	rlf	(___fldiv@rem+1)^(0+128),f
  5456  0A79  0DD7               	rlf	(___fldiv@rem+2)^(0+128),f
  5457  0A7A  0DD8               	rlf	(___fldiv@rem+3)^(0+128),f
  5458  0A7B  0BD0               	decfsz	??___fldiv^(0+128),f
  5459  0A7C  2A76               	goto	u7715
  5460  0A7D  3001               	movlw	1
  5461  0A7E  00D0               	movwf	??___fldiv^(0+128)
  5462  0A7F                     u7725:
  5463  0A7F  1003               	clrc
  5464  0A80  0DCC               	rlf	___fldiv@b^(0+128),f
  5465  0A81  0DCD               	rlf	(___fldiv@b+1)^(0+128),f
  5466  0A82  0DCE               	rlf	(___fldiv@b+2)^(0+128),f
  5467  0A83  0DCF               	rlf	(___fldiv@b+3)^(0+128),f
  5468  0A84  0BD0               	decfsz	??___fldiv^(0+128),f
  5469  0A85  2A7F               	goto	u7725
  5470  0A86                     l4988:
  5471  0A86  1FDF               	btfss	(___fldiv@grs+3)^(0+128),7
  5472  0A87  2A89               	goto	u7731
  5473  0A88  2A8A               	goto	u7730
  5474  0A89                     u7731:
  5475  0A89  2A8B               	goto	l4992
  5476  0A8A                     u7730:
  5477  0A8A                     l4990:
  5478  0A8A  144C               	bsf	___fldiv@b^(0+128),0
  5479  0A8B                     l4992:
  5480  0A8B  3001               	movlw	1
  5481  0A8C  00D0               	movwf	??___fldiv^(0+128)
  5482  0A8D                     u7745:
  5483  0A8D  1003               	clrc
  5484  0A8E  0DDC               	rlf	___fldiv@grs^(0+128),f
  5485  0A8F  0DDD               	rlf	(___fldiv@grs+1)^(0+128),f
  5486  0A90  0DDE               	rlf	(___fldiv@grs+2)^(0+128),f
  5487  0A91  0DDF               	rlf	(___fldiv@grs+3)^(0+128),f
  5488  0A92  0BD0               	decfsz	??___fldiv^(0+128),f
  5489  0A93  2A8D               	goto	u7745
  5490  0A94                     l4994:
  5491  0A94  084B               	movf	(___fldiv@a+3)^(0+128),w
  5492  0A95  0258               	subwf	(___fldiv@rem+3)^(0+128),w
  5493  0A96  1D03               	skipz
  5494  0A97  2AA2               	goto	u7755
  5495  0A98  084A               	movf	(___fldiv@a+2)^(0+128),w
  5496  0A99  0257               	subwf	(___fldiv@rem+2)^(0+128),w
  5497  0A9A  1D03               	skipz
  5498  0A9B  2AA2               	goto	u7755
  5499  0A9C  0849               	movf	(___fldiv@a+1)^(0+128),w
  5500  0A9D  0256               	subwf	(___fldiv@rem+1)^(0+128),w
  5501  0A9E  1D03               	skipz
  5502  0A9F  2AA2               	goto	u7755
  5503  0AA0  0848               	movf	___fldiv@a^(0+128),w
  5504  0AA1  0255               	subwf	___fldiv@rem^(0+128),w
  5505  0AA2                     u7755:
  5506  0AA2  1C03               	skipc
  5507  0AA3  2AA5               	goto	u7751
  5508  0AA4  2AA6               	goto	u7750
  5509  0AA5                     u7751:
  5510  0AA5  2AB5               	goto	l5000
  5511  0AA6                     u7750:
  5512  0AA6                     l4996:
  5513  0AA6  175F               	bsf	(___fldiv@grs^(0+128)+3),6
  5514  0AA7                     l4998:
  5515  0AA7  0848               	movf	___fldiv@a^(0+128),w
  5516  0AA8  02D5               	subwf	___fldiv@rem^(0+128),f
  5517  0AA9  0849               	movf	(___fldiv@a+1)^(0+128),w
  5518  0AAA  1C03               	skipc
  5519  0AAB  0F49               	incfsz	(___fldiv@a+1)^(0+128),w
  5520  0AAC  02D6               	subwf	(___fldiv@rem+1)^(0+128),f
  5521  0AAD  084A               	movf	(___fldiv@a+2)^(0+128),w
  5522  0AAE  1C03               	skipc
  5523  0AAF  0F4A               	incfsz	(___fldiv@a+2)^(0+128),w
  5524  0AB0  02D7               	subwf	(___fldiv@rem+2)^(0+128),f
  5525  0AB1  084B               	movf	(___fldiv@a+3)^(0+128),w
  5526  0AB2  1C03               	skipc
  5527  0AB3  0F4B               	incfsz	(___fldiv@a+3)^(0+128),w
  5528  0AB4  02D8               	subwf	(___fldiv@rem+3)^(0+128),f
  5529  0AB5                     l5000:
  5530  0AB5  3001               	movlw	1
  5531  0AB6  00FF               	movwf	btemp+1
  5532  0AB7  087F               	movf	btemp+1,w
  5533  0AB8  07E1               	addwf	___fldiv@aexp^(0+128),f
  5534  0AB9                     l5002:
  5535  0AB9  301A               	movlw	26
  5536  0ABA  0261               	subwf	___fldiv@aexp^(0+128),w
  5537  0ABB  1C03               	skipc
  5538  0ABC  2ABE               	goto	u7761
  5539  0ABD  2ABF               	goto	u7760
  5540  0ABE                     u7761:
  5541  0ABE  2A6F               	goto	l4984
  5542  0ABF                     u7760:
  5543  0ABF                     l5004:
  5544  0ABF  0858               	movf	(___fldiv@rem+3)^(0+128),w
  5545  0AC0  0457               	iorwf	(___fldiv@rem+2)^(0+128),w
  5546  0AC1  0456               	iorwf	(___fldiv@rem+1)^(0+128),w
  5547  0AC2  0455               	iorwf	___fldiv@rem^(0+128),w
  5548  0AC3  1903               	skipnz
  5549  0AC4  2AC6               	goto	u7771
  5550  0AC5  2AC7               	goto	u7770
  5551  0AC6                     u7771:
  5552  0AC6  2AE6               	goto	l5018
  5553  0AC7                     u7770:
  5554  0AC7                     l5006:
  5555  0AC7  145C               	bsf	___fldiv@grs^(0+128),0
  5556  0AC8  2AE6               	goto	l5018
  5557  0AC9                     l5008:
  5558  0AC9  3001               	movlw	1
  5559  0ACA  00D0               	movwf	??___fldiv^(0+128)
  5560  0ACB                     u7785:
  5561  0ACB  1003               	clrc
  5562  0ACC  0DCC               	rlf	___fldiv@b^(0+128),f
  5563  0ACD  0DCD               	rlf	(___fldiv@b+1)^(0+128),f
  5564  0ACE  0DCE               	rlf	(___fldiv@b+2)^(0+128),f
  5565  0ACF  0DCF               	rlf	(___fldiv@b+3)^(0+128),f
  5566  0AD0  0BD0               	decfsz	??___fldiv^(0+128),f
  5567  0AD1  2ACB               	goto	u7785
  5568  0AD2                     l5010:
  5569  0AD2  1FDF               	btfss	(___fldiv@grs+3)^(0+128),7
  5570  0AD3  2AD5               	goto	u7791
  5571  0AD4  2AD6               	goto	u7790
  5572  0AD5                     u7791:
  5573  0AD5  2AD7               	goto	l5014
  5574  0AD6                     u7790:
  5575  0AD6                     l5012:
  5576  0AD6  144C               	bsf	___fldiv@b^(0+128),0
  5577  0AD7                     l5014:
  5578  0AD7  3001               	movlw	1
  5579  0AD8  00D0               	movwf	??___fldiv^(0+128)
  5580  0AD9                     u7805:
  5581  0AD9  1003               	clrc
  5582  0ADA  0DDC               	rlf	___fldiv@grs^(0+128),f
  5583  0ADB  0DDD               	rlf	(___fldiv@grs+1)^(0+128),f
  5584  0ADC  0DDE               	rlf	(___fldiv@grs+2)^(0+128),f
  5585  0ADD  0DDF               	rlf	(___fldiv@grs+3)^(0+128),f
  5586  0ADE  0BD0               	decfsz	??___fldiv^(0+128),f
  5587  0ADF  2AD9               	goto	u7805
  5588  0AE0                     l5016:
  5589  0AE0  30FF               	movlw	255
  5590  0AE1  07DA               	addwf	___fldiv@new_exp^(0+128),f
  5591  0AE2  1803               	skipnc
  5592  0AE3  0ADB               	incf	(___fldiv@new_exp+1)^(0+128),f
  5593  0AE4  30FF               	movlw	255
  5594  0AE5  07DB               	addwf	(___fldiv@new_exp+1)^(0+128),f
  5595  0AE6                     l5018:
  5596  0AE6  1FCE               	btfss	(___fldiv@b+2)^(0+128),7
  5597  0AE7  2AE9               	goto	u7811
  5598  0AE8  2AEA               	goto	u7810
  5599  0AE9                     u7811:
  5600  0AE9  2AC9               	goto	l5008
  5601  0AEA                     u7810:
  5602  0AEA                     l5020:
  5603  0AEA  01E1               	clrf	___fldiv@aexp^(0+128)
  5604  0AEB                     l5022:
  5605  0AEB  1FDF               	btfss	(___fldiv@grs+3)^(0+128),7
  5606  0AEC  2AEE               	goto	u7821
  5607  0AED  2AEF               	goto	u7820
  5608  0AEE                     u7821:
  5609  0AEE  2B0B               	goto	l5030
  5610  0AEF                     u7820:
  5611  0AEF                     l5024:
  5612  0AEF  30FF               	movlw	255
  5613  0AF0  055C               	andwf	___fldiv@grs^(0+128),w
  5614  0AF1  00D0               	movwf	??___fldiv^(0+128)
  5615  0AF2  30FF               	movlw	255
  5616  0AF3  055D               	andwf	(___fldiv@grs+1)^(0+128),w
  5617  0AF4  00D1               	movwf	(??___fldiv^(0+128)+1)
  5618  0AF5  30FF               	movlw	255
  5619  0AF6  055E               	andwf	(___fldiv@grs+2)^(0+128),w
  5620  0AF7  00D2               	movwf	(??___fldiv^(0+128)+2)
  5621  0AF8  307F               	movlw	127
  5622  0AF9  055F               	andwf	(___fldiv@grs+3)^(0+128),w
  5623  0AFA  00D3               	movwf	(??___fldiv^(0+128)+3)
  5624  0AFB  0853               	movf	(??___fldiv+3)^(0+128),w
  5625  0AFC  0452               	iorwf	(??___fldiv+2)^(0+128),w
  5626  0AFD  0451               	iorwf	(??___fldiv+1)^(0+128),w
  5627  0AFE  0450               	iorwf	??___fldiv^(0+128),w
  5628  0AFF  1903               	skipnz
  5629  0B00  2B02               	goto	u7831
  5630  0B01  2B03               	goto	u7830
  5631  0B02                     u7831:
  5632  0B02  2B06               	goto	l1061
  5633  0B03                     u7830:
  5634  0B03                     l5026:
  5635  0B03  01E1               	clrf	___fldiv@aexp^(0+128)
  5636  0B04  0AE1               	incf	___fldiv@aexp^(0+128),f
  5637  0B05  2B0B               	goto	l5030
  5638  0B06                     l1061:
  5639  0B06  1C4C               	btfss	___fldiv@b^(0+128),0
  5640  0B07  2B09               	goto	u7841
  5641  0B08  2B0A               	goto	u7840
  5642  0B09                     u7841:
  5643  0B09  2B0B               	goto	l5030
  5644  0B0A                     u7840:
  5645  0B0A  2B03               	goto	l5026
  5646  0B0B                     l5030:
  5647  0B0B  0861               	movf	___fldiv@aexp^(0+128),w
  5648  0B0C  1903               	btfsc	3,2
  5649  0B0D  2B0F               	goto	u7851
  5650  0B0E  2B10               	goto	u7850
  5651  0B0F                     u7851:
  5652  0B0F  2B41               	goto	l5040
  5653  0B10                     u7850:
  5654  0B10                     l5032:
  5655  0B10  3001               	movlw	1
  5656  0B11  07CC               	addwf	___fldiv@b^(0+128),f
  5657  0B12  3000               	movlw	0
  5658  0B13  1803               	skipnc
  5659  0B14  3001               	movlw	1
  5660  0B15  07CD               	addwf	(___fldiv@b+1)^(0+128),f
  5661  0B16  3000               	movlw	0
  5662  0B17  1803               	skipnc
  5663  0B18  3001               	movlw	1
  5664  0B19  07CE               	addwf	(___fldiv@b+2)^(0+128),f
  5665  0B1A  3000               	movlw	0
  5666  0B1B  1803               	skipnc
  5667  0B1C  3001               	movlw	1
  5668  0B1D  07CF               	addwf	(___fldiv@b+3)^(0+128),f
  5669  0B1E                     l5034:
  5670  0B1E  1C4F               	btfss	(___fldiv@b+3)^(0+128),0
  5671  0B1F  2B21               	goto	u7861
  5672  0B20  2B22               	goto	u7860
  5673  0B21                     u7861:
  5674  0B21  2B41               	goto	l5040
  5675  0B22                     u7860:
  5676  0B22                     l5036:
  5677  0B22  084C               	movf	___fldiv@b^(0+128),w
  5678  0B23  00D0               	movwf	??___fldiv^(0+128)
  5679  0B24  084D               	movf	(___fldiv@b+1)^(0+128),w
  5680  0B25  00D1               	movwf	(??___fldiv^(0+128)+1)
  5681  0B26  084E               	movf	(___fldiv@b+2)^(0+128),w
  5682  0B27  00D2               	movwf	(??___fldiv^(0+128)+2)
  5683  0B28  084F               	movf	(___fldiv@b+3)^(0+128),w
  5684  0B29  00D3               	movwf	(??___fldiv^(0+128)+3)
  5685  0B2A  3001               	movlw	1
  5686  0B2B  00D4               	movwf	(??___fldiv+4)^(0+128)
  5687  0B2C                     u7875:
  5688  0B2C  0D53               	rlf	(??___fldiv^(0+128)+3),w
  5689  0B2D  0CD3               	rrf	(??___fldiv^(0+128)+3),f
  5690  0B2E  0CD2               	rrf	(??___fldiv^(0+128)+2),f
  5691  0B2F  0CD1               	rrf	(??___fldiv^(0+128)+1),f
  5692  0B30  0CD0               	rrf	??___fldiv^(0+128),f
  5693  0B31                     u7870:
  5694  0B31  0BD4               	decfsz	(??___fldiv+4)^(0+128),f
  5695  0B32  2B2C               	goto	u7875
  5696  0B33  0853               	movf	(??___fldiv+3)^(0+128),w
  5697  0B34  00CF               	movwf	(___fldiv@b+3)^(0+128)
  5698  0B35  0852               	movf	(??___fldiv+2)^(0+128),w
  5699  0B36  00CE               	movwf	(___fldiv@b+2)^(0+128)
  5700  0B37  0851               	movf	(??___fldiv+1)^(0+128),w
  5701  0B38  00CD               	movwf	(___fldiv@b+1)^(0+128)
  5702  0B39  0850               	movf	??___fldiv^(0+128),w
  5703  0B3A  00CC               	movwf	___fldiv@b^(0+128)
  5704  0B3B                     l5038:
  5705  0B3B  3001               	movlw	1
  5706  0B3C  07DA               	addwf	___fldiv@new_exp^(0+128),f
  5707  0B3D  1803               	skipnc
  5708  0B3E  0ADB               	incf	(___fldiv@new_exp+1)^(0+128),f
  5709  0B3F  3000               	movlw	0
  5710  0B40  07DB               	addwf	(___fldiv@new_exp+1)^(0+128),f
  5711  0B41                     l5040:
  5712  0B41  085B               	movf	(___fldiv@new_exp+1)^(0+128),w
  5713  0B42  3A80               	xorlw	128
  5714  0B43  00FF               	movwf	btemp+1
  5715  0B44  3080               	movlw	128
  5716  0B45  027F               	subwf	btemp+1,w
  5717  0B46  1D03               	skipz
  5718  0B47  2B4A               	goto	u7885
  5719  0B48  30FF               	movlw	255
  5720  0B49  025A               	subwf	___fldiv@new_exp^(0+128),w
  5721  0B4A                     u7885:
  5722  0B4A  1C03               	skipc
  5723  0B4B  2B4D               	goto	u7881
  5724  0B4C  2B4E               	goto	u7880
  5725  0B4D                     u7881:
  5726  0B4D  2B5C               	goto	l5044
  5727  0B4E                     u7880:
  5728  0B4E                     l5042:
  5729  0B4E  30FF               	movlw	255
  5730  0B4F  1683               	bsf	3,5	;RP0=1, select bank1
  5731  0B50  1303               	bcf	3,6	;RP1=0, select bank1
  5732  0B51  00DA               	movwf	___fldiv@new_exp^(0+128)
  5733  0B52  3000               	movlw	0
  5734  0B53  00DB               	movwf	(___fldiv@new_exp^(0+128)+1)
  5735  0B54  3000               	movlw	0
  5736  0B55  00CF               	movwf	(___fldiv@b+3)^(0+128)
  5737  0B56  3000               	movlw	0
  5738  0B57  00CE               	movwf	(___fldiv@b+2)^(0+128)
  5739  0B58  3000               	movlw	0
  5740  0B59  00CD               	movwf	(___fldiv@b+1)^(0+128)
  5741  0B5A  3000               	movlw	0
  5742  0B5B  00CC               	movwf	___fldiv@b^(0+128)
  5743  0B5C                     l5044:
  5744  0B5C  1683               	bsf	3,5	;RP0=1, select bank1
  5745  0B5D  1303               	bcf	3,6	;RP1=0, select bank1
  5746  0B5E  085B               	movf	(___fldiv@new_exp+1)^(0+128),w
  5747  0B5F  3A80               	xorlw	128
  5748  0B60  00FF               	movwf	btemp+1
  5749  0B61  3080               	movlw	128
  5750  0B62  027F               	subwf	btemp+1,w
  5751  0B63  1D03               	skipz
  5752  0B64  2B67               	goto	u7895
  5753  0B65  3001               	movlw	1
  5754  0B66  025A               	subwf	___fldiv@new_exp^(0+128),w
  5755  0B67                     u7895:
  5756  0B67  1803               	skipnc
  5757  0B68  2B6A               	goto	u7891
  5758  0B69  2B6B               	goto	u7890
  5759  0B6A                     u7891:
  5760  0B6A  2B78               	goto	l5052
  5761  0B6B                     u7890:
  5762  0B6B                     l5046:
  5763  0B6B  1683               	bsf	3,5	;RP0=1, select bank1
  5764  0B6C  1303               	bcf	3,6	;RP1=0, select bank1
  5765  0B6D  01DA               	clrf	___fldiv@new_exp^(0+128)
  5766  0B6E  01DB               	clrf	(___fldiv@new_exp+1)^(0+128)
  5767  0B6F                     l5048:
  5768  0B6F  3000               	movlw	0
  5769  0B70  00CF               	movwf	(___fldiv@b+3)^(0+128)
  5770  0B71  3000               	movlw	0
  5771  0B72  00CE               	movwf	(___fldiv@b+2)^(0+128)
  5772  0B73  3000               	movlw	0
  5773  0B74  00CD               	movwf	(___fldiv@b+1)^(0+128)
  5774  0B75  3000               	movlw	0
  5775  0B76  00CC               	movwf	___fldiv@b^(0+128)
  5776  0B77                     l5050:
  5777  0B77  01D9               	clrf	___fldiv@sign^(0+128)
  5778  0B78                     l5052:
  5779  0B78  1683               	bsf	3,5	;RP0=1, select bank1
  5780  0B79  1303               	bcf	3,6	;RP1=0, select bank1
  5781  0B7A  085A               	movf	___fldiv@new_exp^(0+128),w
  5782  0B7B  00FF               	movwf	btemp+1
  5783  0B7C  087F               	movf	btemp+1,w
  5784  0B7D  00E0               	movwf	___fldiv@bexp^(0+128)
  5785  0B7E                     l5054:
  5786  0B7E  1C60               	btfss	___fldiv@bexp^(0+128),0
  5787  0B7F  2B81               	goto	u7901
  5788  0B80  2B82               	goto	u7900
  5789  0B81                     u7901:
  5790  0B81  2B84               	goto	l5058
  5791  0B82                     u7900:
  5792  0B82                     l5056:
  5793  0B82  17CE               	bsf	(___fldiv@b^(0+128)+2),7
  5794  0B83  2B88               	goto	l1069
  5795  0B84                     l5058:
  5796  0B84  307F               	movlw	127
  5797  0B85  00FF               	movwf	btemp+1
  5798  0B86  087F               	movf	btemp+1,w
  5799  0B87  05CE               	andwf	(___fldiv@b^(0+128)+2),f
  5800  0B88                     l1069:
  5801  0B88  0860               	movf	___fldiv@bexp^(0+128),w
  5802  0B89  00D0               	movwf	??___fldiv^(0+128)
  5803  0B8A  1003               	clrc
  5804  0B8B  0C50               	rrf	??___fldiv^(0+128),w
  5805  0B8C  00FF               	movwf	btemp+1
  5806  0B8D  087F               	movf	btemp+1,w
  5807  0B8E  00CF               	movwf	(___fldiv@b^(0+128)+3)
  5808  0B8F  0859               	movf	___fldiv@sign^(0+128),w
  5809  0B90  00FF               	movwf	btemp+1
  5810  0B91  087F               	movf	btemp+1,w
  5811  0B92  04CF               	iorwf	(___fldiv@b^(0+128)+3),f
  5812  0B93  2A2C               	goto	l4964
  5813  0B94                     l1047:
  5814  0B94  0008               	return
  5815  0B95                     __end_of___fldiv:
  5816                           
  5817                           	psect	text13
  5818  10FE                     __ptext13:	
  5819 ;; *************** function _SW_Init *****************
  5820 ;; Defined at:
  5821 ;;		line 22 in file "SW.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;		None
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;  index           1    3[BANK1 ] unsigned char 
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  1    wreg      void 
  5828 ;; Registers used:
  5829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5835 ;;      Params:         0       0       0       0       0
  5836 ;;      Locals:         0       0       1       0       0
  5837 ;;      Temps:          0       0       0       0       0
  5838 ;;      Totals:         0       0       1       0       0
  5839 ;;Total ram usage:        1 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; Hardware stack levels required when called:    8
  5842 ;; This function calls:
  5843 ;;		___bmul
  5844 ;; This function is called by:
  5845 ;;		_OS_init
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           
  5850                           ;psect for function _SW_Init
  5851  10FE                     _SW_Init:
  5852  10FE                     l5330:	
  5853                           ;incstack = 0
  5854 ;; hardware stack exceeded
  5855                           ; Regs used in _SW_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5856                           
  5857  10FE                     l5332:
  5858                           
  5859                           ;SW.c: 25: (((TRISB)) = ((TRISB) & (~(1 << (2))))|((1) << (2)));
  5860  10FE  1683               	bsf	3,5	;RP0=1, select bank1
  5861  10FF  1303               	bcf	3,6	;RP1=0, select bank1
  5862  1100  0806               	movf	6,w	;volatile
  5863  1101  39FB               	andlw	251
  5864  1102  3804               	iorlw	4
  5865  1103  0086               	movwf	6	;volatile
  5866  1104                     l5334:
  5867                           
  5868                           ;SW.c: 26: (((TRISB)) = ((TRISB) & (~(1 << (1))))|((1) << (1)));
  5869  1104  0806               	movf	6,w	;volatile
  5870  1105  39FD               	andlw	253
  5871  1106  3802               	iorlw	2
  5872  1107  0086               	movwf	6	;volatile
  5873                           
  5874                           ;SW.c: 28: for(index = SW_SET ; index < (3) ; index++ )
  5875  1108  01A3               	clrf	SW_Init@index^(0+128)
  5876  1109                     l5340:
  5877                           
  5878                           ;SW.c: 29: {;SW.c: 30: SWs_Info[index].SW_Samples[0] = (1);
  5879  1109  3003               	movlw	3
  5880  110A  00FF               	movwf	btemp+1
  5881  110B  087F               	movf	btemp+1,w
  5882  110C  00A0               	movwf	___bmul@multiplicand^(0+128)
  5883  110D  0823               	movf	SW_Init@index^(0+128),w
  5884  110E  120A  118A  27E7  160A  118A  	fcall	___bmul
  5885  1113  3E90               	addlw	(low (_SWs_Info| (0+256)))& (0+255)
  5886  1114  0084               	movwf	4
  5887  1115  1783               	bsf	3,7	;select IRP bank3
  5888  1116  0180               	clrf	0
  5889  1117  0A80               	incf	0,f
  5890                           
  5891                           ;SW.c: 31: SWs_Info[index].SW_Samples[1] = (1);
  5892  1118  3003               	movlw	3
  5893  1119  00FF               	movwf	btemp+1
  5894  111A  087F               	movf	btemp+1,w
  5895  111B  1683               	bsf	3,5	;RP0=1, select bank1
  5896  111C  1303               	bcf	3,6	;RP1=0, select bank1
  5897  111D  00A0               	movwf	___bmul@multiplicand^(0+128)
  5898  111E  0823               	movf	SW_Init@index^(0+128),w
  5899  111F  120A  118A  27E7  160A  118A  	fcall	___bmul
  5900  1124  3E91               	addlw	(low ((_SWs_Info| (0+256)+1)))& (0+255)
  5901  1125  0084               	movwf	4
  5902  1126  1783               	bsf	3,7	;select IRP bank3
  5903  1127  0180               	clrf	0
  5904  1128  0A80               	incf	0,f
  5905                           
  5906                           ;SW.c: 33: SWs_Info[index].SW_state = SW_RELEASED;
  5907  1129  3003               	movlw	3
  5908  112A  00FF               	movwf	btemp+1
  5909  112B  087F               	movf	btemp+1,w
  5910  112C  1683               	bsf	3,5	;RP0=1, select bank1
  5911  112D  1303               	bcf	3,6	;RP1=0, select bank1
  5912  112E  00A0               	movwf	___bmul@multiplicand^(0+128)
  5913  112F  0823               	movf	SW_Init@index^(0+128),w
  5914  1130  120A  118A  27E7  160A  118A  	fcall	___bmul
  5915  1135  3E92               	addlw	(low ((_SWs_Info| (0+256)+2)))& (0+255)
  5916  1136  0084               	movwf	4
  5917  1137  1783               	bsf	3,7	;select IRP bank3
  5918  1138  0180               	clrf	0
  5919  1139                     l5342:
  5920  1139  3001               	movlw	1
  5921  113A  00FF               	movwf	btemp+1
  5922  113B  087F               	movf	btemp+1,w
  5923  113C  1683               	bsf	3,5	;RP0=1, select bank1
  5924  113D  1303               	bcf	3,6	;RP1=0, select bank1
  5925  113E  07A3               	addwf	SW_Init@index^(0+128),f
  5926  113F                     l5344:
  5927  113F  3003               	movlw	3
  5928  1140  0223               	subwf	SW_Init@index^(0+128),w
  5929  1141  1C03               	skipc
  5930  1142  2944               	goto	u8541
  5931  1143  2945               	goto	u8540
  5932  1144                     u8541:
  5933  1144  2909               	goto	l5340
  5934  1145                     u8540:
  5935  1145                     l378:
  5936  1145  0008               	return
  5937  1146                     __end_of_SW_Init:
  5938                           
  5939                           	psect	text14
  5940  07E7                     __ptext14:	
  5941 ;; *************** function ___bmul *****************
  5942 ;; Defined at:
  5943 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  multiplier      1    wreg     unsigned char 
  5946 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  multiplier      1    2[BANK1 ] unsigned char 
  5949 ;;  product         1    1[BANK1 ] unsigned char 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      unsigned char 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0, btemp+1
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5959 ;;      Params:         0       0       1       0       0
  5960 ;;      Locals:         0       0       2       0       0
  5961 ;;      Temps:          0       0       0       0       0
  5962 ;;      Totals:         0       0       3       0       0
  5963 ;;Total ram usage:        3 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    7
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_SW_Init
  5970 ;;		_SW_GetState
  5971 ;;		_SW_Update
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           
  5976                           ;psect for function ___bmul
  5977  07E7                     ___bmul:
  5978                           
  5979                           ;incstack = 0
  5980 ;; hardware stack exceeded
  5981                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  5982                           ;___bmul@multiplier stored from wreg
  5983  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  5984  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  5985  07E9  00A2               	movwf	___bmul@multiplier^(0+128)
  5986  07EA                     l5266:
  5987  07EA  01A1               	clrf	___bmul@product^(0+128)
  5988  07EB                     l5268:
  5989  07EB  1C22               	btfss	___bmul@multiplier^(0+128),0
  5990  07EC  2FEE               	goto	u8441
  5991  07ED  2FEF               	goto	u8440
  5992  07EE                     u8441:
  5993  07EE  2FF3               	goto	l5272
  5994  07EF                     u8440:
  5995  07EF                     l5270:
  5996  07EF  0820               	movf	___bmul@multiplicand^(0+128),w
  5997  07F0  00FF               	movwf	btemp+1
  5998  07F1  087F               	movf	btemp+1,w
  5999  07F2  07A1               	addwf	___bmul@product^(0+128),f
  6000  07F3                     l5272:
  6001  07F3  1003               	clrc
  6002  07F4  0DA0               	rlf	___bmul@multiplicand^(0+128),f
  6003  07F5                     l5274:
  6004  07F5  1003               	clrc
  6005  07F6  0CA2               	rrf	___bmul@multiplier^(0+128),f
  6006  07F7                     l5276:
  6007  07F7  0822               	movf	___bmul@multiplier^(0+128),w
  6008  07F8  1D03               	btfss	3,2
  6009  07F9  2FFB               	goto	u8451
  6010  07FA  2FFC               	goto	u8450
  6011  07FB                     u8451:
  6012  07FB  2FEB               	goto	l5268
  6013  07FC                     u8450:
  6014  07FC                     l5278:
  6015  07FC  0821               	movf	___bmul@product^(0+128),w
  6016  07FD                     l722:
  6017  07FD  0008               	return
  6018  07FE                     __end_of___bmul:
  6019                           
  6020                           	psect	text15
  6021  1C70                     __ptext15:	
  6022 ;; *************** function _SDD_Init *****************
  6023 ;; Defined at:
  6024 ;;		line 24 in file "SSD.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;		None
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;		None
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  1    wreg      void 
  6031 ;; Registers used:
  6032 ;;		wreg, status,2
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6038 ;;      Params:         0       0       0       0       0
  6039 ;;      Locals:         0       0       2       0       0
  6040 ;;      Temps:          0       0       0       0       0
  6041 ;;      Totals:         0       0       2       0       0
  6042 ;;Total ram usage:        2 bytes
  6043 ;; Hardware stack levels used:    1
  6044 ;; Hardware stack levels required when called:    7
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_OS_init
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           
  6053                           ;psect for function _SDD_Init
  6054  1C70                     _SDD_Init:
  6055  1C70                     l5324:	
  6056                           ;incstack = 0
  6057 ;; hardware stack exceeded
  6058                           ; Regs used in _SDD_Init: [wreg+status,2]
  6059                           
  6060                           
  6061                           ;SSD.c: 26: (((TRISA)) = ((TRISA) & (~(1 << (3))))|((0) << (3)));
  6062  1C70  1683               	bsf	3,5	;RP0=1, select bank1
  6063  1C71  1303               	bcf	3,6	;RP1=0, select bank1
  6064  1C72  0805               	movf	5,w	;volatile
  6065  1C73  39F7               	andlw	247
  6066  1C74  0085               	movwf	5	;volatile
  6067                           
  6068                           ;SSD.c: 28: (((TRISD)) = (((0x00))) ? (((0xFF))) : (((0x00))));
  6069  1C75  0805               	movf	5,w	;volatile
  6070  1C76  39F7               	andlw	247
  6071  1C77  0085               	movwf	5	;volatile
  6072  1C78                     l5326:
  6073  1C78                     l227:
  6074  1C78  0188               	clrf	8	;volatile
  6075  1C79                     l228:
  6076  1C79  0008               	return
  6077  1C7A                     __end_of_SDD_Init:
  6078                           
  6079                           	psect	text16
  6080  1C55                     __ptext16:	
  6081 ;; *************** function _Led_init *****************
  6082 ;; Defined at:
  6083 ;;		line 10 in file "LED.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;		None
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6097 ;;      Params:         0       0       0       0       0
  6098 ;;      Locals:         0       0       0       0       0
  6099 ;;      Temps:          0       0       0       0       0
  6100 ;;      Totals:         0       0       0       0       0
  6101 ;;Total ram usage:        0 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    7
  6104 ;; This function calls:
  6105 ;;		Nothing
  6106 ;; This function is called by:
  6107 ;;		_OS_init
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           
  6112                           ;psect for function _Led_init
  6113  1C55                     _Led_init:
  6114  1C55                     l5348:	
  6115                           ;incstack = 0
  6116 ;; hardware stack exceeded
  6117                           ; Regs used in _Led_init: [wreg+status,2]
  6118                           
  6119                           
  6120                           ;LED.c: 12: (((TRISB)) = ((TRISB) & (~(1 << (7))))|((0) << (7)));
  6121  1C55  1683               	bsf	3,5	;RP0=1, select bank1
  6122  1C56  1303               	bcf	3,6	;RP1=0, select bank1
  6123  1C57  0806               	movf	6,w	;volatile
  6124  1C58  397F               	andlw	127
  6125  1C59  0086               	movwf	6	;volatile
  6126                           
  6127                           ;LED.c: 13: (((TRISB)) = ((TRISB) & (~(1 << (7))))|((0) << (7)));
  6128  1C5A  0806               	movf	6,w	;volatile
  6129  1C5B  397F               	andlw	127
  6130  1C5C  0086               	movwf	6	;volatile
  6131  1C5D                     l591:
  6132  1C5D  0008               	return
  6133  1C5E                     __end_of_Led_init:
  6134                           
  6135                           	psect	text17
  6136  1E90                     __ptext17:	
  6137 ;; *************** function _I2C_Master_init *****************
  6138 ;; Defined at:
  6139 ;;		line 8 in file "I2C.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  baud            4   14[BANK1 ] const unsigned long 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6153 ;;      Params:         0       0       4       0       0
  6154 ;;      Locals:         0       0       0       0       0
  6155 ;;      Temps:          0       0       4       0       0
  6156 ;;      Totals:         0       0       8       0       0
  6157 ;;Total ram usage:        8 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    8
  6160 ;; This function calls:
  6161 ;;		___lldiv
  6162 ;; This function is called by:
  6163 ;;		_OS_init
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           
  6168                           ;psect for function _I2C_Master_init
  6169  1E90                     _I2C_Master_init:
  6170  1E90                     l5312:	
  6171                           ;incstack = 0
  6172 ;; hardware stack exceeded
  6173                           ; Regs used in _I2C_Master_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6174                           
  6175                           
  6176                           ;I2C.c: 10: SSPCON = 0b00101000;
  6177  1E90  3028               	movlw	40
  6178  1E91  1283               	bcf	3,5	;RP0=0, select bank0
  6179  1E92  1303               	bcf	3,6	;RP1=0, select bank0
  6180  1E93  0094               	movwf	20	;volatile
  6181  1E94                     l5314:
  6182                           
  6183                           ;I2C.c: 11: SSPCON2 = 0x00;
  6184  1E94  1683               	bsf	3,5	;RP0=1, select bank1
  6185  1E95  1303               	bcf	3,6	;RP1=0, select bank1
  6186  1E96  0191               	clrf	17	;volatile
  6187  1E97                     l5316:
  6188                           
  6189                           ;I2C.c: 12: SSPADD = (4000000/(4*baud))-1;
  6190  1E97  082E               	movf	I2C_Master_init@baud^(0+128),w
  6191  1E98  00B2               	movwf	??_I2C_Master_init^(0+128)
  6192  1E99  082F               	movf	(I2C_Master_init@baud+1)^(0+128),w
  6193  1E9A  00B3               	movwf	(??_I2C_Master_init^(0+128)+1)
  6194  1E9B  0830               	movf	(I2C_Master_init@baud+2)^(0+128),w
  6195  1E9C  00B4               	movwf	(??_I2C_Master_init^(0+128)+2)
  6196  1E9D  0831               	movf	(I2C_Master_init@baud+3)^(0+128),w
  6197  1E9E  00B5               	movwf	(??_I2C_Master_init^(0+128)+3)
  6198  1E9F  3002               	movlw	2
  6199  1EA0                     u8535:
  6200  1EA0  1003               	clrc
  6201  1EA1  0DB2               	rlf	??_I2C_Master_init^(0+128),f
  6202  1EA2  0DB3               	rlf	(??_I2C_Master_init^(0+128)+1),f
  6203  1EA3  0DB4               	rlf	(??_I2C_Master_init^(0+128)+2),f
  6204  1EA4  0DB5               	rlf	(??_I2C_Master_init^(0+128)+3),f
  6205  1EA5                     u8530:
  6206  1EA5  3EFF               	addlw	-1
  6207  1EA6  1D03               	skipz
  6208  1EA7  2EA0               	goto	u8535
  6209  1EA8  0835               	movf	(??_I2C_Master_init+3)^(0+128),w
  6210  1EA9  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  6211  1EAA  0834               	movf	(??_I2C_Master_init+2)^(0+128),w
  6212  1EAB  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  6213  1EAC  0833               	movf	(??_I2C_Master_init+1)^(0+128),w
  6214  1EAD  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  6215  1EAE  0832               	movf	??_I2C_Master_init^(0+128),w
  6216  1EAF  00A0               	movwf	___lldiv@divisor^(0+128)
  6217  1EB0  3000               	movlw	0
  6218  1EB1  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  6219  1EB2  303D               	movlw	61
  6220  1EB3  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  6221  1EB4  3009               	movlw	9
  6222  1EB5  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  6223  1EB6  3000               	movlw	0
  6224  1EB7  00A4               	movwf	___lldiv@dividend^(0+128)
  6225  1EB8  160A  118A  22C9  160A  158A  	fcall	___lldiv
  6226  1EBD  1683               	bsf	3,5	;RP0=1, select bank1
  6227  1EBE  1303               	bcf	3,6	;RP1=0, select bank1
  6228  1EBF  0820               	movf	?___lldiv^(0+128),w
  6229  1EC0  3EFF               	addlw	255
  6230  1EC1  0093               	movwf	19	;volatile
  6231  1EC2                     l5318:
  6232                           
  6233                           ;I2C.c: 13: SSPSTAT = 0x00;
  6234  1EC2  0194               	clrf	20	;volatile
  6235  1EC3                     l5320:
  6236                           
  6237                           ;I2C.c: 14: TRISC3 = 1;
  6238  1EC3  1587               	bsf	7,3	;volatile
  6239  1EC4                     l5322:
  6240                           
  6241                           ;I2C.c: 15: TRISC4 = 1 ;
  6242  1EC4  1607               	bsf	7,4	;volatile
  6243  1EC5                     l164:
  6244  1EC5  0008               	return
  6245  1EC6                     __end_of_I2C_Master_init:
  6246                           
  6247                           	psect	text18
  6248  12C9                     __ptext18:	
  6249 ;; *************** function ___lldiv *****************
  6250 ;; Defined at:
  6251 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  divisor         4    0[BANK1 ] unsigned long 
  6254 ;;  dividend        4    4[BANK1 ] unsigned long 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;  quotient        4    9[BANK1 ] unsigned long 
  6257 ;;  counter         1   13[BANK1 ] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  4    0[BANK1 ] unsigned long 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0, btemp+1
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6267 ;;      Params:         0       0       8       0       0
  6268 ;;      Locals:         0       0       5       0       0
  6269 ;;      Temps:          0       0       1       0       0
  6270 ;;      Totals:         0       0      14       0       0
  6271 ;;Total ram usage:       14 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    7
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_I2C_Master_init
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           
  6282                           ;psect for function ___lldiv
  6283  12C9                     ___lldiv:
  6284  12C9                     l5282:	
  6285                           ;incstack = 0
  6286 ;; hardware stack exceeded
  6287                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  6288                           
  6289  12C9  3000               	movlw	0
  6290  12CA  1683               	bsf	3,5	;RP0=1, select bank1
  6291  12CB  1303               	bcf	3,6	;RP1=0, select bank1
  6292  12CC  00AC               	movwf	(___lldiv@quotient+3)^(0+128)
  6293  12CD  3000               	movlw	0
  6294  12CE  00AB               	movwf	(___lldiv@quotient+2)^(0+128)
  6295  12CF  3000               	movlw	0
  6296  12D0  00AA               	movwf	(___lldiv@quotient+1)^(0+128)
  6297  12D1  3000               	movlw	0
  6298  12D2  00A9               	movwf	___lldiv@quotient^(0+128)
  6299  12D3  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  6300  12D4  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  6301  12D5  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  6302  12D6  0420               	iorwf	___lldiv@divisor^(0+128),w
  6303  12D7  1903               	skipnz
  6304  12D8  2ADA               	goto	u8461
  6305  12D9  2ADB               	goto	u8460
  6306  12DA                     u8461:
  6307  12DA  2B28               	goto	l5304
  6308  12DB                     u8460:
  6309  12DB                     l5284:
  6310  12DB  01AD               	clrf	___lldiv@counter^(0+128)
  6311  12DC  0AAD               	incf	___lldiv@counter^(0+128),f
  6312  12DD  2AEB               	goto	l5290
  6313  12DE                     l5286:
  6314  12DE  3001               	movlw	1
  6315  12DF  00A8               	movwf	??___lldiv^(0+128)
  6316  12E0                     u8475:
  6317  12E0  1003               	clrc
  6318  12E1  0DA0               	rlf	___lldiv@divisor^(0+128),f
  6319  12E2  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  6320  12E3  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  6321  12E4  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  6322  12E5  0BA8               	decfsz	??___lldiv^(0+128),f
  6323  12E6  2AE0               	goto	u8475
  6324  12E7                     l5288:
  6325  12E7  3001               	movlw	1
  6326  12E8  00FF               	movwf	btemp+1
  6327  12E9  087F               	movf	btemp+1,w
  6328  12EA  07AD               	addwf	___lldiv@counter^(0+128),f
  6329  12EB                     l5290:
  6330  12EB  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  6331  12EC  2AEE               	goto	u8481
  6332  12ED  2AEF               	goto	u8480
  6333  12EE                     u8481:
  6334  12EE  2ADE               	goto	l5286
  6335  12EF                     u8480:
  6336  12EF                     l5292:
  6337  12EF  3001               	movlw	1
  6338  12F0  00A8               	movwf	??___lldiv^(0+128)
  6339  12F1                     u8495:
  6340  12F1  1003               	clrc
  6341  12F2  0DA9               	rlf	___lldiv@quotient^(0+128),f
  6342  12F3  0DAA               	rlf	(___lldiv@quotient+1)^(0+128),f
  6343  12F4  0DAB               	rlf	(___lldiv@quotient+2)^(0+128),f
  6344  12F5  0DAC               	rlf	(___lldiv@quotient+3)^(0+128),f
  6345  12F6  0BA8               	decfsz	??___lldiv^(0+128),f
  6346  12F7  2AF1               	goto	u8495
  6347  12F8                     l5294:
  6348  12F8  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  6349  12F9  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  6350  12FA  1D03               	skipz
  6351  12FB  2B06               	goto	u8505
  6352  12FC  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  6353  12FD  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  6354  12FE  1D03               	skipz
  6355  12FF  2B06               	goto	u8505
  6356  1300  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  6357  1301  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  6358  1302  1D03               	skipz
  6359  1303  2B06               	goto	u8505
  6360  1304  0820               	movf	___lldiv@divisor^(0+128),w
  6361  1305  0224               	subwf	___lldiv@dividend^(0+128),w
  6362  1306                     u8505:
  6363  1306  1C03               	skipc
  6364  1307  2B09               	goto	u8501
  6365  1308  2B0A               	goto	u8500
  6366  1309                     u8501:
  6367  1309  2B19               	goto	l5300
  6368  130A                     u8500:
  6369  130A                     l5296:
  6370  130A  0820               	movf	___lldiv@divisor^(0+128),w
  6371  130B  02A4               	subwf	___lldiv@dividend^(0+128),f
  6372  130C  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  6373  130D  1C03               	skipc
  6374  130E  0F21               	incfsz	(___lldiv@divisor+1)^(0+128),w
  6375  130F  02A5               	subwf	(___lldiv@dividend+1)^(0+128),f
  6376  1310  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  6377  1311  1C03               	skipc
  6378  1312  0F22               	incfsz	(___lldiv@divisor+2)^(0+128),w
  6379  1313  02A6               	subwf	(___lldiv@dividend+2)^(0+128),f
  6380  1314  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  6381  1315  1C03               	skipc
  6382  1316  0F23               	incfsz	(___lldiv@divisor+3)^(0+128),w
  6383  1317  02A7               	subwf	(___lldiv@dividend+3)^(0+128),f
  6384  1318                     l5298:
  6385  1318  1429               	bsf	___lldiv@quotient^(0+128),0
  6386  1319                     l5300:
  6387  1319  3001               	movlw	1
  6388  131A                     u8515:
  6389  131A  1003               	clrc
  6390  131B  0CA3               	rrf	(___lldiv@divisor+3)^(0+128),f
  6391  131C  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  6392  131D  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  6393  131E  0CA0               	rrf	___lldiv@divisor^(0+128),f
  6394  131F  3EFF               	addlw	-1
  6395  1320  1D03               	skipz
  6396  1321  2B1A               	goto	u8515
  6397  1322                     l5302:
  6398  1322  3001               	movlw	1
  6399  1323  02AD               	subwf	___lldiv@counter^(0+128),f
  6400  1324  1D03               	btfss	3,2
  6401  1325  2B27               	goto	u8521
  6402  1326  2B28               	goto	u8520
  6403  1327                     u8521:
  6404  1327  2AEF               	goto	l5292
  6405  1328                     u8520:
  6406  1328                     l5304:
  6407  1328  082C               	movf	(___lldiv@quotient+3)^(0+128),w
  6408  1329  00A3               	movwf	(?___lldiv+3)^(0+128)
  6409  132A  082B               	movf	(___lldiv@quotient+2)^(0+128),w
  6410  132B  00A2               	movwf	(?___lldiv+2)^(0+128)
  6411  132C  082A               	movf	(___lldiv@quotient+1)^(0+128),w
  6412  132D  00A1               	movwf	(?___lldiv+1)^(0+128)
  6413  132E  0829               	movf	___lldiv@quotient^(0+128),w
  6414  132F  00A0               	movwf	?___lldiv^(0+128)
  6415  1330                     l732:
  6416  1330  0008               	return
  6417  1331                     __end_of___lldiv:
  6418                           
  6419                           	psect	text19
  6420  1CC2                     __ptext19:	
  6421 ;; *************** function _ADC_INIT *****************
  6422 ;; Defined at:
  6423 ;;		line 5 in file "ADC.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		None
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6437 ;;      Params:         0       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0
  6440 ;;      Totals:         0       0       0       0       0
  6441 ;;Total ram usage:        0 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    7
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_OS_init
  6448 ;;		_TEMP_Init
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           
  6453                           ;psect for function _ADC_INIT
  6454  1CC2                     _ADC_INIT:
  6455  1CC2                     l5310:	
  6456                           ;incstack = 0
  6457 ;; hardware stack exceeded
  6458                           ; Regs used in _ADC_INIT: []
  6459                           
  6460                           
  6461                           ;ADC.c: 7: (ADON = 0);
  6462  1CC2  1283               	bcf	3,5	;RP0=0, select bank0
  6463  1CC3  1303               	bcf	3,6	;RP1=0, select bank0
  6464  1CC4  101F               	bcf	31,0	;volatile
  6465                           
  6466                           ;ADC.c: 8: (ADCS2 = ((8) & 0x4 ) >> 2); (ADCS1 = ((8) & 0x2 ) >> 1); (ADCS2 = ((8) & 0x1
      +                           ) >> 0);;
  6467  1CC5  1683               	bsf	3,5	;RP0=1, select bank1
  6468  1CC6  1303               	bcf	3,6	;RP1=0, select bank1
  6469  1CC7  131F               	bcf	31,6	;volatile
  6470  1CC8  1283               	bcf	3,5	;RP0=0, select bank0
  6471  1CC9  1303               	bcf	3,6	;RP1=0, select bank0
  6472  1CCA  139F               	bcf	31,7	;volatile
  6473  1CCB  1683               	bsf	3,5	;RP0=1, select bank1
  6474  1CCC  1303               	bcf	3,6	;RP1=0, select bank1
  6475  1CCD  131F               	bcf	31,6	;volatile
  6476                           
  6477                           ;ADC.c: 9: PCFG3 = 1; PCFG2 = 0; PCFG1 = 1; PCFG0 = 0;
  6478  1CCE  159F               	bsf	31,3	;volatile
  6479  1CCF  111F               	bcf	31,2	;volatile
  6480  1CD0  149F               	bsf	31,1	;volatile
  6481  1CD1  101F               	bcf	31,0	;volatile
  6482  1CD2                     l123:
  6483  1CD2  0008               	return
  6484  1CD3                     __end_of_ADC_INIT:
  6485                           
  6486                           	psect	text20
  6487  1EC6                     __ptext20:	
  6488 ;; *************** function _TMR_Update *****************
  6489 ;; Defined at:
  6490 ;;		line 53 in file "TIMER.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;		None
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;		None
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  1    wreg      void 
  6497 ;; Registers used:
  6498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6504 ;;      Params:         0       0       0       0       0
  6505 ;;      Locals:         0       0       0       0       0
  6506 ;;      Temps:          0       4       0       0       0
  6507 ;;      Totals:         0       4       0       0       0
  6508 ;;Total ram usage:        4 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:    6
  6511 ;; This function calls:
  6512 ;;		_DISP_Update
  6513 ;;		_LED_Update
  6514 ;;		_SW_Update
  6515 ;;		_Tmepreture_Update
  6516 ;;		_Update_Global_counter
  6517 ;;		_Update_OS_Mode
  6518 ;;		_WH_Update
  6519 ;; This function is called by:
  6520 ;;		Interrupt level 1
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           
  6525                           ;psect for function _TMR_Update
  6526  1EC6                     _TMR_Update:
  6527  1EC6                     i1l5544:
  6528                           
  6529                           ;TIMER.c: 56: Update_Global_counter();
  6530  1EC6  160A  118A  202F  160A  158A  	fcall	_Update_Global_counter
  6531  1ECB                     i1l5546:
  6532                           
  6533                           ;TIMER.c: 57: Update_OS_Mode();
  6534  1ECB  160A  158A  263F  160A  158A  	fcall	_Update_OS_Mode
  6535  1ED0                     i1l5548:
  6536                           
  6537                           ;TIMER.c: 58: DISP_Update();
  6538  1ED0  160A  118A  2408  160A  158A  	fcall	_DISP_Update
  6539  1ED5                     i1l5550:
  6540                           
  6541                           ;TIMER.c: 59: SW_Update();
  6542  1ED5  120A  158A  205B  160A  158A  	fcall	_SW_Update
  6543  1EDA                     i1l5552:
  6544                           
  6545                           ;TIMER.c: 60: Tmepreture_Update();
  6546  1EDA  160A  118A  2002  160A  158A  	fcall	_Tmepreture_Update
  6547  1EDF                     i1l5554:
  6548                           
  6549                           ;TIMER.c: 61: LED_Update();
  6550  1EDF  160A  158A  27BE  160A  158A  	fcall	_LED_Update
  6551  1EE4                     i1l5556:
  6552                           
  6553                           ;TIMER.c: 62: WH_Update();
  6554  1EE4  160A  118A  2072  160A  158A  	fcall	_WH_Update
  6555  1EE9                     i1l5558:
  6556                           
  6557                           ;TIMER.c: 63: ((TMR1) = (Timer_Update_Vlue));
  6558  1EE9  1683               	bsf	3,5	;RP0=1, select bank1
  6559  1EEA  1303               	bcf	3,6	;RP1=0, select bank1
  6560  1EEB  086F               	movf	(_Timer_Update_Vlue+1)^(0+128),w
  6561  1EEC  1283               	bcf	3,5	;RP0=0, select bank0
  6562  1EED  1303               	bcf	3,6	;RP1=0, select bank0
  6563  1EEE  008F               	movwf	15	;volatile
  6564  1EEF  1683               	bsf	3,5	;RP0=1, select bank1
  6565  1EF0  1303               	bcf	3,6	;RP1=0, select bank1
  6566  1EF1  086E               	movf	_Timer_Update_Vlue^(0+128),w
  6567  1EF2  1283               	bcf	3,5	;RP0=0, select bank0
  6568  1EF3  1303               	bcf	3,6	;RP1=0, select bank0
  6569  1EF4  008E               	movwf	14	;volatile
  6570  1EF5                     i1l5560:
  6571                           
  6572                           ;TIMER.c: 65: (TMR1IF = 0);
  6573  1EF5  100C               	bcf	12,0	;volatile
  6574  1EF6                     i1l329:
  6575  1EF6  083D               	movf	??_TMR_Update+3,w
  6576  1EF7  00FF               	movwf	btemp+1
  6577  1EF8  083C               	movf	??_TMR_Update+2,w
  6578  1EF9  008A               	movwf	10
  6579  1EFA  083B               	movf	??_TMR_Update+1,w
  6580  1EFB  0084               	movwf	4
  6581  1EFC  0E3A               	swapf	??_TMR_Update^0,w
  6582  1EFD  0083               	movwf	3
  6583  1EFE  0EFE               	swapf	btemp,f
  6584  1EFF  0E7E               	swapf	btemp,w
  6585  1F00  0009               	retfie
  6586  1F01                     __end_of_TMR_Update:
  6587                           
  6588                           	psect	intentry
  6589  0004                     __pintentry:	
  6590                           ;incstack = 0
  6591 ;; hardware stack exceeded
  6592                           ; Regs used in _TMR_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6593                           
  6594  0004                     interrupt_function:
  6595  007E                     saved_w	set	btemp
  6596  0004  00FE               	movwf	btemp
  6597  0005  0E03               	swapf	3,w
  6598  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6599  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6600  0008  00BA               	movwf	??_TMR_Update
  6601  0009  0804               	movf	4,w
  6602  000A  00BB               	movwf	??_TMR_Update+1
  6603  000B  080A               	movf	10,w
  6604  000C  00BC               	movwf	??_TMR_Update+2
  6605  000D  087F               	movf	btemp+1,w
  6606  000E  00BD               	movwf	??_TMR_Update+3
  6607  000F  160A  158A  2EC6   	ljmp	_TMR_Update
  6608                           
  6609                           	psect	text21
  6610  1072                     __ptext21:	
  6611 ;; *************** function _WH_Update *****************
  6612 ;; Defined at:
  6613 ;;		line 45 in file "WH.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;		None
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;		None
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  1    wreg      void 
  6620 ;; Registers used:
  6621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6627 ;;      Params:         0       0       0       0       0
  6628 ;;      Locals:         0       0       0       0       0
  6629 ;;      Temps:          0       0       0       0       0
  6630 ;;      Totals:         0       0       0       0       0
  6631 ;;Total ram usage:        0 bytes
  6632 ;; Hardware stack levels used:    1
  6633 ;; Hardware stack levels required when called:    5
  6634 ;; This function calls:
  6635 ;;		_Check_WH_mode
  6636 ;;		_WH_Save_Last_Temp
  6637 ;;		_WH_Set_temp
  6638 ;;		_WH_Turn_On_Off
  6639 ;; This function is called by:
  6640 ;;		_TMR_Update
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           
  6645                           ;psect for function _WH_Update
  6646  1072                     _WH_Update:
  6647  1072                     i1l5522:	
  6648                           ;incstack = 0
  6649 ;; hardware stack exceeded
  6650                           ; Regs used in _WH_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6651                           
  6652                           
  6653                           ;WH.c: 47: static uint32_t WH_Counter = 0 ;;WH.c: 48: WH_Counter += (1);
  6654  1072  3001               	movlw	1
  6655  1073  1683               	bsf	3,5	;RP0=1, select bank3
  6656  1074  1703               	bsf	3,6	;RP1=1, select bank3
  6657  1075  079D               	addwf	WH_Update@WH_Counter^(0+384),f
  6658  1076  3000               	movlw	0
  6659  1077  1803               	skipnc
  6660  1078  3001               	movlw	1
  6661  1079  079E               	addwf	(WH_Update@WH_Counter+1)^(0+384),f
  6662  107A  3000               	movlw	0
  6663  107B  1803               	skipnc
  6664  107C  3001               	movlw	1
  6665  107D  079F               	addwf	(WH_Update@WH_Counter+2)^(0+384),f
  6666  107E  3000               	movlw	0
  6667  107F  1803               	skipnc
  6668  1080  3001               	movlw	1
  6669  1081  07A0               	addwf	(WH_Update@WH_Counter+3)^(0+384),f
  6670  1082                     i1l5524:
  6671                           
  6672                           ;WH.c: 50: if(WH_Counter != (2))
  6673  1082  3002               	movlw	2
  6674  1083  061D               	xorwf	WH_Update@WH_Counter^(0+384),w
  6675  1084  041E               	iorwf	(WH_Update@WH_Counter+1)^(0+384),w
  6676  1085  041F               	iorwf	(WH_Update@WH_Counter+2)^(0+384),w
  6677  1086  0420               	iorwf	(WH_Update@WH_Counter+3)^(0+384),w
  6678  1087  1903               	btfsc	3,2
  6679  1088  288A               	goto	u887_21
  6680  1089  288B               	goto	u887_20
  6681  108A                     u887_21:
  6682  108A  288C               	goto	i1l5528
  6683  108B                     u887_20:
  6684  108B  28B5               	goto	i1l509
  6685  108C                     i1l5528:
  6686                           
  6687                           ;WH.c: 53: };WH.c: 54: WH_Counter = 0;
  6688  108C  3000               	movlw	0
  6689  108D  00A0               	movwf	(WH_Update@WH_Counter+3)^(0+384)
  6690  108E  3000               	movlw	0
  6691  108F  009F               	movwf	(WH_Update@WH_Counter+2)^(0+384)
  6692  1090  3000               	movlw	0
  6693  1091  009E               	movwf	(WH_Update@WH_Counter+1)^(0+384)
  6694  1092  3000               	movlw	0
  6695  1093  009D               	movwf	WH_Update@WH_Counter^(0+384)
  6696  1094                     i1l5530:
  6697                           
  6698                           ;WH.c: 55: Check_WH_mode();
  6699  1094  160A  118A  2565  160A  118A  	fcall	_Check_WH_mode
  6700  1099                     i1l5532:
  6701                           
  6702                           ;WH.c: 56: if(MODE == Set_Mode)
  6703  1099  1283               	bcf	3,5	;RP0=0, select bank0
  6704  109A  1303               	bcf	3,6	;RP1=0, select bank0
  6705  109B  0858               	movf	_MODE,w
  6706  109C  1D03               	btfss	3,2
  6707  109D  289F               	goto	u888_21
  6708  109E  28A0               	goto	u888_20
  6709  109F                     u888_21:
  6710  109F  28AB               	goto	i1l5538
  6711  10A0                     u888_20:
  6712  10A0                     i1l5534:
  6713                           
  6714                           ;WH.c: 57: {;WH.c: 58: WH_Save_Last_Temp();
  6715  10A0  160A  158A  2523  160A  118A  	fcall	_WH_Save_Last_Temp
  6716  10A5                     i1l5536:
  6717                           
  6718                           ;WH.c: 59: WH_Set_temp();
  6719  10A5  160A  158A  273D  160A  118A  	fcall	_WH_Set_temp
  6720                           
  6721                           ;WH.c: 60: }
  6722  10AA  28B5               	goto	i1l509
  6723  10AB                     i1l5538:
  6724                           
  6725                           ;WH.c: 61: else if(MODE == Normal_Mode)
  6726  10AB  0358               	decf	_MODE,w
  6727  10AC  1D03               	btfss	3,2
  6728  10AD  28AF               	goto	u889_21
  6729  10AE  28B0               	goto	u889_20
  6730  10AF                     u889_21:
  6731  10AF  28B5               	goto	i1l509
  6732  10B0                     u889_20:
  6733  10B0                     i1l5540:
  6734                           
  6735                           ;WH.c: 62: {;WH.c: 63: WH_Turn_On_Off();
  6736  10B0  160A  118A  2331  160A  118A  	fcall	_WH_Turn_On_Off
  6737  10B5                     i1l509:	
  6738                           ;WH.c: 64: }
  6739                           
  6740  10B5  0008               	return
  6741  10B6                     __end_of_WH_Update:
  6742                           
  6743                           	psect	text22
  6744  1331                     __ptext22:	
  6745 ;; *************** function _WH_Turn_On_Off *****************
  6746 ;; Defined at:
  6747 ;;		line 107 in file "WH.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;		None
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;		None
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  1    wreg      void 
  6754 ;; Registers used:
  6755 ;;		wreg, status,2, status,0, pclath, cstack
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6761 ;;      Params:         0       0       0       0       0
  6762 ;;      Locals:         0       0       0       0       0
  6763 ;;      Temps:          6       0       0       0       0
  6764 ;;      Totals:         6       0       0       0       0
  6765 ;;Total ram usage:        6 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; Hardware stack levels required when called:    1
  6768 ;; This function calls:
  6769 ;;		_COOL_turn_off
  6770 ;;		_COOL_turn_on
  6771 ;;		_WH_turn_off
  6772 ;;		_WH_turn_on
  6773 ;; This function is called by:
  6774 ;;		_WH_Update
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           
  6779                           ;psect for function _WH_Turn_On_Off
  6780  1331                     _WH_Turn_On_Off:
  6781  1331                     i1l4432:	
  6782                           ;incstack = 0
  6783 ;; hardware stack exceeded
  6784                           ; Regs used in _WH_Turn_On_Off: [wreg+status,2+status,0+pclath+cstack]
  6785                           
  6786                           
  6787                           ;WH.c: 109: if(average_flag == 1)
  6788  1331  1283               	bcf	3,5	;RP0=0, select bank0
  6789  1332  1303               	bcf	3,6	;RP1=0, select bank0
  6790  1333  034B               	decf	_average_flag,w
  6791  1334  1D03               	btfss	3,2
  6792  1335  2B37               	goto	u667_21
  6793  1336  2B38               	goto	u667_20
  6794  1337                     u667_21:
  6795  1337  2B9A               	goto	i1l535
  6796  1338                     u667_20:
  6797  1338                     i1l4434:
  6798                           
  6799                           ;WH.c: 110: {;WH.c: 111: if(average_temp <= (Current_Temp - 5))
  6800  1338  0856               	movf	_Current_Temp,w
  6801  1339  3EFB               	addlw	251
  6802  133A  00F0               	movwf	??_WH_Turn_On_Off
  6803  133B  30FF               	movlw	255
  6804  133C  1803               	skipnc
  6805  133D  3000               	movlw	0
  6806  133E  00F1               	movwf	??_WH_Turn_On_Off+1
  6807  133F  0870               	movf	??_WH_Turn_On_Off,w
  6808  1340  00F2               	movwf	??_WH_Turn_On_Off+2
  6809  1341  0871               	movf	??_WH_Turn_On_Off+1,w
  6810  1342  00F3               	movwf	??_WH_Turn_On_Off+3
  6811  1343  3000               	movlw	0
  6812  1344  1BF3               	btfsc	??_WH_Turn_On_Off+3,7
  6813  1345  30FF               	movlw	255
  6814  1346  00F4               	movwf	??_WH_Turn_On_Off+4
  6815  1347  00F5               	movwf	??_WH_Turn_On_Off+5
  6816  1348  1683               	bsf	3,5	;RP0=1, select bank3
  6817  1349  1703               	bsf	3,6	;RP1=1, select bank3
  6818  134A  082C               	movf	(_average_temp+3)^(0+384),w
  6819  134B  0275               	subwf	??_WH_Turn_On_Off+5,w
  6820  134C  1D03               	skipz
  6821  134D  2B58               	goto	u668_25
  6822  134E  082B               	movf	(_average_temp+2)^(0+384),w
  6823  134F  0274               	subwf	??_WH_Turn_On_Off+4,w
  6824  1350  1D03               	skipz
  6825  1351  2B58               	goto	u668_25
  6826  1352  082A               	movf	(_average_temp+1)^(0+384),w
  6827  1353  0273               	subwf	??_WH_Turn_On_Off+3,w
  6828  1354  1D03               	skipz
  6829  1355  2B58               	goto	u668_25
  6830  1356  0829               	movf	_average_temp^(0+384),w
  6831  1357  0272               	subwf	??_WH_Turn_On_Off+2,w
  6832  1358                     u668_25:
  6833  1358  1C03               	skipc
  6834  1359  2B5B               	goto	u668_21
  6835  135A  2B5C               	goto	u668_20
  6836  135B                     u668_21:
  6837  135B  2B67               	goto	i1l4438
  6838  135C                     u668_20:
  6839  135C                     i1l4436:
  6840                           
  6841                           ;WH.c: 112: {;WH.c: 113: WH_turn_on();
  6842  135C  160A  158A  244C  160A  118A  	fcall	_WH_turn_on
  6843                           
  6844                           ;WH.c: 114: COOL_turn_off();
  6845  1361  160A  158A  2403  160A  118A  	fcall	_COOL_turn_off
  6846                           
  6847                           ;WH.c: 115: }
  6848  1366  2B97               	goto	i1l4442
  6849  1367                     i1l4438:
  6850                           
  6851                           ;WH.c: 116: else if(average_temp >= (Current_Temp + 5))
  6852  1367  1283               	bcf	3,5	;RP0=0, select bank0
  6853  1368  1303               	bcf	3,6	;RP1=0, select bank0
  6854  1369  0856               	movf	_Current_Temp,w
  6855  136A  3E05               	addlw	5
  6856  136B  00F0               	movwf	??_WH_Turn_On_Off
  6857  136C  3000               	movlw	0
  6858  136D  1803               	skipnc
  6859  136E  3001               	movlw	1
  6860  136F  00F1               	movwf	??_WH_Turn_On_Off+1
  6861  1370  0870               	movf	??_WH_Turn_On_Off,w
  6862  1371  00F2               	movwf	??_WH_Turn_On_Off+2
  6863  1372  0871               	movf	??_WH_Turn_On_Off+1,w
  6864  1373  00F3               	movwf	??_WH_Turn_On_Off+3
  6865  1374  3000               	movlw	0
  6866  1375  1BF3               	btfsc	??_WH_Turn_On_Off+3,7
  6867  1376  30FF               	movlw	255
  6868  1377  00F4               	movwf	??_WH_Turn_On_Off+4
  6869  1378  00F5               	movwf	??_WH_Turn_On_Off+5
  6870  1379  0875               	movf	??_WH_Turn_On_Off+5,w
  6871  137A  1683               	bsf	3,5	;RP0=1, select bank3
  6872  137B  1703               	bsf	3,6	;RP1=1, select bank3
  6873  137C  022C               	subwf	(_average_temp+3)^(0+384),w
  6874  137D  1D03               	skipz
  6875  137E  2B89               	goto	u669_25
  6876  137F  0874               	movf	??_WH_Turn_On_Off+4,w
  6877  1380  022B               	subwf	(_average_temp+2)^(0+384),w
  6878  1381  1D03               	skipz
  6879  1382  2B89               	goto	u669_25
  6880  1383  0873               	movf	??_WH_Turn_On_Off+3,w
  6881  1384  022A               	subwf	(_average_temp+1)^(0+384),w
  6882  1385  1D03               	skipz
  6883  1386  2B89               	goto	u669_25
  6884  1387  0872               	movf	??_WH_Turn_On_Off+2,w
  6885  1388  0229               	subwf	_average_temp^(0+384),w
  6886  1389                     u669_25:
  6887  1389  1C03               	skipc
  6888  138A  2B8C               	goto	u669_21
  6889  138B  2B8D               	goto	u669_20
  6890  138C                     u669_21:
  6891  138C  2B97               	goto	i1l4442
  6892  138D                     u669_20:
  6893  138D                     i1l4440:
  6894                           
  6895                           ;WH.c: 117: {;WH.c: 118: WH_turn_off();
  6896  138D  160A  158A  240A  160A  118A  	fcall	_WH_turn_off
  6897                           
  6898                           ;WH.c: 119: COOL_turn_on();
  6899  1392  160A  158A  2443  160A  118A  	fcall	_COOL_turn_on
  6900  1397                     i1l4442:
  6901                           
  6902                           ;WH.c: 120: };WH.c: 122: average_flag = 0 ;
  6903  1397  1283               	bcf	3,5	;RP0=0, select bank0
  6904  1398  1303               	bcf	3,6	;RP1=0, select bank0
  6905  1399  01CB               	clrf	_average_flag
  6906  139A                     i1l535:
  6907  139A  0008               	return
  6908  139B                     __end_of_WH_Turn_On_Off:
  6909                           
  6910                           	psect	text23
  6911  1C4C                     __ptext23:	
  6912 ;; *************** function _WH_turn_on *****************
  6913 ;; Defined at:
  6914 ;;		line 201 in file "WH.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;		None
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;		None
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      void 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6928 ;;      Params:         0       0       0       0       0
  6929 ;;      Locals:         0       0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0
  6931 ;;      Totals:         0       0       0       0       0
  6932 ;;Total ram usage:        0 bytes
  6933 ;; Hardware stack levels used:    1
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		_WH_Turn_On_Off
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941                           
  6942                           ;psect for function _WH_turn_on
  6943  1C4C                     _WH_turn_on:
  6944  1C4C                     i1l3752:	
  6945                           ;incstack = 0
  6946 ;; hardware stack exceeded
  6947                           ; Regs used in _WH_turn_on: [wreg+status,2]
  6948                           
  6949                           
  6950                           ;WH.c: 203: (((PORTC)) = ((((PORTC)) & (~1<<(5)))) | ((1) << (5)));
  6951  1C4C  1283               	bcf	3,5	;RP0=0, select bank0
  6952  1C4D  1303               	bcf	3,6	;RP1=0, select bank0
  6953  1C4E  0807               	movf	7,w	;volatile
  6954  1C4F  39C0               	andlw	192
  6955  1C50  3820               	iorlw	32
  6956  1C51  0087               	movwf	7	;volatile
  6957  1C52                     i1l3754:
  6958                           
  6959                           ;WH.c: 204: WH_FLAG = 1 ;
  6960  1C52  01C9               	clrf	_WH_FLAG
  6961  1C53  0AC9               	incf	_WH_FLAG,f
  6962  1C54                     i1l565:
  6963  1C54  0008               	return
  6964  1C55                     __end_of_WH_turn_on:
  6965                           
  6966                           	psect	text24
  6967  1C43                     __ptext24:	
  6968 ;; *************** function _COOL_turn_on *****************
  6969 ;; Defined at:
  6970 ;;		line 213 in file "WH.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  1    wreg      void 
  6977 ;; Registers used:
  6978 ;;		wreg, status,2
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6984 ;;      Params:         0       0       0       0       0
  6985 ;;      Locals:         0       0       0       0       0
  6986 ;;      Temps:          0       0       0       0       0
  6987 ;;      Totals:         0       0       0       0       0
  6988 ;;Total ram usage:        0 bytes
  6989 ;; Hardware stack levels used:    1
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_WH_Turn_On_Off
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           
  6998                           ;psect for function _COOL_turn_on
  6999  1C43                     _COOL_turn_on:
  7000  1C43                     i1l3756:	
  7001                           ;incstack = 0
  7002 ;; hardware stack exceeded
  7003                           ; Regs used in _COOL_turn_on: [wreg+status,2]
  7004                           
  7005                           
  7006                           ;WH.c: 215: (((PORTC)) = ((((PORTC)) & (~1<<(2)))) | ((1) << (2)));
  7007  1C43  1283               	bcf	3,5	;RP0=0, select bank0
  7008  1C44  1303               	bcf	3,6	;RP1=0, select bank0
  7009  1C45  0807               	movf	7,w	;volatile
  7010  1C46  39F8               	andlw	248
  7011  1C47  3804               	iorlw	4
  7012  1C48  0087               	movwf	7	;volatile
  7013  1C49                     i1l3758:
  7014                           
  7015                           ;WH.c: 216: CL_Flag = 1 ;
  7016  1C49  01C8               	clrf	_CL_Flag
  7017  1C4A  0AC8               	incf	_CL_Flag,f
  7018  1C4B                     i1l571:
  7019  1C4B  0008               	return
  7020  1C4C                     __end_of_COOL_turn_on:
  7021                           
  7022                           	psect	text25
  7023  1F3D                     __ptext25:	
  7024 ;; *************** function _WH_Set_temp *****************
  7025 ;; Defined at:
  7026 ;;		line 71 in file "WH.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;		None
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;		None
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  1    wreg      void 
  7033 ;; Registers used:
  7034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7040 ;;      Params:         0       0       0       0       0
  7041 ;;      Locals:         0       0       0       0       0
  7042 ;;      Temps:          0       0       0       0       0
  7043 ;;      Totals:         0       0       0       0       0
  7044 ;;Total ram usage:        0 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; Hardware stack levels required when called:    2
  7047 ;; This function calls:
  7048 ;;		_SW_GetState
  7049 ;; This function is called by:
  7050 ;;		_WH_Update
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           
  7055                           ;psect for function _WH_Set_temp
  7056  1F3D                     _WH_Set_temp:
  7057  1F3D                     i1l5406:	
  7058                           ;incstack = 0
  7059 ;; hardware stack exceeded
  7060                           ; Regs used in _WH_Set_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7061                           
  7062                           
  7063                           ;WH.c: 74: if(SW_GetState(SW_PLUS) == SW_PRE_PRESSED && Init_flag == 2)
  7064  1F3D  3002               	movlw	2
  7065  1F3E  160A  158A  2491  160A  158A  	fcall	_SW_GetState
  7066  1F43  3A01               	xorlw	1
  7067  1F44  1D03               	skipz
  7068  1F45  2F47               	goto	u864_21
  7069  1F46  2F48               	goto	u864_20
  7070  1F47                     u864_21:
  7071  1F47  2F5E               	goto	i1l5414
  7072  1F48                     u864_20:
  7073  1F48                     i1l5408:
  7074  1F48  3002               	movlw	2
  7075  1F49  1283               	bcf	3,5	;RP0=0, select bank0
  7076  1F4A  1303               	bcf	3,6	;RP1=0, select bank0
  7077  1F4B  0642               	xorwf	_Init_flag,w
  7078  1F4C  0443               	iorwf	_Init_flag+1,w
  7079  1F4D  0444               	iorwf	_Init_flag+2,w
  7080  1F4E  0445               	iorwf	_Init_flag+3,w
  7081  1F4F  1D03               	btfss	3,2
  7082  1F50  2F52               	goto	u865_21
  7083  1F51  2F53               	goto	u865_20
  7084  1F52                     u865_21:
  7085  1F52  2F5E               	goto	i1l5414
  7086  1F53                     u865_20:
  7087  1F53                     i1l5410:
  7088                           
  7089                           ;WH.c: 75: {;WH.c: 76: if(set_temp < (75))
  7090  1F53  304B               	movlw	75
  7091  1F54  0257               	subwf	_set_temp,w
  7092  1F55  1803               	skipnc
  7093  1F56  2F58               	goto	u866_21
  7094  1F57  2F59               	goto	u866_20
  7095  1F58                     u866_21:
  7096  1F58  2F7C               	goto	i1l522
  7097  1F59                     u866_20:
  7098  1F59                     i1l5412:
  7099                           
  7100                           ;WH.c: 77: {;WH.c: 78: set_temp += (5);
  7101  1F59  3005               	movlw	5
  7102  1F5A  00FF               	movwf	btemp+1
  7103  1F5B  087F               	movf	btemp+1,w
  7104  1F5C  07D7               	addwf	_set_temp,f
  7105  1F5D  2F7C               	goto	i1l522
  7106  1F5E                     i1l5414:
  7107                           
  7108                           ;WH.c: 81: else if(SW_GetState(SW_MINUS) == SW_PRE_PRESSED && Init_flag == 2)
  7109  1F5E  3001               	movlw	1
  7110  1F5F  160A  158A  2491  160A  158A  	fcall	_SW_GetState
  7111  1F64  3A01               	xorlw	1
  7112  1F65  1D03               	skipz
  7113  1F66  2F68               	goto	u867_21
  7114  1F67  2F69               	goto	u867_20
  7115  1F68                     u867_21:
  7116  1F68  2F7C               	goto	i1l522
  7117  1F69                     u867_20:
  7118  1F69                     i1l5416:
  7119  1F69  3002               	movlw	2
  7120  1F6A  1283               	bcf	3,5	;RP0=0, select bank0
  7121  1F6B  1303               	bcf	3,6	;RP1=0, select bank0
  7122  1F6C  0642               	xorwf	_Init_flag,w
  7123  1F6D  0443               	iorwf	_Init_flag+1,w
  7124  1F6E  0444               	iorwf	_Init_flag+2,w
  7125  1F6F  0445               	iorwf	_Init_flag+3,w
  7126  1F70  1D03               	btfss	3,2
  7127  1F71  2F73               	goto	u868_21
  7128  1F72  2F74               	goto	u868_20
  7129  1F73                     u868_21:
  7130  1F73  2F7C               	goto	i1l522
  7131  1F74                     u868_20:
  7132  1F74                     i1l5418:
  7133                           
  7134                           ;WH.c: 82: {;WH.c: 83: if(set_temp > (35))
  7135  1F74  3024               	movlw	36
  7136  1F75  0257               	subwf	_set_temp,w
  7137  1F76  1C03               	skipc
  7138  1F77  2F79               	goto	u869_21
  7139  1F78  2F7A               	goto	u869_20
  7140  1F79                     u869_21:
  7141  1F79  2F7C               	goto	i1l522
  7142  1F7A                     u869_20:
  7143  1F7A                     i1l5420:
  7144                           
  7145                           ;WH.c: 84: {;WH.c: 85: set_temp -= (5);
  7146  1F7A  3005               	movlw	5
  7147  1F7B  02D7               	subwf	_set_temp,f
  7148  1F7C                     i1l522:
  7149  1F7C  0008               	return
  7150  1F7D                     __end_of_WH_Set_temp:
  7151                           
  7152                           	psect	text26
  7153  1D23                     __ptext26:	
  7154 ;; *************** function _WH_Save_Last_Temp *****************
  7155 ;; Defined at:
  7156 ;;		line 95 in file "WH.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;		None
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;		None
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1    wreg      void 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7170 ;;      Params:         0       0       0       0       0
  7171 ;;      Locals:         0       0       0       0       0
  7172 ;;      Temps:          0       0       0       0       0
  7173 ;;      Totals:         0       0       0       0       0
  7174 ;;Total ram usage:        0 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; Hardware stack levels required when called:    3
  7177 ;; This function calls:
  7178 ;;		_EEPROM_Write
  7179 ;; This function is called by:
  7180 ;;		_WH_Update
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           
  7185                           ;psect for function _WH_Save_Last_Temp
  7186  1D23                     _WH_Save_Last_Temp:
  7187  1D23                     i1l4412:	
  7188                           ;incstack = 0
  7189 ;; hardware stack exceeded
  7190                           ; Regs used in _WH_Save_Last_Temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7191                           
  7192                           
  7193                           ;WH.c: 97: EEPROM_Write((0x0030) , set_temp);
  7194  1D23  3030               	movlw	48
  7195  1D24  00F1               	movwf	EEPROM_Write@add
  7196  1D25  3000               	movlw	0
  7197  1D26  00F2               	movwf	EEPROM_Write@add+1
  7198  1D27  1283               	bcf	3,5	;RP0=0, select bank0
  7199  1D28  1303               	bcf	3,6	;RP1=0, select bank0
  7200  1D29  0857               	movf	_set_temp,w
  7201  1D2A  00FF               	movwf	btemp+1
  7202  1D2B  087F               	movf	btemp+1,w
  7203  1D2C  00F3               	movwf	EEPROM_Write@data
  7204  1D2D  160A  158A  2701  160A  158A  	fcall	_EEPROM_Write
  7205  1D32                     i1l4414:
  7206                           
  7207                           ;WH.c: 98: Current_Temp = set_temp;
  7208  1D32  1283               	bcf	3,5	;RP0=0, select bank0
  7209  1D33  1303               	bcf	3,6	;RP1=0, select bank0
  7210  1D34  0857               	movf	_set_temp,w
  7211  1D35  00FF               	movwf	btemp+1
  7212  1D36  087F               	movf	btemp+1,w
  7213  1D37  00D6               	movwf	_Current_Temp
  7214  1D38                     i1l525:
  7215  1D38  0008               	return
  7216  1D39                     __end_of_WH_Save_Last_Temp:
  7217                           
  7218                           	psect	text27
  7219  1F01                     __ptext27:	
  7220 ;; *************** function _EEPROM_Write *****************
  7221 ;; Defined at:
  7222 ;;		line 4 in file "EEPROM.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  add             2    1[COMMON] unsigned int 
  7225 ;;  data            1    3[COMMON] unsigned char 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  ADDRL           1    5[COMMON] unsigned char 
  7228 ;;  ADDRH           1    4[COMMON] unsigned char 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  1    wreg      void 
  7231 ;; Registers used:
  7232 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7238 ;;      Params:         3       0       0       0       0
  7239 ;;      Locals:         2       0       0       0       0
  7240 ;;      Temps:          0       0       0       0       0
  7241 ;;      Totals:         5       0       0       0       0
  7242 ;;Total ram usage:        5 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; Hardware stack levels required when called:    2
  7245 ;; This function calls:
  7246 ;;		_I2C_Start
  7247 ;;		_I2C_Stop
  7248 ;;		_I2C_Write
  7249 ;; This function is called by:
  7250 ;;		_WH_Save_Last_Temp
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           
  7255                           ;psect for function _EEPROM_Write
  7256  1F01                     _EEPROM_Write:
  7257  1F01                     i1l3728:	
  7258                           ;incstack = 0
  7259 ;; hardware stack exceeded
  7260                           ; Regs used in _EEPROM_Write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7261                           
  7262                           
  7263                           ;EEPROM.c: 6: uint8_t ADDRH= (add & 0x0100) >> 8;
  7264  1F01  0872               	movf	EEPROM_Write@add+1,w
  7265  1F02  3901               	andlw	1
  7266  1F03  00FF               	movwf	btemp+1
  7267  1F04  087F               	movf	btemp+1,w
  7268  1F05  00F4               	movwf	EEPROM_Write@ADDRH
  7269  1F06                     i1l3730:
  7270                           
  7271                           ;EEPROM.c: 7: uint8_t ADDRL =(add & 0x00FF);
  7272  1F06  0871               	movf	EEPROM_Write@add,w
  7273  1F07  00FF               	movwf	btemp+1
  7274  1F08  087F               	movf	btemp+1,w
  7275  1F09  00F5               	movwf	EEPROM_Write@ADDRL
  7276  1F0A                     i1l3732:
  7277                           
  7278                           ;EEPROM.c: 8: I2C_Start();
  7279  1F0A  160A  158A  2431  160A  158A  	fcall	_I2C_Start
  7280  1F0F                     i1l3734:
  7281                           
  7282                           ;EEPROM.c: 9: if(ADDRH != 0)
  7283  1F0F  0874               	movf	EEPROM_Write@ADDRH,w
  7284  1F10  1903               	btfsc	3,2
  7285  1F11  2F13               	goto	u520_21
  7286  1F12  2F14               	goto	u520_20
  7287  1F13                     u520_21:
  7288  1F13  2F20               	goto	i1l3740
  7289  1F14                     u520_20:
  7290  1F14                     i1l3738:
  7291  1F14  30A2               	movlw	162
  7292  1F15  160A  158A  24A1  160A  158A  	fcall	_I2C_Write
  7293  1F1A  3A00               	xorlw	0
  7294  1F1B  1D03               	skipz
  7295  1F1C  2F1E               	goto	u521_21
  7296  1F1D  2F1F               	goto	u521_20
  7297  1F1E                     u521_21:
  7298  1F1E  2F14               	goto	i1l3738
  7299  1F1F                     u521_20:
  7300  1F1F  2F2B               	goto	i1l3742
  7301  1F20                     i1l3740:
  7302  1F20  30A0               	movlw	160
  7303  1F21  160A  158A  24A1  160A  158A  	fcall	_I2C_Write
  7304  1F26  3A00               	xorlw	0
  7305  1F27  1D03               	skipz
  7306  1F28  2F2A               	goto	u522_21
  7307  1F29  2F2B               	goto	u522_20
  7308  1F2A                     u522_21:
  7309  1F2A  2F20               	goto	i1l3740
  7310  1F2B                     u522_20:
  7311  1F2B                     i1l3742:
  7312                           
  7313                           ;EEPROM.c: 16: };EEPROM.c: 18: I2C_Write(ADDRL);
  7314  1F2B  0875               	movf	EEPROM_Write@ADDRL,w
  7315  1F2C  160A  158A  24A1  160A  158A  	fcall	_I2C_Write
  7316                           
  7317                           ;EEPROM.c: 19: I2C_Write(data);
  7318  1F31  0873               	movf	EEPROM_Write@data,w
  7319  1F32  160A  158A  24A1  160A  158A  	fcall	_I2C_Write
  7320                           
  7321                           ;EEPROM.c: 20: I2C_Stop();
  7322  1F37  160A  158A  243A  160A  158A  	fcall	_I2C_Stop
  7323  1F3C                     i1l348:
  7324  1F3C  0008               	return
  7325  1F3D                     __end_of_EEPROM_Write:
  7326                           
  7327                           	psect	text28
  7328  1565                     __ptext28:	
  7329 ;; *************** function _Check_WH_mode *****************
  7330 ;; Defined at:
  7331 ;;		line 147 in file "WH.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;		None
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;		None
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  1    wreg      void 
  7338 ;; Registers used:
  7339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7345 ;;      Params:         0       0       0       0       0
  7346 ;;      Locals:         0       0       0       0       0
  7347 ;;      Temps:          0       0       0       0       0
  7348 ;;      Totals:         0       0       0       0       0
  7349 ;;Total ram usage:        0 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; Hardware stack levels required when called:    4
  7352 ;; This function calls:
  7353 ;;		_COOL_turn_off
  7354 ;;		_SW_GetState
  7355 ;;		_WH_Disable
  7356 ;;		_WH_turn_off
  7357 ;;		_get_temp_after_reset
  7358 ;; This function is called by:
  7359 ;;		_WH_Update
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           
  7364                           ;psect for function _Check_WH_mode
  7365  1565                     _Check_WH_mode:
  7366  1565                     i1l5376:	
  7367                           ;incstack = 0
  7368 ;; hardware stack exceeded
  7369                           ; Regs used in _Check_WH_mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7370                           
  7371                           
  7372                           ;WH.c: 149: if(((SW_GetState(SW_PLUS) == SW_PRE_PRESSED) ||;WH.c: 150: (SW_GetState(SW_M
      +                          INUS) == SW_PRE_PRESSED)) && (Init_flag !=2) && (Sleep_flag != 0))
  7373  1565  3002               	movlw	2
  7374  1566  160A  158A  2491  160A  118A  	fcall	_SW_GetState
  7375  156B  3A01               	xorlw	1
  7376  156C  1903               	skipnz
  7377  156D  2D6F               	goto	u857_21
  7378  156E  2D70               	goto	u857_20
  7379  156F                     u857_21:
  7380  156F  2D7B               	goto	i1l5380
  7381  1570                     u857_20:
  7382  1570                     i1l5378:
  7383  1570  3001               	movlw	1
  7384  1571  160A  158A  2491  160A  118A  	fcall	_SW_GetState
  7385  1576  3A01               	xorlw	1
  7386  1577  1D03               	skipz
  7387  1578  2D7A               	goto	u858_21
  7388  1579  2D7B               	goto	u858_20
  7389  157A                     u858_21:
  7390  157A  2DAA               	goto	i1l5390
  7391  157B                     u858_20:
  7392  157B                     i1l5380:
  7393  157B  3002               	movlw	2
  7394  157C  1283               	bcf	3,5	;RP0=0, select bank0
  7395  157D  1303               	bcf	3,6	;RP1=0, select bank0
  7396  157E  0642               	xorwf	_Init_flag,w
  7397  157F  0443               	iorwf	_Init_flag+1,w
  7398  1580  0444               	iorwf	_Init_flag+2,w
  7399  1581  0445               	iorwf	_Init_flag+3,w
  7400  1582  1903               	btfsc	3,2
  7401  1583  2D85               	goto	u859_21
  7402  1584  2D86               	goto	u859_20
  7403  1585                     u859_21:
  7404  1585  2DAA               	goto	i1l5390
  7405  1586                     u859_20:
  7406  1586                     i1l5382:
  7407  1586  0841               	movf	_Sleep_flag+3,w
  7408  1587  0440               	iorwf	_Sleep_flag+2,w
  7409  1588  043F               	iorwf	_Sleep_flag+1,w
  7410  1589  043E               	iorwf	_Sleep_flag,w
  7411  158A  1903               	skipnz
  7412  158B  2D8D               	goto	u860_21
  7413  158C  2D8E               	goto	u860_20
  7414  158D                     u860_21:
  7415  158D  2DAA               	goto	i1l5390
  7416  158E                     u860_20:
  7417  158E                     i1l5384:
  7418                           
  7419                           ;WH.c: 151: {;WH.c: 152: WH_turn_off();
  7420  158E  160A  158A  240A  160A  118A  	fcall	_WH_turn_off
  7421                           
  7422                           ;WH.c: 153: COOL_turn_off();
  7423  1593  160A  158A  2403  160A  118A  	fcall	_COOL_turn_off
  7424  1598                     i1l5386:
  7425                           
  7426                           ;WH.c: 154: MODE = Set_Mode;
  7427  1598  1283               	bcf	3,5	;RP0=0, select bank0
  7428  1599  1303               	bcf	3,6	;RP1=0, select bank0
  7429  159A  01D8               	clrf	_MODE
  7430  159B                     i1l5388:
  7431                           
  7432                           ;WH.c: 155: Init_flag++ ;
  7433  159B  3001               	movlw	1
  7434  159C  07C2               	addwf	_Init_flag,f
  7435  159D  3000               	movlw	0
  7436  159E  1803               	skipnc
  7437  159F  3001               	movlw	1
  7438  15A0  07C3               	addwf	_Init_flag+1,f
  7439  15A1  3000               	movlw	0
  7440  15A2  1803               	skipnc
  7441  15A3  3001               	movlw	1
  7442  15A4  07C4               	addwf	_Init_flag+2,f
  7443  15A5  3000               	movlw	0
  7444  15A6  1803               	skipnc
  7445  15A7  3001               	movlw	1
  7446  15A8  07C5               	addwf	_Init_flag+3,f
  7447                           
  7448                           ;WH.c: 156: }
  7449  15A9  2DEB               	goto	i1l555
  7450  15AA                     i1l5390:
  7451                           
  7452                           ;WH.c: 157: else if(SW_GetState(SW_SET) == SW_PRE_PRESSED)
  7453  15AA  3000               	movlw	0
  7454  15AB  160A  158A  2491  160A  118A  	fcall	_SW_GetState
  7455  15B0  3A01               	xorlw	1
  7456  15B1  1D03               	skipz
  7457  15B2  2DB4               	goto	u861_21
  7458  15B3  2DB5               	goto	u861_20
  7459  15B4                     u861_21:
  7460  15B4  2DEB               	goto	i1l555
  7461  15B5                     u861_20:
  7462  15B5                     i1l5392:
  7463                           
  7464                           ;WH.c: 158: {;WH.c: 159: if(Sleep_flag == 0)
  7465  15B5  1283               	bcf	3,5	;RP0=0, select bank0
  7466  15B6  1303               	bcf	3,6	;RP1=0, select bank0
  7467  15B7  0841               	movf	_Sleep_flag+3,w
  7468  15B8  0440               	iorwf	_Sleep_flag+2,w
  7469  15B9  043F               	iorwf	_Sleep_flag+1,w
  7470  15BA  043E               	iorwf	_Sleep_flag,w
  7471  15BB  1D03               	skipz
  7472  15BC  2DBE               	goto	u862_21
  7473  15BD  2DBF               	goto	u862_20
  7474  15BE                     u862_21:
  7475  15BE  2DCA               	goto	i1l5398
  7476  15BF                     u862_20:
  7477  15BF                     i1l5394:
  7478                           
  7479                           ;WH.c: 160: {;WH.c: 161: MODE = Normal_Mode;
  7480  15BF  01D8               	clrf	_MODE
  7481  15C0  0AD8               	incf	_MODE,f
  7482  15C1                     i1l5396:
  7483                           
  7484                           ;WH.c: 162: Sleep_flag = 1 ;
  7485  15C1  3000               	movlw	0
  7486  15C2  00C1               	movwf	_Sleep_flag+3
  7487  15C3  3000               	movlw	0
  7488  15C4  00C0               	movwf	_Sleep_flag+2
  7489  15C5  3000               	movlw	0
  7490  15C6  00BF               	movwf	_Sleep_flag+1
  7491  15C7  3001               	movlw	1
  7492  15C8  00BE               	movwf	_Sleep_flag
  7493                           
  7494                           ;WH.c: 163: }
  7495  15C9  2DEB               	goto	i1l555
  7496  15CA                     i1l5398:
  7497                           
  7498                           ;WH.c: 164: else if(Sleep_flag == 1)
  7499  15CA  033E               	decf	_Sleep_flag,w
  7500  15CB  043F               	iorwf	_Sleep_flag+1,w
  7501  15CC  0440               	iorwf	_Sleep_flag+2,w
  7502  15CD  0441               	iorwf	_Sleep_flag+3,w
  7503  15CE  1D03               	btfss	3,2
  7504  15CF  2DD1               	goto	u863_21
  7505  15D0  2DD2               	goto	u863_20
  7506  15D1                     u863_21:
  7507  15D1  2DEB               	goto	i1l554
  7508  15D2                     u863_20:
  7509  15D2                     i1l5400:
  7510                           
  7511                           ;WH.c: 165: {;WH.c: 166: get_temp_after_reset();
  7512  15D2  160A  158A  24D3  160A  118A  	fcall	_get_temp_after_reset
  7513                           
  7514                           ;WH.c: 167: WH_Disable();
  7515  15D7  160A  158A  25D0  160A  118A  	fcall	_WH_Disable
  7516  15DC                     i1l5402:
  7517                           
  7518                           ;WH.c: 168: MODE = NON;
  7519  15DC  3002               	movlw	2
  7520  15DD  00FF               	movwf	btemp+1
  7521  15DE  087F               	movf	btemp+1,w
  7522  15DF  1283               	bcf	3,5	;RP0=0, select bank0
  7523  15E0  1303               	bcf	3,6	;RP1=0, select bank0
  7524  15E1  00D8               	movwf	_MODE
  7525  15E2                     i1l5404:
  7526                           
  7527                           ;WH.c: 169: Sleep_flag = 0 ;
  7528  15E2  3000               	movlw	0
  7529  15E3  00C1               	movwf	_Sleep_flag+3
  7530  15E4  3000               	movlw	0
  7531  15E5  00C0               	movwf	_Sleep_flag+2
  7532  15E6  3000               	movlw	0
  7533  15E7  00BF               	movwf	_Sleep_flag+1
  7534  15E8  3000               	movlw	0
  7535  15E9  00BE               	movwf	_Sleep_flag
  7536  15EA  2DEB               	goto	i1l555
  7537  15EB                     i1l554:	
  7538                           ;WH.c: 172: else;WH.c: 173: {
  7539                           
  7540  15EB                     i1l555:
  7541  15EB  0008               	return
  7542  15EC                     __end_of_Check_WH_mode:
  7543                           
  7544                           	psect	text29
  7545  1CD3                     __ptext29:	
  7546 ;; *************** function _get_temp_after_reset *****************
  7547 ;; Defined at:
  7548 ;;		line 101 in file "WH.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;		None
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  1    wreg      void 
  7555 ;; Registers used:
  7556 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7562 ;;      Params:         0       0       0       0       0
  7563 ;;      Locals:         0       0       0       0       0
  7564 ;;      Temps:          0       0       0       0       0
  7565 ;;      Totals:         0       0       0       0       0
  7566 ;;Total ram usage:        0 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; Hardware stack levels required when called:    3
  7569 ;; This function calls:
  7570 ;;		_EEPROM_Read
  7571 ;; This function is called by:
  7572 ;;		_Check_WH_mode
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           
  7577                           ;psect for function _get_temp_after_reset
  7578  1CD3                     _get_temp_after_reset:
  7579  1CD3                     i1l3748:	
  7580                           ;incstack = 0
  7581 ;; hardware stack exceeded
  7582                           ; Regs used in _get_temp_after_reset: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7583                           
  7584                           
  7585                           ;WH.c: 103: back_up_temp = EEPROM_Read((0x0030));
  7586  1CD3  3030               	movlw	48
  7587  1CD4  00F1               	movwf	EEPROM_Read@add
  7588  1CD5  3000               	movlw	0
  7589  1CD6  00F2               	movwf	EEPROM_Read@add+1
  7590  1CD7  160A  118A  219C  160A  158A  	fcall	_EEPROM_Read
  7591  1CDC  00FF               	movwf	btemp+1
  7592  1CDD  087F               	movf	btemp+1,w
  7593  1CDE  1283               	bcf	3,5	;RP0=0, select bank0
  7594  1CDF  1303               	bcf	3,6	;RP1=0, select bank0
  7595  1CE0  00CA               	movwf	_back_up_temp
  7596  1CE1                     i1l3750:
  7597                           
  7598                           ;WH.c: 104: Current_Temp = back_up_temp ;
  7599  1CE1  084A               	movf	_back_up_temp,w
  7600  1CE2  00FF               	movwf	btemp+1
  7601  1CE3  087F               	movf	btemp+1,w
  7602  1CE4  00D6               	movwf	_Current_Temp
  7603  1CE5                     i1l528:
  7604  1CE5  0008               	return
  7605  1CE6                     __end_of_get_temp_after_reset:
  7606                           
  7607                           	psect	text30
  7608  119C                     __ptext30:	
  7609 ;; *************** function _EEPROM_Read *****************
  7610 ;; Defined at:
  7611 ;;		line 25 in file "EEPROM.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  add             2    1[COMMON] unsigned int 
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;  ADDRH           1    5[COMMON] unsigned char 
  7616 ;;  Data            1    4[COMMON] unsigned char 
  7617 ;;  ADDRL           1    3[COMMON] unsigned char 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  1    wreg      unsigned char 
  7620 ;; Registers used:
  7621 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7627 ;;      Params:         2       0       0       0       0
  7628 ;;      Locals:         3       0       0       0       0
  7629 ;;      Temps:          0       0       0       0       0
  7630 ;;      Totals:         5       0       0       0       0
  7631 ;;Total ram usage:        5 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:    2
  7634 ;; This function calls:
  7635 ;;		_I2C_Read
  7636 ;;		_I2C_Start
  7637 ;;		_I2C_Stop
  7638 ;;		_I2C_Write
  7639 ;; This function is called by:
  7640 ;;		_get_temp_after_reset
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           
  7645                           ;psect for function _EEPROM_Read
  7646  119C                     _EEPROM_Read:
  7647  119C                     i1l3240:	
  7648                           ;incstack = 0
  7649 ;; hardware stack exceeded
  7650                           ; Regs used in _EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7651                           
  7652  119C                     i1l3242:
  7653                           
  7654                           ;EEPROM.c: 29: uint8_t ADDRH= (add & 0x0100) >> 8;
  7655  119C  0872               	movf	EEPROM_Read@add+1,w
  7656  119D  3901               	andlw	1
  7657  119E  00FF               	movwf	btemp+1
  7658  119F  087F               	movf	btemp+1,w
  7659  11A0  00F5               	movwf	EEPROM_Read@ADDRH
  7660                           
  7661                           ;EEPROM.c: 30: uint8_t ADDRL =(add & 0x00FF);
  7662  11A1  0871               	movf	EEPROM_Read@add,w
  7663  11A2  00FF               	movwf	btemp+1
  7664  11A3  087F               	movf	btemp+1,w
  7665  11A4  00F3               	movwf	EEPROM_Read@ADDRL
  7666  11A5                     i1l3244:
  7667                           
  7668                           ;EEPROM.c: 31: I2C_Start();
  7669  11A5  160A  158A  2431  160A  118A  	fcall	_I2C_Start
  7670  11AA                     i1l3246:
  7671                           
  7672                           ;EEPROM.c: 32: if(ADDRH != 0)
  7673  11AA  0875               	movf	EEPROM_Read@ADDRH,w
  7674  11AB  1903               	btfsc	3,2
  7675  11AC  29AE               	goto	u406_21
  7676  11AD  29AF               	goto	u406_20
  7677  11AE                     u406_21:
  7678  11AE  29BB               	goto	i1l3252
  7679  11AF                     u406_20:
  7680  11AF                     i1l3250:
  7681  11AF  30A2               	movlw	162
  7682  11B0  160A  158A  24A1  160A  118A  	fcall	_I2C_Write
  7683  11B5  3A00               	xorlw	0
  7684  11B6  1D03               	skipz
  7685  11B7  29B9               	goto	u407_21
  7686  11B8  29BA               	goto	u407_20
  7687  11B9                     u407_21:
  7688  11B9  29AF               	goto	i1l3250
  7689  11BA                     u407_20:
  7690  11BA  29C6               	goto	i1l3254
  7691  11BB                     i1l3252:
  7692  11BB  30A0               	movlw	160
  7693  11BC  160A  158A  24A1  160A  118A  	fcall	_I2C_Write
  7694  11C1  3A00               	xorlw	0
  7695  11C2  1D03               	skipz
  7696  11C3  29C5               	goto	u408_21
  7697  11C4  29C6               	goto	u408_20
  7698  11C5                     u408_21:
  7699  11C5  29BB               	goto	i1l3252
  7700  11C6                     u408_20:
  7701  11C6                     i1l3254:
  7702                           
  7703                           ;EEPROM.c: 39: };EEPROM.c: 41: I2C_Write(ADDRL);
  7704  11C6  0873               	movf	EEPROM_Read@ADDRL,w
  7705  11C7  160A  158A  24A1  160A  118A  	fcall	_I2C_Write
  7706                           
  7707                           ;EEPROM.c: 43: I2C_Start();
  7708  11CC  160A  158A  2431  160A  118A  	fcall	_I2C_Start
  7709  11D1                     i1l3256:
  7710                           
  7711                           ;EEPROM.c: 44: if(ADDRH != 0)
  7712  11D1  0875               	movf	EEPROM_Read@ADDRH,w
  7713  11D2  1903               	btfsc	3,2
  7714  11D3  29D5               	goto	u409_21
  7715  11D4  29D6               	goto	u409_20
  7716  11D5                     u409_21:
  7717  11D5  29E2               	goto	i1l3262
  7718  11D6                     u409_20:
  7719  11D6                     i1l3260:
  7720  11D6  30A3               	movlw	163
  7721  11D7  160A  158A  24A1  160A  118A  	fcall	_I2C_Write
  7722  11DC  3A00               	xorlw	0
  7723  11DD  1D03               	skipz
  7724  11DE  29E0               	goto	u410_21
  7725  11DF  29E1               	goto	u410_20
  7726  11E0                     u410_21:
  7727  11E0  29D6               	goto	i1l3260
  7728  11E1                     u410_20:
  7729  11E1  29ED               	goto	i1l3264
  7730  11E2                     i1l3262:
  7731  11E2  30A1               	movlw	161
  7732  11E3  160A  158A  24A1  160A  118A  	fcall	_I2C_Write
  7733  11E8  3A00               	xorlw	0
  7734  11E9  1D03               	skipz
  7735  11EA  29EC               	goto	u411_21
  7736  11EB  29ED               	goto	u411_20
  7737  11EC                     u411_21:
  7738  11EC  29E2               	goto	i1l3262
  7739  11ED                     u411_20:
  7740  11ED                     i1l3264:
  7741                           
  7742                           ;EEPROM.c: 51: };EEPROM.c: 54: Data = I2C_Read();
  7743  11ED  160A  158A  2566  160A  118A  	fcall	_I2C_Read
  7744  11F2  00FF               	movwf	btemp+1
  7745  11F3  087F               	movf	btemp+1,w
  7746  11F4  00F4               	movwf	EEPROM_Read@Data
  7747  11F5                     i1l3266:
  7748                           
  7749                           ;EEPROM.c: 56: I2C_Stop();
  7750  11F5  160A  158A  243A  160A  118A  	fcall	_I2C_Stop
  7751  11FA                     i1l3268:
  7752                           
  7753                           ;EEPROM.c: 58: return Data;
  7754  11FA  0874               	movf	EEPROM_Read@Data,w
  7755  11FB                     i1l367:
  7756  11FB  0008               	return
  7757  11FC                     __end_of_EEPROM_Read:
  7758                           
  7759                           	psect	text31
  7760  1CA1                     __ptext31:	
  7761 ;; *************** function _I2C_Write *****************
  7762 ;; Defined at:
  7763 ;;		line 44 in file "I2C.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;  Data            1    wreg     unsigned char 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  Data            1    0[COMMON] unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      unsigned char 
  7770 ;; Registers used:
  7771 ;;		wreg
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7777 ;;      Params:         0       0       0       0       0
  7778 ;;      Locals:         1       0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0
  7780 ;;      Totals:         1       0       0       0       0
  7781 ;;Total ram usage:        1 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; This function calls:
  7784 ;;		Nothing
  7785 ;; This function is called by:
  7786 ;;		_EEPROM_Write
  7787 ;;		_EEPROM_Read
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           
  7792                           ;psect for function _I2C_Write
  7793  1CA1                     _I2C_Write:
  7794                           
  7795                           ;incstack = 0
  7796 ;; hardware stack exceeded
  7797                           ; Regs used in _I2C_Write: [wreg]
  7798                           ;I2C_Write@Data stored from wreg
  7799  1CA1  00F0               	movwf	I2C_Write@Data
  7800  1CA2                     i1l2996:
  7801                           
  7802                           ;I2C.c: 46: SSPBUF = Data;
  7803  1CA2  0870               	movf	I2C_Write@Data,w
  7804  1CA3  1283               	bcf	3,5	;RP0=0, select bank0
  7805  1CA4  1303               	bcf	3,6	;RP1=0, select bank0
  7806  1CA5  0093               	movwf	19	;volatile
  7807  1CA6                     i1l179:	
  7808                           ;I2C.c: 47: while(!SSPIF);
  7809                           
  7810  1CA6  1D8C               	btfss	12,3	;volatile
  7811  1CA7  2CA9               	goto	u355_21
  7812  1CA8  2CAA               	goto	u355_20
  7813  1CA9                     u355_21:
  7814  1CA9  2CA6               	goto	i1l179
  7815  1CAA                     u355_20:
  7816  1CAA                     i1l181:
  7817                           
  7818                           ;I2C.c: 48: SSPIF = 0;
  7819  1CAA  118C               	bcf	12,3	;volatile
  7820  1CAB                     i1l2998:
  7821                           
  7822                           ;I2C.c: 49: return ACKSTAT;
  7823  1CAB  3000               	movlw	0
  7824  1CAC  1683               	bsf	3,5	;RP0=1, select bank1
  7825  1CAD  1303               	bcf	3,6	;RP1=0, select bank1
  7826  1CAE  1B11               	btfsc	17,6	;volatile
  7827  1CAF  3001               	movlw	1
  7828  1CB0                     i1l182:
  7829  1CB0  0008               	return
  7830  1CB1                     __end_of_I2C_Write:
  7831                           
  7832                           	psect	text32
  7833  1C3A                     __ptext32:	
  7834 ;; *************** function _I2C_Stop *****************
  7835 ;; Defined at:
  7836 ;;		line 24 in file "I2C.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;		None
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;		None
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      void 
  7843 ;; Registers used:
  7844 ;;		wreg, status,2, status,0, pclath, cstack
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7850 ;;      Params:         0       0       0       0       0
  7851 ;;      Locals:         0       0       0       0       0
  7852 ;;      Temps:          0       0       0       0       0
  7853 ;;      Totals:         0       0       0       0       0
  7854 ;;Total ram usage:        0 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    1
  7857 ;; This function calls:
  7858 ;;		_I2C_Wait_idle
  7859 ;; This function is called by:
  7860 ;;		_EEPROM_Write
  7861 ;;		_EEPROM_Read
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           
  7866                           ;psect for function _I2C_Stop
  7867  1C3A                     _I2C_Stop:
  7868  1C3A                     i1l2992:	
  7869                           ;incstack = 0
  7870 ;; hardware stack exceeded
  7871                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  7872                           
  7873                           
  7874                           ;I2C.c: 26: I2C_Wait_idle();
  7875  1C3A  160A  158A  2484  160A  158A  	fcall	_I2C_Wait_idle
  7876  1C3F                     i1l2994:
  7877                           
  7878                           ;I2C.c: 27: PEN = 1;
  7879  1C3F  1683               	bsf	3,5	;RP0=1, select bank1
  7880  1C40  1303               	bcf	3,6	;RP1=0, select bank1
  7881  1C41  1511               	bsf	17,2	;volatile
  7882  1C42                     i1l170:
  7883  1C42  0008               	return
  7884  1C43                     __end_of_I2C_Stop:
  7885                           
  7886                           	psect	text33
  7887  1C31                     __ptext33:	
  7888 ;; *************** function _I2C_Start *****************
  7889 ;; Defined at:
  7890 ;;		line 18 in file "I2C.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;		None
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      void 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2, status,0, pclath, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7904 ;;      Params:         0       0       0       0       0
  7905 ;;      Locals:         0       0       0       0       0
  7906 ;;      Temps:          0       0       0       0       0
  7907 ;;      Totals:         0       0       0       0       0
  7908 ;;Total ram usage:        0 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:    1
  7911 ;; This function calls:
  7912 ;;		_I2C_Wait_idle
  7913 ;; This function is called by:
  7914 ;;		_EEPROM_Write
  7915 ;;		_EEPROM_Read
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           
  7920                           ;psect for function _I2C_Start
  7921  1C31                     _I2C_Start:
  7922  1C31                     i1l2988:	
  7923                           ;incstack = 0
  7924 ;; hardware stack exceeded
  7925                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  7926                           
  7927                           
  7928                           ;I2C.c: 20: I2C_Wait_idle();
  7929  1C31  160A  158A  2484  160A  158A  	fcall	_I2C_Wait_idle
  7930  1C36                     i1l2990:
  7931                           
  7932                           ;I2C.c: 21: SEN = 1;
  7933  1C36  1683               	bsf	3,5	;RP0=1, select bank1
  7934  1C37  1303               	bcf	3,6	;RP1=0, select bank1
  7935  1C38  1411               	bsf	17,0	;volatile
  7936  1C39                     i1l167:
  7937  1C39  0008               	return
  7938  1C3A                     __end_of_I2C_Start:
  7939                           
  7940                           	psect	text34
  7941  1D66                     __ptext34:	
  7942 ;; *************** function _I2C_Read *****************
  7943 ;; Defined at:
  7944 ;;		line 53 in file "I2C.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;		None
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;		None
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1    wreg      unsigned char 
  7951 ;; Registers used:
  7952 ;;		wreg, status,2, status,0, pclath, cstack
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7958 ;;      Params:         0       0       0       0       0
  7959 ;;      Locals:         0       0       0       0       0
  7960 ;;      Temps:          0       0       0       0       0
  7961 ;;      Totals:         0       0       0       0       0
  7962 ;;Total ram usage:        0 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    1
  7965 ;; This function calls:
  7966 ;;		_I2C_Wait_idle
  7967 ;; This function is called by:
  7968 ;;		_EEPROM_Read
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           
  7973                           ;psect for function _I2C_Read
  7974  1D66                     _I2C_Read:
  7975  1D66                     i1l3002:	
  7976                           ;incstack = 0
  7977 ;; hardware stack exceeded
  7978                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  7979                           
  7980                           
  7981                           ;I2C.c: 55: I2C_Wait_idle();
  7982  1D66  160A  158A  2484  160A  158A  	fcall	_I2C_Wait_idle
  7983  1D6B                     i1l3004:
  7984                           
  7985                           ;I2C.c: 56: RCEN = 1;
  7986  1D6B  1683               	bsf	3,5	;RP0=1, select bank1
  7987  1D6C  1303               	bcf	3,6	;RP1=0, select bank1
  7988  1D6D  1591               	bsf	17,3	;volatile
  7989  1D6E                     i1l185:	
  7990                           ;I2C.c: 57: while(!SSPIF);
  7991                           
  7992  1D6E  1283               	bcf	3,5	;RP0=0, select bank0
  7993  1D6F  1D8C               	btfss	12,3	;volatile
  7994  1D70  2D72               	goto	u356_21
  7995  1D71  2D73               	goto	u356_20
  7996  1D72                     u356_21:
  7997  1D72  2D6E               	goto	i1l185
  7998  1D73                     u356_20:
  7999  1D73                     i1l187:
  8000                           
  8001                           ;I2C.c: 58: SSPIF = 0;
  8002  1D73  118C               	bcf	12,3	;volatile
  8003  1D74                     i1l3006:
  8004                           
  8005                           ;I2C.c: 59: I2C_Wait_idle();
  8006  1D74  160A  158A  2484  160A  158A  	fcall	_I2C_Wait_idle
  8007  1D79                     i1l3008:
  8008                           
  8009                           ;I2C.c: 60: return SSPBUF;
  8010  1D79  1283               	bcf	3,5	;RP0=0, select bank0
  8011  1D7A  1303               	bcf	3,6	;RP1=0, select bank0
  8012  1D7B  0813               	movf	19,w	;volatile
  8013  1D7C                     i1l188:
  8014  1D7C  0008               	return
  8015  1D7D                     __end_of_I2C_Read:
  8016                           
  8017                           	psect	text35
  8018  1C84                     __ptext35:	
  8019 ;; *************** function _I2C_Wait_idle *****************
  8020 ;; Defined at:
  8021 ;;		line 3 in file "I2C.c"
  8022 ;; Parameters:    Size  Location     Type
  8023 ;;		None
  8024 ;; Auto vars:     Size  Location     Type
  8025 ;;		None
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  1    wreg      void 
  8028 ;; Registers used:
  8029 ;;		wreg, status,2
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/0
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8035 ;;      Params:         0       0       0       0       0
  8036 ;;      Locals:         0       0       0       0       0
  8037 ;;      Temps:          0       0       0       0       0
  8038 ;;      Totals:         0       0       0       0       0
  8039 ;;Total ram usage:        0 bytes
  8040 ;; Hardware stack levels used:    1
  8041 ;; This function calls:
  8042 ;;		Nothing
  8043 ;; This function is called by:
  8044 ;;		_I2C_Start
  8045 ;;		_I2C_Stop
  8046 ;;		_I2C_Read
  8047 ;;		_I2C_Ack
  8048 ;;		_I2C_Nack
  8049 ;;		_I2C_Master_RepeatedStart
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           
  8054                           ;psect for function _I2C_Wait_idle
  8055  1C84                     _I2C_Wait_idle:
  8056  1C84                     i1l2984:	
  8057                           ;incstack = 0
  8058 ;; hardware stack exceeded
  8059                           ; Regs used in _I2C_Wait_idle: [wreg+status,2]
  8060                           
  8061  1C84                     i1l158:	
  8062                           ;I2C.c: 5: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8063                           
  8064  1C84  1683               	bsf	3,5	;RP0=1, select bank1
  8065  1C85  1303               	bcf	3,6	;RP1=0, select bank1
  8066  1C86  1914               	btfsc	20,2	;volatile
  8067  1C87  2C89               	goto	u353_21
  8068  1C88  2C8A               	goto	u353_20
  8069  1C89                     u353_21:
  8070  1C89  2C84               	goto	i1l158
  8071  1C8A                     u353_20:
  8072  1C8A                     i1l2986:
  8073  1C8A  0811               	movf	17,w	;volatile
  8074  1C8B  391F               	andlw	31
  8075  1C8C  1D03               	btfss	3,2
  8076  1C8D  2C8F               	goto	u354_21
  8077  1C8E  2C90               	goto	u354_20
  8078  1C8F                     u354_21:
  8079  1C8F  2C84               	goto	i1l158
  8080  1C90                     u354_20:
  8081  1C90                     i1l161:
  8082  1C90  0008               	return
  8083  1C91                     __end_of_I2C_Wait_idle:
  8084                           
  8085                           	psect	text36
  8086  1DD0                     __ptext36:	
  8087 ;; *************** function _WH_Disable *****************
  8088 ;; Defined at:
  8089 ;;		line 178 in file "WH.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;		None
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  1    wreg      void 
  8096 ;; Registers used:
  8097 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8103 ;;      Params:         0       0       0       0       0
  8104 ;;      Locals:         0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0
  8106 ;;      Totals:         0       0       0       0       0
  8107 ;;Total ram usage:        0 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    1
  8110 ;; This function calls:
  8111 ;;		_COOL_turn_off
  8112 ;;		_WH_turn_off
  8113 ;; This function is called by:
  8114 ;;		_Check_WH_mode
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118                           
  8119                           ;psect for function _WH_Disable
  8120  1DD0                     _WH_Disable:
  8121  1DD0                     i1l3760:	
  8122                           ;incstack = 0
  8123 ;; hardware stack exceeded
  8124                           ; Regs used in _WH_Disable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8125                           
  8126                           
  8127                           ;WH.c: 180: WH_turn_off();
  8128  1DD0  160A  158A  240A  160A  158A  	fcall	_WH_turn_off
  8129                           
  8130                           ;WH.c: 181: COOL_turn_off();
  8131  1DD5  160A  158A  2403  160A  158A  	fcall	_COOL_turn_off
  8132  1DDA                     i1l3762:
  8133                           
  8134                           ;WH.c: 182: g_tick_count = 0;
  8135  1DDA  3000               	movlw	0
  8136  1DDB  1683               	bsf	3,5	;RP0=1, select bank3
  8137  1DDC  1703               	bsf	3,6	;RP1=1, select bank3
  8138  1DDD  00A4               	movwf	(_g_tick_count+3)^(0+384)
  8139  1DDE  3000               	movlw	0
  8140  1DDF  00A3               	movwf	(_g_tick_count+2)^(0+384)
  8141  1DE0  3000               	movlw	0
  8142  1DE1  00A2               	movwf	(_g_tick_count+1)^(0+384)
  8143  1DE2  3000               	movlw	0
  8144  1DE3  00A1               	movwf	_g_tick_count^(0+384)
  8145  1DE4                     i1l3764:
  8146                           
  8147                           ;WH.c: 183: Init_flag = 0;
  8148  1DE4  3000               	movlw	0
  8149  1DE5  1283               	bcf	3,5	;RP0=0, select bank0
  8150  1DE6  1303               	bcf	3,6	;RP1=0, select bank0
  8151  1DE7  00C5               	movwf	_Init_flag+3
  8152  1DE8  3000               	movlw	0
  8153  1DE9  00C4               	movwf	_Init_flag+2
  8154  1DEA  3000               	movlw	0
  8155  1DEB  00C3               	movwf	_Init_flag+1
  8156  1DEC  3000               	movlw	0
  8157  1DED  00C2               	movwf	_Init_flag
  8158  1DEE                     i1l3766:
  8159                           
  8160                           ;WH.c: 184: set_temp = (60);
  8161  1DEE  303C               	movlw	60
  8162  1DEF  00FF               	movwf	btemp+1
  8163  1DF0  087F               	movf	btemp+1,w
  8164  1DF1  00D7               	movwf	_set_temp
  8165  1DF2                     i1l3768:
  8166                           
  8167                           ;WH.c: 185: SSD_BLINK_STATE = SSD_OFF ;
  8168  1DF2  01CE               	clrf	_SSD_BLINK_STATE
  8169  1DF3                     i1l558:
  8170  1DF3  0008               	return
  8171  1DF4                     __end_of_WH_Disable:
  8172                           
  8173                           	psect	text37
  8174  1C0A                     __ptext37:	
  8175 ;; *************** function _WH_turn_off *****************
  8176 ;; Defined at:
  8177 ;;		line 207 in file "WH.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;		None
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      void 
  8184 ;; Registers used:
  8185 ;;		wreg, status,2
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8191 ;;      Params:         0       0       0       0       0
  8192 ;;      Locals:         0       0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0
  8194 ;;      Totals:         0       0       0       0       0
  8195 ;;Total ram usage:        0 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; This function calls:
  8198 ;;		Nothing
  8199 ;; This function is called by:
  8200 ;;		_WH_Turn_On_Off
  8201 ;;		_Check_WH_mode
  8202 ;;		_WH_Disable
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           
  8207                           ;psect for function _WH_turn_off
  8208  1C0A                     _WH_turn_off:
  8209  1C0A                     i1l3276:	
  8210                           ;incstack = 0
  8211 ;; hardware stack exceeded
  8212                           ; Regs used in _WH_turn_off: [wreg+status,2]
  8213                           
  8214                           
  8215                           ;WH.c: 209: (((PORTC)) = ((((PORTC)) & (~1<<(5)))) | ((0) << (5)));
  8216  1C0A  1283               	bcf	3,5	;RP0=0, select bank0
  8217  1C0B  1303               	bcf	3,6	;RP1=0, select bank0
  8218  1C0C  0807               	movf	7,w	;volatile
  8219  1C0D  39C0               	andlw	192
  8220  1C0E  0087               	movwf	7	;volatile
  8221  1C0F                     i1l3278:
  8222                           
  8223                           ;WH.c: 210: WH_FLAG = 0 ;
  8224  1C0F  01C9               	clrf	_WH_FLAG
  8225  1C10                     i1l568:
  8226  1C10  0008               	return
  8227  1C11                     __end_of_WH_turn_off:
  8228                           
  8229                           	psect	text38
  8230  1C03                     __ptext38:	
  8231 ;; *************** function _COOL_turn_off *****************
  8232 ;; Defined at:
  8233 ;;		line 219 in file "WH.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;		None
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;		None
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  1    wreg      void 
  8240 ;; Registers used:
  8241 ;;		wreg, status,2
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8247 ;;      Params:         0       0       0       0       0
  8248 ;;      Locals:         0       0       0       0       0
  8249 ;;      Temps:          0       0       0       0       0
  8250 ;;      Totals:         0       0       0       0       0
  8251 ;;Total ram usage:        0 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; This function calls:
  8254 ;;		Nothing
  8255 ;; This function is called by:
  8256 ;;		_WH_Turn_On_Off
  8257 ;;		_Check_WH_mode
  8258 ;;		_WH_Disable
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           
  8263                           ;psect for function _COOL_turn_off
  8264  1C03                     _COOL_turn_off:
  8265  1C03                     i1l3272:	
  8266                           ;incstack = 0
  8267 ;; hardware stack exceeded
  8268                           ; Regs used in _COOL_turn_off: [wreg+status,2]
  8269                           
  8270                           
  8271                           ;WH.c: 221: (((PORTC)) = ((((PORTC)) & (~1<<(2)))) | ((0) << (2)));
  8272  1C03  1283               	bcf	3,5	;RP0=0, select bank0
  8273  1C04  1303               	bcf	3,6	;RP1=0, select bank0
  8274  1C05  0807               	movf	7,w	;volatile
  8275  1C06  39F8               	andlw	248
  8276  1C07  0087               	movwf	7	;volatile
  8277  1C08                     i1l3274:
  8278                           
  8279                           ;WH.c: 222: CL_Flag = 0 ;
  8280  1C08  01C8               	clrf	_CL_Flag
  8281  1C09                     i1l574:
  8282  1C09  0008               	return
  8283  1C0A                     __end_of_COOL_turn_off:
  8284                           
  8285                           	psect	text39
  8286  1E3F                     __ptext39:	
  8287 ;; *************** function _Update_OS_Mode *****************
  8288 ;; Defined at:
  8289 ;;		line 189 in file "WH.c"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;		None
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;		None
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      void 
  8296 ;; Registers used:
  8297 ;;		wreg, status,2, status,0
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8303 ;;      Params:         0       0       0       0       0
  8304 ;;      Locals:         0       0       0       0       0
  8305 ;;      Temps:          0       0       0       0       0
  8306 ;;      Totals:         0       0       0       0       0
  8307 ;;Total ram usage:        0 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; This function calls:
  8310 ;;		Nothing
  8311 ;; This function is called by:
  8312 ;;		_TMR_Update
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           
  8317                           ;psect for function _Update_OS_Mode
  8318  1E3F                     _Update_OS_Mode:
  8319  1E3F                     i1l4510:	
  8320                           ;incstack = 0
  8321                           ; Regs used in _Update_OS_Mode: [wreg+status,2+status,0]
  8322                           
  8323                           
  8324                           ;WH.c: 191: if(g_tick_count != (500))
  8325  1E3F  30F4               	movlw	244
  8326  1E40  1683               	bsf	3,5	;RP0=1, select bank3
  8327  1E41  1703               	bsf	3,6	;RP1=1, select bank3
  8328  1E42  0621               	xorwf	_g_tick_count^(0+384),w
  8329  1E43  1D03               	skipz
  8330  1E44  2E4C               	goto	u683_20
  8331  1E45  0322               	decf	(_g_tick_count+1)^(0+384),w
  8332  1E46  0423               	iorwf	(_g_tick_count+2)^(0+384),w
  8333  1E47  0424               	iorwf	(_g_tick_count+3)^(0+384),w
  8334  1E48  1903               	btfsc	3,2
  8335  1E49  2E4B               	goto	u683_21
  8336  1E4A  2E4C               	goto	u683_20
  8337  1E4B                     u683_21:
  8338  1E4B  2E4D               	goto	i1l561
  8339  1E4C                     u683_20:
  8340  1E4C  2E66               	goto	i1l562
  8341  1E4D                     i1l561:
  8342                           
  8343                           ;WH.c: 194: };WH.c: 195: MODE = Normal_Mode;
  8344  1E4D  1283               	bcf	3,5	;RP0=0, select bank0
  8345  1E4E  1303               	bcf	3,6	;RP1=0, select bank0
  8346  1E4F  01D8               	clrf	_MODE
  8347  1E50  0AD8               	incf	_MODE,f
  8348  1E51                     i1l4514:
  8349                           
  8350                           ;WH.c: 196: g_tick_count = 0;
  8351  1E51  3000               	movlw	0
  8352  1E52  1683               	bsf	3,5	;RP0=1, select bank3
  8353  1E53  1703               	bsf	3,6	;RP1=1, select bank3
  8354  1E54  00A4               	movwf	(_g_tick_count+3)^(0+384)
  8355  1E55  3000               	movlw	0
  8356  1E56  00A3               	movwf	(_g_tick_count+2)^(0+384)
  8357  1E57  3000               	movlw	0
  8358  1E58  00A2               	movwf	(_g_tick_count+1)^(0+384)
  8359  1E59  3000               	movlw	0
  8360  1E5A  00A1               	movwf	_g_tick_count^(0+384)
  8361                           
  8362                           ;WH.c: 197: Init_flag = 0;
  8363  1E5B  3000               	movlw	0
  8364  1E5C  1283               	bcf	3,5	;RP0=0, select bank0
  8365  1E5D  1303               	bcf	3,6	;RP1=0, select bank0
  8366  1E5E  00C5               	movwf	_Init_flag+3
  8367  1E5F  3000               	movlw	0
  8368  1E60  00C4               	movwf	_Init_flag+2
  8369  1E61  3000               	movlw	0
  8370  1E62  00C3               	movwf	_Init_flag+1
  8371  1E63  3000               	movlw	0
  8372  1E64  00C2               	movwf	_Init_flag
  8373  1E65                     i1l4516:
  8374                           
  8375                           ;WH.c: 198: SSD_BLINK_STATE = SSD_OFF ;
  8376  1E65  01CE               	clrf	_SSD_BLINK_STATE
  8377  1E66                     i1l562:
  8378  1E66  0008               	return
  8379  1E67                     __end_of_Update_OS_Mode:
  8380                           
  8381                           	psect	text40
  8382  102F                     __ptext40:	
  8383 ;; *************** function _Update_Global_counter *****************
  8384 ;; Defined at:
  8385 ;;		line 128 in file "WH.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8399 ;;      Params:         0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0
  8402 ;;      Totals:         0       0       0       0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; Hardware stack levels required when called:    2
  8406 ;; This function calls:
  8407 ;;		_SW_GetState
  8408 ;; This function is called by:
  8409 ;;		_TMR_Update
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           
  8414                           ;psect for function _Update_Global_counter
  8415  102F                     _Update_Global_counter:
  8416  102F                     i1l5442:	
  8417                           ;incstack = 0
  8418 ;; hardware stack exceeded
  8419                           ; Regs used in _Update_Global_counter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  8420                           
  8421                           
  8422                           ;WH.c: 130: if(MODE == Set_Mode)
  8423  102F  1283               	bcf	3,5	;RP0=0, select bank0
  8424  1030  1303               	bcf	3,6	;RP1=0, select bank0
  8425  1031  0858               	movf	_MODE,w
  8426  1032  1D03               	btfss	3,2
  8427  1033  2835               	goto	u870_21
  8428  1034  2836               	goto	u870_20
  8429  1035                     u870_21:
  8430  1035  2846               	goto	i1l5446
  8431  1036                     u870_20:
  8432  1036                     i1l5444:
  8433                           
  8434                           ;WH.c: 131: {;WH.c: 132: g_tick_count += (1);
  8435  1036  3001               	movlw	1
  8436  1037  1683               	bsf	3,5	;RP0=1, select bank3
  8437  1038  1703               	bsf	3,6	;RP1=1, select bank3
  8438  1039  07A1               	addwf	_g_tick_count^(0+384),f
  8439  103A  3000               	movlw	0
  8440  103B  1803               	skipnc
  8441  103C  3001               	movlw	1
  8442  103D  07A2               	addwf	(_g_tick_count+1)^(0+384),f
  8443  103E  3000               	movlw	0
  8444  103F  1803               	skipnc
  8445  1040  3001               	movlw	1
  8446  1041  07A3               	addwf	(_g_tick_count+2)^(0+384),f
  8447  1042  3000               	movlw	0
  8448  1043  1803               	skipnc
  8449  1044  3001               	movlw	1
  8450  1045  07A4               	addwf	(_g_tick_count+3)^(0+384),f
  8451  1046                     i1l5446:
  8452                           
  8453                           ;WH.c: 133: };WH.c: 134: if((SW_GetState(SW_PLUS) == SW_PRE_PRESSED) ||;WH.c: 135: (SW_G
      +                          etState(SW_MINUS) == SW_PRE_PRESSED) ||;WH.c: 136: ((SW_GetState(SW_SET) == SW_PRE_PRESS
      +                          ED)))
  8454  1046  3002               	movlw	2
  8455  1047  160A  158A  2491  160A  118A  	fcall	_SW_GetState
  8456  104C  3A01               	xorlw	1
  8457  104D  1903               	skipnz
  8458  104E  2850               	goto	u871_21
  8459  104F  2851               	goto	u871_20
  8460  1050                     u871_21:
  8461  1050  2867               	goto	i1l5452
  8462  1051                     u871_20:
  8463  1051                     i1l5448:
  8464  1051  3001               	movlw	1
  8465  1052  160A  158A  2491  160A  118A  	fcall	_SW_GetState
  8466  1057  3A01               	xorlw	1
  8467  1058  1903               	skipnz
  8468  1059  285B               	goto	u872_21
  8469  105A  285C               	goto	u872_20
  8470  105B                     u872_21:
  8471  105B  2867               	goto	i1l5452
  8472  105C                     u872_20:
  8473  105C                     i1l5450:
  8474  105C  3000               	movlw	0
  8475  105D  160A  158A  2491  160A  118A  	fcall	_SW_GetState
  8476  1062  3A01               	xorlw	1
  8477  1063  1D03               	skipz
  8478  1064  2866               	goto	u873_21
  8479  1065  2867               	goto	u873_20
  8480  1066                     u873_21:
  8481  1066  2871               	goto	i1l543
  8482  1067                     u873_20:
  8483  1067                     i1l5452:
  8484                           
  8485                           ;WH.c: 137: {;WH.c: 138: g_tick_count = 0 ;
  8486  1067  3000               	movlw	0
  8487  1068  1683               	bsf	3,5	;RP0=1, select bank3
  8488  1069  1703               	bsf	3,6	;RP1=1, select bank3
  8489  106A  00A4               	movwf	(_g_tick_count+3)^(0+384)
  8490  106B  3000               	movlw	0
  8491  106C  00A3               	movwf	(_g_tick_count+2)^(0+384)
  8492  106D  3000               	movlw	0
  8493  106E  00A2               	movwf	(_g_tick_count+1)^(0+384)
  8494  106F  3000               	movlw	0
  8495  1070  00A1               	movwf	_g_tick_count^(0+384)
  8496  1071                     i1l543:	
  8497                           ;WH.c: 139: }
  8498                           
  8499  1071  0008               	return
  8500  1072                     __end_of_Update_Global_counter:
  8501                           
  8502                           	psect	text41
  8503  1C91                     __ptext41:	
  8504 ;; *************** function _SW_GetState *****************
  8505 ;; Defined at:
  8506 ;;		line 39 in file "SW.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;  sw              1    wreg     enum E879
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;  sw              1    3[COMMON] enum E879
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      enum E884
  8513 ;; Registers used:
  8514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8520 ;;      Params:         0       0       0       0       0
  8521 ;;      Locals:         1       0       0       0       0
  8522 ;;      Temps:          0       0       0       0       0
  8523 ;;      Totals:         1       0       0       0       0
  8524 ;;Total ram usage:        1 bytes
  8525 ;; Hardware stack levels used:    1
  8526 ;; Hardware stack levels required when called:    1
  8527 ;; This function calls:
  8528 ;;		i1___bmul
  8529 ;; This function is called by:
  8530 ;;		_WH_Set_temp
  8531 ;;		_Update_Global_counter
  8532 ;;		_Check_WH_mode
  8533 ;; This function uses a non-reentrant model
  8534 ;;
  8535                           
  8536                           
  8537                           ;psect for function _SW_GetState
  8538  1C91                     _SW_GetState:
  8539                           
  8540                           ;incstack = 0
  8541 ;; hardware stack exceeded
  8542                           ; Regs used in _SW_GetState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8543                           ;SW_GetState@sw stored from wreg
  8544  1C91  00F3               	movwf	SW_GetState@sw
  8545  1C92                     i1l5262:
  8546                           
  8547                           ;SW.c: 41: return SWs_Info[sw].SW_state;
  8548  1C92  3003               	movlw	3
  8549  1C93  00FF               	movwf	btemp+1
  8550  1C94  087F               	movf	btemp+1,w
  8551  1C95  00F0               	movwf	i1___bmul@multiplicand
  8552  1C96  0873               	movf	SW_GetState@sw,w
  8553  1C97  160A  158A  250E  160A  158A  	fcall	i1___bmul
  8554  1C9C  3E92               	addlw	(low ((_SWs_Info| (0+256)+2)))& (0+255)
  8555  1C9D  0084               	movwf	4
  8556  1C9E  1783               	bsf	3,7	;select IRP bank3
  8557  1C9F  0800               	movf	0,w
  8558  1CA0                     i1l381:
  8559  1CA0  0008               	return
  8560  1CA1                     __end_of_SW_GetState:
  8561                           
  8562                           	psect	text42
  8563  1002                     __ptext42:	
  8564 ;; *************** function _Tmepreture_Update *****************
  8565 ;; Defined at:
  8566 ;;		line 26 in file "TEMPRETURE.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;		None
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;		None
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  1    wreg      void 
  8573 ;; Registers used:
  8574 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8580 ;;      Params:         0       0       0       0       0
  8581 ;;      Locals:         0       0       0       0       0
  8582 ;;      Temps:          0       0       0       0       0
  8583 ;;      Totals:         0       0       0       0       0
  8584 ;;Total ram usage:        0 bytes
  8585 ;; Hardware stack levels used:    1
  8586 ;; Hardware stack levels required when called:    3
  8587 ;; This function calls:
  8588 ;;		_Get_temp
  8589 ;;		_Temp_ten_average
  8590 ;; This function is called by:
  8591 ;;		_TMR_Update
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           
  8596                           ;psect for function _Tmepreture_Update
  8597  1002                     _Tmepreture_Update:
  8598  1002                     i1l5510:	
  8599                           ;incstack = 0
  8600 ;; hardware stack exceeded
  8601                           ; Regs used in _Tmepreture_Update: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8602                           
  8603                           
  8604                           ;TEMPRETURE.c: 28: static uint32_t Temp_Update = 0;;TEMPRETURE.c: 30: Temp_Update++;
  8605  1002  3001               	movlw	1
  8606  1003  1683               	bsf	3,5	;RP0=1, select bank3
  8607  1004  1703               	bsf	3,6	;RP1=1, select bank3
  8608  1005  07A5               	addwf	Tmepreture_Update@Temp_Update^(0+384),f
  8609  1006  3000               	movlw	0
  8610  1007  1803               	skipnc
  8611  1008  3001               	movlw	1
  8612  1009  07A6               	addwf	(Tmepreture_Update@Temp_Update+1)^(0+384),f
  8613  100A  3000               	movlw	0
  8614  100B  1803               	skipnc
  8615  100C  3001               	movlw	1
  8616  100D  07A7               	addwf	(Tmepreture_Update@Temp_Update+2)^(0+384),f
  8617  100E  3000               	movlw	0
  8618  100F  1803               	skipnc
  8619  1010  3001               	movlw	1
  8620  1011  07A8               	addwf	(Tmepreture_Update@Temp_Update+3)^(0+384),f
  8621  1012                     i1l5512:
  8622                           
  8623                           ;TEMPRETURE.c: 32: if(Temp_Update != (10))
  8624  1012  300A               	movlw	10
  8625  1013  0625               	xorwf	Tmepreture_Update@Temp_Update^(0+384),w
  8626  1014  0426               	iorwf	(Tmepreture_Update@Temp_Update+1)^(0+384),w
  8627  1015  0427               	iorwf	(Tmepreture_Update@Temp_Update+2)^(0+384),w
  8628  1016  0428               	iorwf	(Tmepreture_Update@Temp_Update+3)^(0+384),w
  8629  1017  1903               	btfsc	3,2
  8630  1018  281A               	goto	u886_21
  8631  1019  281B               	goto	u886_20
  8632  101A                     u886_21:
  8633  101A  281C               	goto	i1l5516
  8634  101B                     u886_20:
  8635  101B  282E               	goto	i1l441
  8636  101C                     i1l5516:
  8637                           
  8638                           ;TEMPRETURE.c: 35: };TEMPRETURE.c: 37: Temp_Update = 0 ;
  8639  101C  3000               	movlw	0
  8640  101D  00A8               	movwf	(Tmepreture_Update@Temp_Update+3)^(0+384)
  8641  101E  3000               	movlw	0
  8642  101F  00A7               	movwf	(Tmepreture_Update@Temp_Update+2)^(0+384)
  8643  1020  3000               	movlw	0
  8644  1021  00A6               	movwf	(Tmepreture_Update@Temp_Update+1)^(0+384)
  8645  1022  3000               	movlw	0
  8646  1023  00A5               	movwf	Tmepreture_Update@Temp_Update^(0+384)
  8647  1024                     i1l5518:
  8648                           
  8649                           ;TEMPRETURE.c: 39: Get_temp();
  8650  1024  160A  118A  2477  160A  118A  	fcall	_Get_temp
  8651  1029                     i1l5520:
  8652                           
  8653                           ;TEMPRETURE.c: 41: Temp_ten_average();
  8654  1029  160A  118A  239B  160A  118A  	fcall	_Temp_ten_average
  8655  102E                     i1l441:
  8656  102E  0008               	return
  8657  102F                     __end_of_Tmepreture_Update:
  8658                           
  8659                           	psect	text43
  8660  139B                     __ptext43:	
  8661 ;; *************** function _Temp_ten_average *****************
  8662 ;; Defined at:
  8663 ;;		line 57 in file "TEMPRETURE.c"
  8664 ;; Parameters:    Size  Location     Type
  8665 ;;		None
  8666 ;; Auto vars:     Size  Location     Type
  8667 ;;		None
  8668 ;; Return value:  Size  Location     Type
  8669 ;;                  1    wreg      void 
  8670 ;; Registers used:
  8671 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8672 ;; Tracked objects:
  8673 ;;		On entry : 0/0
  8674 ;;		On exit  : 0/0
  8675 ;;		Unchanged: 0/0
  8676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8677 ;;      Params:         0       0       0       0       0
  8678 ;;      Locals:         0       0       0       0       0
  8679 ;;      Temps:          0       4       0       0       0
  8680 ;;      Totals:         0       4       0       0       0
  8681 ;;Total ram usage:        4 bytes
  8682 ;; Hardware stack levels used:    1
  8683 ;; Hardware stack levels required when called:    1
  8684 ;; This function calls:
  8685 ;;		i1___lldiv
  8686 ;; This function is called by:
  8687 ;;		_Tmepreture_Update
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691                           
  8692                           ;psect for function _Temp_ten_average
  8693  139B                     _Temp_ten_average:
  8694  139B                     i1l5362:	
  8695                           ;incstack = 0
  8696 ;; hardware stack exceeded
  8697                           ; Regs used in _Temp_ten_average: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8698                           
  8699                           
  8700                           ;TEMPRETURE.c: 59: temp_average += 1;
  8701  139B  3001               	movlw	1
  8702  139C  00FF               	movwf	btemp+1
  8703  139D  087F               	movf	btemp+1,w
  8704  139E  1283               	bcf	3,5	;RP0=0, select bank0
  8705  139F  1303               	bcf	3,6	;RP1=0, select bank0
  8706  13A0  07CC               	addwf	_temp_average,f
  8707  13A1                     i1l5364:
  8708                           
  8709                           ;TEMPRETURE.c: 60: Ten_average_temp += Temperature;
  8710  13A1  0850               	movf	_Temperature,w
  8711  13A2  00A0               	movwf	??_Temp_ten_average
  8712  13A3  01A1               	clrf	??_Temp_ten_average+1
  8713  13A4  01A2               	clrf	??_Temp_ten_average+2
  8714  13A5  01A3               	clrf	??_Temp_ten_average+3
  8715  13A6  0820               	movf	??_Temp_ten_average,w
  8716  13A7  1683               	bsf	3,5	;RP0=1, select bank3
  8717  13A8  1703               	bsf	3,6	;RP1=1, select bank3
  8718  13A9  07AD               	addwf	_Ten_average_temp^(0+384),f
  8719  13AA  1283               	bcf	3,5	;RP0=0, select bank0
  8720  13AB  1303               	bcf	3,6	;RP1=0, select bank0
  8721  13AC  0821               	movf	??_Temp_ten_average+1,w
  8722  13AD  1103               	clrz
  8723  13AE  1803               	skipnc
  8724  13AF  3E01               	addlw	1
  8725  13B0  1903               	skipnz
  8726  13B1  2BB5               	goto	u855_21
  8727  13B2  1683               	bsf	3,5	;RP0=1, select bank3
  8728  13B3  1703               	bsf	3,6	;RP1=1, select bank3
  8729  13B4  07AE               	addwf	(_Ten_average_temp+1)^(0+384),f
  8730  13B5                     u855_21:
  8731  13B5  1283               	bcf	3,5	;RP0=0, select bank0
  8732  13B6  1303               	bcf	3,6	;RP1=0, select bank0
  8733  13B7  0822               	movf	??_Temp_ten_average+2,w
  8734  13B8  1103               	clrz
  8735  13B9  1803               	skipnc
  8736  13BA  3E01               	addlw	1
  8737  13BB  1903               	skipnz
  8738  13BC  2BC0               	goto	u855_22
  8739  13BD  1683               	bsf	3,5	;RP0=1, select bank3
  8740  13BE  1703               	bsf	3,6	;RP1=1, select bank3
  8741  13BF  07AF               	addwf	(_Ten_average_temp+2)^(0+384),f
  8742  13C0                     u855_22:
  8743  13C0  1283               	bcf	3,5	;RP0=0, select bank0
  8744  13C1  1303               	bcf	3,6	;RP1=0, select bank0
  8745  13C2  0823               	movf	??_Temp_ten_average+3,w
  8746  13C3  1103               	clrz
  8747  13C4  1803               	skipnc
  8748  13C5  3E01               	addlw	1
  8749  13C6  1903               	skipnz
  8750  13C7  2BCB               	goto	u855_23
  8751  13C8  1683               	bsf	3,5	;RP0=1, select bank3
  8752  13C9  1703               	bsf	3,6	;RP1=1, select bank3
  8753  13CA  07B0               	addwf	(_Ten_average_temp+3)^(0+384),f
  8754  13CB                     u855_23:
  8755  13CB  1283               	bcf	3,5	;RP0=0, select bank0
  8756  13CC  1303               	bcf	3,6	;RP1=0, select bank0
  8757  13CD  1683               	bsf	3,5	;RP0=1, select bank3
  8758  13CE  1703               	bsf	3,6	;RP1=1, select bank3
  8759  13CF                     i1l5366:
  8760                           
  8761                           ;TEMPRETURE.c: 61: if(temp_average == 10)
  8762  13CF  300A               	movlw	10
  8763  13D0  1283               	bcf	3,5	;RP0=0, select bank0
  8764  13D1  1303               	bcf	3,6	;RP1=0, select bank0
  8765  13D2  064C               	xorwf	_temp_average,w
  8766  13D3  1D03               	btfss	3,2
  8767  13D4  2BD6               	goto	u856_21
  8768  13D5  2BD7               	goto	u856_20
  8769  13D6                     u856_21:
  8770  13D6  2C07               	goto	i1l448
  8771  13D7                     u856_20:
  8772  13D7                     i1l5368:
  8773                           
  8774                           ;TEMPRETURE.c: 62: {;TEMPRETURE.c: 63: average_temp = Ten_average_temp / 10 ;
  8775  13D7  3000               	movlw	0
  8776  13D8  00F3               	movwf	i1___lldiv@divisor+3
  8777  13D9  3000               	movlw	0
  8778  13DA  00F2               	movwf	i1___lldiv@divisor+2
  8779  13DB  3000               	movlw	0
  8780  13DC  00F1               	movwf	i1___lldiv@divisor+1
  8781  13DD  300A               	movlw	10
  8782  13DE  00F0               	movwf	i1___lldiv@divisor
  8783  13DF  1683               	bsf	3,5	;RP0=1, select bank3
  8784  13E0  1703               	bsf	3,6	;RP1=1, select bank3
  8785  13E1  0830               	movf	(_Ten_average_temp+3)^(0+384),w
  8786  13E2  00F7               	movwf	i1___lldiv@dividend+3
  8787  13E3  082F               	movf	(_Ten_average_temp+2)^(0+384),w
  8788  13E4  00F6               	movwf	i1___lldiv@dividend+2
  8789  13E5  082E               	movf	(_Ten_average_temp+1)^(0+384),w
  8790  13E6  00F5               	movwf	i1___lldiv@dividend+1
  8791  13E7  082D               	movf	_Ten_average_temp^(0+384),w
  8792  13E8  00F4               	movwf	i1___lldiv@dividend
  8793  13E9  160A  118A  21FC  160A  118A  	fcall	i1___lldiv
  8794  13EE  0873               	movf	?i1___lldiv+3,w
  8795  13EF  1683               	bsf	3,5	;RP0=1, select bank3
  8796  13F0  1703               	bsf	3,6	;RP1=1, select bank3
  8797  13F1  00AC               	movwf	(_average_temp+3)^(0+384)
  8798  13F2  0872               	movf	?i1___lldiv+2,w
  8799  13F3  00AB               	movwf	(_average_temp+2)^(0+384)
  8800  13F4  0871               	movf	?i1___lldiv+1,w
  8801  13F5  00AA               	movwf	(_average_temp+1)^(0+384)
  8802  13F6  0870               	movf	?i1___lldiv,w
  8803  13F7  00A9               	movwf	_average_temp^(0+384)
  8804  13F8                     i1l5370:
  8805                           
  8806                           ;TEMPRETURE.c: 64: temp_average = 0 ;
  8807  13F8  1283               	bcf	3,5	;RP0=0, select bank0
  8808  13F9  1303               	bcf	3,6	;RP1=0, select bank0
  8809  13FA  01CC               	clrf	_temp_average
  8810  13FB                     i1l5372:
  8811                           
  8812                           ;TEMPRETURE.c: 65: average_flag = 1 ;
  8813  13FB  01CB               	clrf	_average_flag
  8814  13FC  0ACB               	incf	_average_flag,f
  8815  13FD                     i1l5374:
  8816                           
  8817                           ;TEMPRETURE.c: 66: Ten_average_temp = 0;
  8818  13FD  3000               	movlw	0
  8819  13FE  1683               	bsf	3,5	;RP0=1, select bank3
  8820  13FF  1703               	bsf	3,6	;RP1=1, select bank3
  8821  1400  00B0               	movwf	(_Ten_average_temp+3)^(0+384)
  8822  1401  3000               	movlw	0
  8823  1402  00AF               	movwf	(_Ten_average_temp+2)^(0+384)
  8824  1403  3000               	movlw	0
  8825  1404  00AE               	movwf	(_Ten_average_temp+1)^(0+384)
  8826  1405  3000               	movlw	0
  8827  1406  00AD               	movwf	_Ten_average_temp^(0+384)
  8828  1407                     i1l448:
  8829  1407  0008               	return
  8830  1408                     __end_of_Temp_ten_average:
  8831                           
  8832                           	psect	text44
  8833  11FC                     __ptext44:	
  8834 ;; *************** function i1___lldiv *****************
  8835 ;; Defined at:
  8836 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;  divisor         4    0[COMMON] unsigned long 
  8839 ;;  dividend        4    4[COMMON] unsigned long 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  quotient        4    9[COMMON] unsigned long 
  8842 ;;  counter         1   13[COMMON] unsigned char 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  4    0[COMMON] unsigned long 
  8845 ;; Registers used:
  8846 ;;		wreg, status,2, status,0, btemp+1
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8852 ;;      Params:         8       0       0       0       0
  8853 ;;      Locals:         5       0       0       0       0
  8854 ;;      Temps:          1       0       0       0       0
  8855 ;;      Totals:        14       0       0       0       0
  8856 ;;Total ram usage:       14 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; This function calls:
  8859 ;;		Nothing
  8860 ;; This function is called by:
  8861 ;;		_Temp_ten_average
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           
  8866                           ;psect for function i1___lldiv
  8867  11FC                     i1___lldiv:
  8868  11FC                     i1l3894:	
  8869                           ;incstack = 0
  8870 ;; hardware stack exceeded
  8871                           ; Regs used in i1___lldiv: [wreg+status,2+status,0+btemp+1]
  8872                           
  8873  11FC  3000               	movlw	0
  8874  11FD  00FC               	movwf	i1___lldiv@quotient+3
  8875  11FE  3000               	movlw	0
  8876  11FF  00FB               	movwf	i1___lldiv@quotient+2
  8877  1200  3000               	movlw	0
  8878  1201  00FA               	movwf	i1___lldiv@quotient+1
  8879  1202  3000               	movlw	0
  8880  1203  00F9               	movwf	i1___lldiv@quotient
  8881  1204  0873               	movf	i1___lldiv@divisor+3,w
  8882  1205  0472               	iorwf	i1___lldiv@divisor+2,w
  8883  1206  0471               	iorwf	i1___lldiv@divisor+1,w
  8884  1207  0470               	iorwf	i1___lldiv@divisor,w
  8885  1208  1903               	skipnz
  8886  1209  2A0B               	goto	u551_21
  8887  120A  2A0C               	goto	u551_20
  8888  120B                     u551_21:
  8889  120B  2A59               	goto	i1l3916
  8890  120C                     u551_20:
  8891  120C                     i1l3896:
  8892  120C  01FD               	clrf	i1___lldiv@counter
  8893  120D  0AFD               	incf	i1___lldiv@counter,f
  8894  120E  2A1C               	goto	i1l3902
  8895  120F                     i1l3898:
  8896  120F  3001               	movlw	1
  8897  1210  00F8               	movwf	??i1___lldiv
  8898  1211                     u552_25:
  8899  1211  1003               	clrc
  8900  1212  0DF0               	rlf	i1___lldiv@divisor,f
  8901  1213  0DF1               	rlf	i1___lldiv@divisor+1,f
  8902  1214  0DF2               	rlf	i1___lldiv@divisor+2,f
  8903  1215  0DF3               	rlf	i1___lldiv@divisor+3,f
  8904  1216  0BF8               	decfsz	??i1___lldiv,f
  8905  1217  2A11               	goto	u552_25
  8906  1218                     i1l3900:
  8907  1218  3001               	movlw	1
  8908  1219  00FF               	movwf	btemp+1
  8909  121A  087F               	movf	btemp+1,w
  8910  121B  07FD               	addwf	i1___lldiv@counter,f
  8911  121C                     i1l3902:
  8912  121C  1FF3               	btfss	i1___lldiv@divisor+3,7
  8913  121D  2A1F               	goto	u553_21
  8914  121E  2A20               	goto	u553_20
  8915  121F                     u553_21:
  8916  121F  2A0F               	goto	i1l3898
  8917  1220                     u553_20:
  8918  1220                     i1l3904:
  8919  1220  3001               	movlw	1
  8920  1221  00F8               	movwf	??i1___lldiv
  8921  1222                     u554_25:
  8922  1222  1003               	clrc
  8923  1223  0DF9               	rlf	i1___lldiv@quotient,f
  8924  1224  0DFA               	rlf	i1___lldiv@quotient+1,f
  8925  1225  0DFB               	rlf	i1___lldiv@quotient+2,f
  8926  1226  0DFC               	rlf	i1___lldiv@quotient+3,f
  8927  1227  0BF8               	decfsz	??i1___lldiv,f
  8928  1228  2A22               	goto	u554_25
  8929  1229                     i1l3906:
  8930  1229  0873               	movf	i1___lldiv@divisor+3,w
  8931  122A  0277               	subwf	i1___lldiv@dividend+3,w
  8932  122B  1D03               	skipz
  8933  122C  2A37               	goto	u555_25
  8934  122D  0872               	movf	i1___lldiv@divisor+2,w
  8935  122E  0276               	subwf	i1___lldiv@dividend+2,w
  8936  122F  1D03               	skipz
  8937  1230  2A37               	goto	u555_25
  8938  1231  0871               	movf	i1___lldiv@divisor+1,w
  8939  1232  0275               	subwf	i1___lldiv@dividend+1,w
  8940  1233  1D03               	skipz
  8941  1234  2A37               	goto	u555_25
  8942  1235  0870               	movf	i1___lldiv@divisor,w
  8943  1236  0274               	subwf	i1___lldiv@dividend,w
  8944  1237                     u555_25:
  8945  1237  1C03               	skipc
  8946  1238  2A3A               	goto	u555_21
  8947  1239  2A3B               	goto	u555_20
  8948  123A                     u555_21:
  8949  123A  2A4A               	goto	i1l3912
  8950  123B                     u555_20:
  8951  123B                     i1l3908:
  8952  123B  0870               	movf	i1___lldiv@divisor,w
  8953  123C  02F4               	subwf	i1___lldiv@dividend,f
  8954  123D  0871               	movf	i1___lldiv@divisor+1,w
  8955  123E  1C03               	skipc
  8956  123F  0F71               	incfsz	i1___lldiv@divisor+1,w
  8957  1240  02F5               	subwf	i1___lldiv@dividend+1,f
  8958  1241  0872               	movf	i1___lldiv@divisor+2,w
  8959  1242  1C03               	skipc
  8960  1243  0F72               	incfsz	i1___lldiv@divisor+2,w
  8961  1244  02F6               	subwf	i1___lldiv@dividend+2,f
  8962  1245  0873               	movf	i1___lldiv@divisor+3,w
  8963  1246  1C03               	skipc
  8964  1247  0F73               	incfsz	i1___lldiv@divisor+3,w
  8965  1248  02F7               	subwf	i1___lldiv@dividend+3,f
  8966  1249                     i1l3910:
  8967  1249  1479               	bsf	i1___lldiv@quotient,0
  8968  124A                     i1l3912:
  8969  124A  3001               	movlw	1
  8970  124B                     u556_25:
  8971  124B  1003               	clrc
  8972  124C  0CF3               	rrf	i1___lldiv@divisor+3,f
  8973  124D  0CF2               	rrf	i1___lldiv@divisor+2,f
  8974  124E  0CF1               	rrf	i1___lldiv@divisor+1,f
  8975  124F  0CF0               	rrf	i1___lldiv@divisor,f
  8976  1250  3EFF               	addlw	-1
  8977  1251  1D03               	skipz
  8978  1252  2A4B               	goto	u556_25
  8979  1253                     i1l3914:
  8980  1253  3001               	movlw	1
  8981  1254  02FD               	subwf	i1___lldiv@counter,f
  8982  1255  1D03               	btfss	3,2
  8983  1256  2A58               	goto	u557_21
  8984  1257  2A59               	goto	u557_20
  8985  1258                     u557_21:
  8986  1258  2A20               	goto	i1l3904
  8987  1259                     u557_20:
  8988  1259                     i1l3916:
  8989  1259  087C               	movf	i1___lldiv@quotient+3,w
  8990  125A  00F3               	movwf	?i1___lldiv+3
  8991  125B  087B               	movf	i1___lldiv@quotient+2,w
  8992  125C  00F2               	movwf	?i1___lldiv+2
  8993  125D  087A               	movf	i1___lldiv@quotient+1,w
  8994  125E  00F1               	movwf	?i1___lldiv+1
  8995  125F  0879               	movf	i1___lldiv@quotient,w
  8996  1260  00F0               	movwf	?i1___lldiv
  8997  1261                     i1l732:
  8998  1261  0008               	return
  8999  1262                     __end_ofi1___lldiv:
  9000                           
  9001                           	psect	text45
  9002  1477                     __ptext45:	
  9003 ;; *************** function _Get_temp *****************
  9004 ;; Defined at:
  9005 ;;		line 47 in file "TEMPRETURE.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;		None
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;		None
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  1    wreg      void 
  9012 ;; Registers used:
  9013 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9019 ;;      Params:         0       0       0       0       0
  9020 ;;      Locals:         0       0       0       0       0
  9021 ;;      Temps:          0       0       0       0       0
  9022 ;;      Totals:         0       0       0       0       0
  9023 ;;Total ram usage:        0 bytes
  9024 ;; Hardware stack levels used:    1
  9025 ;; Hardware stack levels required when called:    2
  9026 ;; This function calls:
  9027 ;;		_ADC_Read
  9028 ;;		i1___fldiv
  9029 ;;		i1___flmul
  9030 ;;		i1___fltol
  9031 ;;		i1___xxtofl
  9032 ;; This function is called by:
  9033 ;;		_Tmepreture_Update
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           
  9038                           ;psect for function _Get_temp
  9039  1477                     _Get_temp:
  9040  1477                     i1l4362:	
  9041                           ;incstack = 0
  9042 ;; hardware stack exceeded
  9043                           ; Regs used in _Get_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9044                           
  9045                           
  9046                           ;TEMPRETURE.c: 49: ADC_read = ADC_Read(2);
  9047  1477  3002               	movlw	2
  9048  1478  160A  118A  20B6  160A  118A  	fcall	_ADC_Read
  9049  147D  0871               	movf	?_ADC_Read+1,w
  9050  147E  1283               	bcf	3,5	;RP0=0, select bank0
  9051  147F  1303               	bcf	3,6	;RP1=0, select bank0
  9052  1480  00C7               	movwf	_ADC_read+1
  9053  1481  0870               	movf	?_ADC_Read,w
  9054  1482  00C6               	movwf	_ADC_read
  9055  1483                     i1l4364:
  9056                           
  9057                           ;TEMPRETURE.c: 51: voltage = ADC_read * 0.0048828;
  9058  1483  303B               	movlw	59
  9059  1484  00A3               	movwf	i1___flmul@b+3
  9060  1485  309F               	movlw	159
  9061  1486  00A2               	movwf	i1___flmul@b+2
  9062  1487  30FF               	movlw	255
  9063  1488  00A1               	movwf	i1___flmul@b+1
  9064  1489  30E5               	movlw	229
  9065  148A  00A0               	movwf	i1___flmul@b
  9066  148B  0846               	movf	_ADC_read,w
  9067  148C  00F0               	movwf	i1___xxtofl@val
  9068  148D  0847               	movf	_ADC_read+1,w
  9069  148E  00F1               	movwf	i1___xxtofl@val+1
  9070  148F  01F2               	clrf	i1___xxtofl@val+2
  9071  1490  01F3               	clrf	i1___xxtofl@val+3
  9072  1491  3000               	movlw	0
  9073  1492  160A  118A  268A  160A  118A  	fcall	i1___xxtofl
  9074  1497  0873               	movf	?i1___xxtofl+3,w
  9075  1498  1283               	bcf	3,5	;RP0=0, select bank0
  9076  1499  1303               	bcf	3,6	;RP1=0, select bank0
  9077  149A  00A7               	movwf	i1___flmul@a+3
  9078  149B  0872               	movf	?i1___xxtofl+2,w
  9079  149C  00A6               	movwf	i1___flmul@a+2
  9080  149D  0871               	movf	?i1___xxtofl+1,w
  9081  149E  00A5               	movwf	i1___flmul@a+1
  9082  149F  0870               	movf	?i1___xxtofl,w
  9083  14A0  00A4               	movwf	i1___flmul@a
  9084  14A1  120A  118A  23AC  160A  118A  	fcall	i1___flmul
  9085  14A6  1283               	bcf	3,5	;RP0=0, select bank0
  9086  14A7  1303               	bcf	3,6	;RP1=0, select bank0
  9087  14A8  0823               	movf	?i1___flmul+3,w
  9088  14A9  1683               	bsf	3,5	;RP0=1, select bank3
  9089  14AA  1703               	bsf	3,6	;RP1=1, select bank3
  9090  14AB  00B4               	movwf	(_voltage+3)^(0+384)
  9091  14AC  1283               	bcf	3,5	;RP0=0, select bank0
  9092  14AD  1303               	bcf	3,6	;RP1=0, select bank0
  9093  14AE  0822               	movf	?i1___flmul+2,w
  9094  14AF  1683               	bsf	3,5	;RP0=1, select bank3
  9095  14B0  1703               	bsf	3,6	;RP1=1, select bank3
  9096  14B1  00B3               	movwf	(_voltage+2)^(0+384)
  9097  14B2  1283               	bcf	3,5	;RP0=0, select bank0
  9098  14B3  1303               	bcf	3,6	;RP1=0, select bank0
  9099  14B4  0821               	movf	?i1___flmul+1,w
  9100  14B5  1683               	bsf	3,5	;RP0=1, select bank3
  9101  14B6  1703               	bsf	3,6	;RP1=1, select bank3
  9102  14B7  00B2               	movwf	(_voltage+1)^(0+384)
  9103  14B8  1283               	bcf	3,5	;RP0=0, select bank0
  9104  14B9  1303               	bcf	3,6	;RP1=0, select bank0
  9105  14BA  0820               	movf	?i1___flmul,w
  9106  14BB  1683               	bsf	3,5	;RP0=1, select bank3
  9107  14BC  1703               	bsf	3,6	;RP1=1, select bank3
  9108  14BD  00B1               	movwf	_voltage^(0+384)
  9109  14BE                     i1l4366:
  9110                           
  9111                           ;TEMPRETURE.c: 53: Temperature = voltage / 0.01;
  9112  14BE  0834               	movf	(_voltage+3)^(0+384),w
  9113  14BF  00F7               	movwf	i1___fldiv@b+3
  9114  14C0  0833               	movf	(_voltage+2)^(0+384),w
  9115  14C1  00F6               	movwf	i1___fldiv@b+2
  9116  14C2  0832               	movf	(_voltage+1)^(0+384),w
  9117  14C3  00F5               	movwf	i1___fldiv@b+1
  9118  14C4  0831               	movf	_voltage^(0+384),w
  9119  14C5  00F4               	movwf	i1___fldiv@b
  9120  14C6  303C               	movlw	60
  9121  14C7  00F3               	movwf	i1___fldiv@a+3
  9122  14C8  3023               	movlw	35
  9123  14C9  00F2               	movwf	i1___fldiv@a+2
  9124  14CA  30D7               	movlw	215
  9125  14CB  00F1               	movwf	i1___fldiv@a+1
  9126  14CC  300A               	movlw	10
  9127  14CD  00F0               	movwf	i1___fldiv@a
  9128  14CE  120A  158A  2395  160A  118A  	fcall	i1___fldiv
  9129  14D3  0873               	movf	?i1___fldiv+3,w
  9130  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  9131  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  9132  14D6  00B0               	movwf	i1___fltol@f1+3
  9133  14D7  0872               	movf	?i1___fldiv+2,w
  9134  14D8  00AF               	movwf	i1___fltol@f1+2
  9135  14D9  0871               	movf	?i1___fldiv+1,w
  9136  14DA  00AE               	movwf	i1___fltol@f1+1
  9137  14DB  0870               	movf	?i1___fldiv,w
  9138  14DC  00AD               	movwf	i1___fltol@f1
  9139  14DD  160A  118A  24E9  160A  118A  	fcall	i1___fltol
  9140  14E2  1283               	bcf	3,5	;RP0=0, select bank0
  9141  14E3  1303               	bcf	3,6	;RP1=0, select bank0
  9142  14E4  082D               	movf	?i1___fltol,w
  9143  14E5  00FF               	movwf	btemp+1
  9144  14E6  087F               	movf	btemp+1,w
  9145  14E7  00D0               	movwf	_Temperature
  9146  14E8                     i1l444:
  9147  14E8  0008               	return
  9148  14E9                     __end_of_Get_temp:
  9149                           
  9150                           	psect	text46
  9151  168A                     __ptext46:	
  9152 ;; *************** function i1___xxtofl *****************
  9153 ;; Defined at:
  9154 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  sign            1    wreg     unsigned char 
  9157 ;;  val             4    0[COMMON] long 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  sign            1    8[COMMON] unsigned char 
  9160 ;;  arg             4   10[COMMON] unsigned long 
  9161 ;;  exp             1    9[COMMON] unsigned char 
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  4    0[COMMON] unsigned char 
  9164 ;; Registers used:
  9165 ;;		wreg, status,2, status,0, btemp+1
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9171 ;;      Params:         4       0       0       0       0
  9172 ;;      Locals:         6       0       0       0       0
  9173 ;;      Temps:          4       0       0       0       0
  9174 ;;      Totals:        14       0       0       0       0
  9175 ;;Total ram usage:       14 bytes
  9176 ;; Hardware stack levels used:    1
  9177 ;; This function calls:
  9178 ;;		Nothing
  9179 ;; This function is called by:
  9180 ;;		_Get_temp
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           
  9185                           ;psect for function i1___xxtofl
  9186  168A                     i1___xxtofl:
  9187                           
  9188                           ;incstack = 0
  9189 ;; hardware stack exceeded
  9190                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0+btemp+1]
  9191                           ;i1___xxtofl@sign stored from wreg
  9192  168A  00F8               	movwf	i1___xxtofl@sign
  9193  168B                     i1l4244:
  9194  168B  0878               	movf	i1___xxtofl@sign,w
  9195  168C  1903               	btfsc	3,2
  9196  168D  2E8F               	goto	u635_21
  9197  168E  2E90               	goto	u635_20
  9198  168F                     u635_21:
  9199  168F  2EA4               	goto	i1l4250
  9200  1690                     u635_20:
  9201  1690                     i1l4246:
  9202  1690  1FF3               	btfss	i1___xxtofl@val+3,7
  9203  1691  2E93               	goto	u636_21
  9204  1692  2E94               	goto	u636_20
  9205  1693                     u636_21:
  9206  1693  2EA4               	goto	i1l4250
  9207  1694                     u636_20:
  9208  1694                     i1l4248:
  9209  1694  0970               	comf	i1___xxtofl@val,w
  9210  1695  00FA               	movwf	i1___xxtofl@arg
  9211  1696  0971               	comf	i1___xxtofl@val+1,w
  9212  1697  00FB               	movwf	i1___xxtofl@arg+1
  9213  1698  0972               	comf	i1___xxtofl@val+2,w
  9214  1699  00FC               	movwf	i1___xxtofl@arg+2
  9215  169A  0973               	comf	i1___xxtofl@val+3,w
  9216  169B  00FD               	movwf	i1___xxtofl@arg+3
  9217  169C  0AFA               	incf	i1___xxtofl@arg,f
  9218  169D  1903               	skipnz
  9219  169E  0AFB               	incf	i1___xxtofl@arg+1,f
  9220  169F  1903               	skipnz
  9221  16A0  0AFC               	incf	i1___xxtofl@arg+2,f
  9222  16A1  1903               	skipnz
  9223  16A2  0AFD               	incf	i1___xxtofl@arg+3,f
  9224  16A3  2EAC               	goto	i1l1129
  9225  16A4                     i1l4250:
  9226  16A4  0873               	movf	i1___xxtofl@val+3,w
  9227  16A5  00FD               	movwf	i1___xxtofl@arg+3
  9228  16A6  0872               	movf	i1___xxtofl@val+2,w
  9229  16A7  00FC               	movwf	i1___xxtofl@arg+2
  9230  16A8  0871               	movf	i1___xxtofl@val+1,w
  9231  16A9  00FB               	movwf	i1___xxtofl@arg+1
  9232  16AA  0870               	movf	i1___xxtofl@val,w
  9233  16AB  00FA               	movwf	i1___xxtofl@arg
  9234  16AC                     i1l1129:
  9235  16AC  0873               	movf	i1___xxtofl@val+3,w
  9236  16AD  0472               	iorwf	i1___xxtofl@val+2,w
  9237  16AE  0471               	iorwf	i1___xxtofl@val+1,w
  9238  16AF  0470               	iorwf	i1___xxtofl@val,w
  9239  16B0  1D03               	skipz
  9240  16B1  2EB3               	goto	u637_21
  9241  16B2  2EB4               	goto	u637_20
  9242  16B3                     u637_21:
  9243  16B3  2EBD               	goto	i1l4256
  9244  16B4                     u637_20:
  9245  16B4                     i1l4252:
  9246  16B4  3000               	movlw	0
  9247  16B5  00F3               	movwf	?i1___xxtofl+3
  9248  16B6  3000               	movlw	0
  9249  16B7  00F2               	movwf	?i1___xxtofl+2
  9250  16B8  3000               	movlw	0
  9251  16B9  00F1               	movwf	?i1___xxtofl+1
  9252  16BA  3000               	movlw	0
  9253  16BB  00F0               	movwf	?i1___xxtofl
  9254  16BC  2F43               	goto	i1l1131
  9255  16BD                     i1l4256:
  9256  16BD  3096               	movlw	150
  9257  16BE  00FF               	movwf	btemp+1
  9258  16BF  087F               	movf	btemp+1,w
  9259  16C0  00F9               	movwf	i1___xxtofl@exp
  9260  16C1  2ECF               	goto	i1l4262
  9261  16C2                     i1l4258:
  9262  16C2  3001               	movlw	1
  9263  16C3  00FF               	movwf	btemp+1
  9264  16C4  087F               	movf	btemp+1,w
  9265  16C5  07F9               	addwf	i1___xxtofl@exp,f
  9266  16C6                     i1l4260:
  9267  16C6  3001               	movlw	1
  9268  16C7                     u638_25:
  9269  16C7  1003               	clrc
  9270  16C8  0CFD               	rrf	i1___xxtofl@arg+3,f
  9271  16C9  0CFC               	rrf	i1___xxtofl@arg+2,f
  9272  16CA  0CFB               	rrf	i1___xxtofl@arg+1,f
  9273  16CB  0CFA               	rrf	i1___xxtofl@arg,f
  9274  16CC  3EFF               	addlw	-1
  9275  16CD  1D03               	skipz
  9276  16CE  2EC7               	goto	u638_25
  9277  16CF                     i1l4262:
  9278  16CF  30FE               	movlw	254
  9279  16D0  057D               	andwf	i1___xxtofl@arg+3,w
  9280  16D1  1D03               	btfss	3,2
  9281  16D2  2ED4               	goto	u639_21
  9282  16D3  2ED5               	goto	u639_20
  9283  16D4                     u639_21:
  9284  16D4  2EC2               	goto	i1l4258
  9285  16D5                     u639_20:
  9286  16D5  2EF1               	goto	i1l4270
  9287  16D6                     i1l4264:
  9288  16D6  3001               	movlw	1
  9289  16D7  00FF               	movwf	btemp+1
  9290  16D8  087F               	movf	btemp+1,w
  9291  16D9  07F9               	addwf	i1___xxtofl@exp,f
  9292  16DA                     i1l4266:
  9293  16DA  3001               	movlw	1
  9294  16DB  07FA               	addwf	i1___xxtofl@arg,f
  9295  16DC  3000               	movlw	0
  9296  16DD  1803               	skipnc
  9297  16DE  3001               	movlw	1
  9298  16DF  07FB               	addwf	i1___xxtofl@arg+1,f
  9299  16E0  3000               	movlw	0
  9300  16E1  1803               	skipnc
  9301  16E2  3001               	movlw	1
  9302  16E3  07FC               	addwf	i1___xxtofl@arg+2,f
  9303  16E4  3000               	movlw	0
  9304  16E5  1803               	skipnc
  9305  16E6  3001               	movlw	1
  9306  16E7  07FD               	addwf	i1___xxtofl@arg+3,f
  9307  16E8                     i1l4268:
  9308  16E8  3001               	movlw	1
  9309  16E9                     u640_25:
  9310  16E9  1003               	clrc
  9311  16EA  0CFD               	rrf	i1___xxtofl@arg+3,f
  9312  16EB  0CFC               	rrf	i1___xxtofl@arg+2,f
  9313  16EC  0CFB               	rrf	i1___xxtofl@arg+1,f
  9314  16ED  0CFA               	rrf	i1___xxtofl@arg,f
  9315  16EE  3EFF               	addlw	-1
  9316  16EF  1D03               	skipz
  9317  16F0  2EE9               	goto	u640_25
  9318  16F1                     i1l4270:
  9319  16F1  30FF               	movlw	255
  9320  16F2  057D               	andwf	i1___xxtofl@arg+3,w
  9321  16F3  1D03               	btfss	3,2
  9322  16F4  2EF6               	goto	u641_21
  9323  16F5  2EF7               	goto	u641_20
  9324  16F6                     u641_21:
  9325  16F6  2ED6               	goto	i1l4264
  9326  16F7                     u641_20:
  9327  16F7  2F03               	goto	i1l4274
  9328  16F8                     i1l4272:
  9329  16F8  3001               	movlw	1
  9330  16F9  02F9               	subwf	i1___xxtofl@exp,f
  9331  16FA  3001               	movlw	1
  9332  16FB  00F4               	movwf	??i1___xxtofl
  9333  16FC                     u642_25:
  9334  16FC  1003               	clrc
  9335  16FD  0DFA               	rlf	i1___xxtofl@arg,f
  9336  16FE  0DFB               	rlf	i1___xxtofl@arg+1,f
  9337  16FF  0DFC               	rlf	i1___xxtofl@arg+2,f
  9338  1700  0DFD               	rlf	i1___xxtofl@arg+3,f
  9339  1701  0BF4               	decfsz	??i1___xxtofl,f
  9340  1702  2EFC               	goto	u642_25
  9341  1703                     i1l4274:
  9342  1703  1BFC               	btfsc	i1___xxtofl@arg+2,7
  9343  1704  2F06               	goto	u643_21
  9344  1705  2F07               	goto	u643_20
  9345  1706                     u643_21:
  9346  1706  2F0D               	goto	i1l1142
  9347  1707                     u643_20:
  9348  1707                     i1l4276:
  9349  1707  3002               	movlw	2
  9350  1708  0279               	subwf	i1___xxtofl@exp,w
  9351  1709  1803               	skipnc
  9352  170A  2F0C               	goto	u644_21
  9353  170B  2F0D               	goto	u644_20
  9354  170C                     u644_21:
  9355  170C  2EF8               	goto	i1l4272
  9356  170D                     u644_20:
  9357  170D                     i1l1142:
  9358  170D  1879               	btfsc	i1___xxtofl@exp,0
  9359  170E  2F10               	goto	u645_21
  9360  170F  2F11               	goto	u645_20
  9361  1710                     u645_21:
  9362  1710  2F19               	goto	i1l1143
  9363  1711                     u645_20:
  9364  1711                     i1l4278:
  9365  1711  30FF               	movlw	255
  9366  1712  05FA               	andwf	i1___xxtofl@arg,f
  9367  1713  30FF               	movlw	255
  9368  1714  05FB               	andwf	i1___xxtofl@arg+1,f
  9369  1715  307F               	movlw	127
  9370  1716  05FC               	andwf	i1___xxtofl@arg+2,f
  9371  1717  30FF               	movlw	255
  9372  1718  05FD               	andwf	i1___xxtofl@arg+3,f
  9373  1719                     i1l1143:
  9374  1719  1003               	clrc
  9375  171A  0CF9               	rrf	i1___xxtofl@exp,f
  9376  171B                     i1l4280:
  9377  171B  0879               	movf	i1___xxtofl@exp,w
  9378  171C  00F4               	movwf	??i1___xxtofl
  9379  171D  01F5               	clrf	??i1___xxtofl+1
  9380  171E  01F6               	clrf	??i1___xxtofl+2
  9381  171F  01F7               	clrf	??i1___xxtofl+3
  9382  1720  3018               	movlw	24
  9383  1721                     u646_25:
  9384  1721  1003               	clrc
  9385  1722  0DF4               	rlf	??i1___xxtofl,f
  9386  1723  0DF5               	rlf	??i1___xxtofl+1,f
  9387  1724  0DF6               	rlf	??i1___xxtofl+2,f
  9388  1725  0DF7               	rlf	??i1___xxtofl+3,f
  9389  1726                     u646_20:
  9390  1726  3EFF               	addlw	-1
  9391  1727  1D03               	skipz
  9392  1728  2F21               	goto	u646_25
  9393  1729  0874               	movf	??i1___xxtofl,w
  9394  172A  04FA               	iorwf	i1___xxtofl@arg,f
  9395  172B  0875               	movf	??i1___xxtofl+1,w
  9396  172C  04FB               	iorwf	i1___xxtofl@arg+1,f
  9397  172D  0876               	movf	??i1___xxtofl+2,w
  9398  172E  04FC               	iorwf	i1___xxtofl@arg+2,f
  9399  172F  0877               	movf	??i1___xxtofl+3,w
  9400  1730  04FD               	iorwf	i1___xxtofl@arg+3,f
  9401  1731                     i1l4282:
  9402  1731  0878               	movf	i1___xxtofl@sign,w
  9403  1732  1903               	btfsc	3,2
  9404  1733  2F35               	goto	u647_21
  9405  1734  2F36               	goto	u647_20
  9406  1735                     u647_21:
  9407  1735  2F3B               	goto	i1l4288
  9408  1736                     u647_20:
  9409  1736                     i1l4284:
  9410  1736  1FF3               	btfss	i1___xxtofl@val+3,7
  9411  1737  2F39               	goto	u648_21
  9412  1738  2F3A               	goto	u648_20
  9413  1739                     u648_21:
  9414  1739  2F3B               	goto	i1l4288
  9415  173A                     u648_20:
  9416  173A                     i1l4286:
  9417  173A  17FD               	bsf	i1___xxtofl@arg+3,7
  9418  173B                     i1l4288:
  9419  173B  087D               	movf	i1___xxtofl@arg+3,w
  9420  173C  00F3               	movwf	?i1___xxtofl+3
  9421  173D  087C               	movf	i1___xxtofl@arg+2,w
  9422  173E  00F2               	movwf	?i1___xxtofl+2
  9423  173F  087B               	movf	i1___xxtofl@arg+1,w
  9424  1740  00F1               	movwf	?i1___xxtofl+1
  9425  1741  087A               	movf	i1___xxtofl@arg,w
  9426  1742  00F0               	movwf	?i1___xxtofl
  9427  1743                     i1l1131:
  9428  1743  0008               	return
  9429  1744                     __end_ofi1___xxtofl:
  9430                           
  9431                           	psect	text47
  9432  14E9                     __ptext47:	
  9433 ;; *************** function i1___fltol *****************
  9434 ;; Defined at:
  9435 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;  f1              4   13[BANK0 ] unsigned char 
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;  exp1            1   22[BANK0 ] unsigned char 
  9440 ;;  sign1           1   21[BANK0 ] unsigned char 
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  4   13[BANK0 ] long 
  9443 ;; Registers used:
  9444 ;;		wreg, status,2, status,0, btemp+1
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9450 ;;      Params:         0       4       0       0       0
  9451 ;;      Locals:         0       2       0       0       0
  9452 ;;      Temps:          0       4       0       0       0
  9453 ;;      Totals:         0      10       0       0       0
  9454 ;;Total ram usage:       10 bytes
  9455 ;; Hardware stack levels used:    1
  9456 ;; This function calls:
  9457 ;;		Nothing
  9458 ;; This function is called by:
  9459 ;;		_Get_temp
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           
  9464                           ;psect for function i1___fltol
  9465  14E9                     i1___fltol:
  9466  14E9                     i1l3920:	
  9467                           ;incstack = 0
  9468 ;; hardware stack exceeded
  9469                           ; Regs used in i1___fltol: [wreg+status,2+status,0+btemp+1]
  9470                           
  9471  14E9  1003               	clrc
  9472  14EA  1283               	bcf	3,5	;RP0=0, select bank0
  9473  14EB  1303               	bcf	3,6	;RP1=0, select bank0
  9474  14EC  0D2F               	rlf	i1___fltol@f1+2,w
  9475  14ED  0D30               	rlf	i1___fltol@f1+3,w
  9476  14EE  00FF               	movwf	btemp+1
  9477  14EF  087F               	movf	btemp+1,w
  9478  14F0  00B6               	movwf	i1___fltol@exp1
  9479  14F1  0836               	movf	i1___fltol@exp1,w
  9480  14F2  1D03               	btfss	3,2
  9481  14F3  2CF5               	goto	u558_21
  9482  14F4  2CF6               	goto	u558_20
  9483  14F5                     u558_21:
  9484  14F5  2CFF               	goto	i1l3926
  9485  14F6                     u558_20:
  9486  14F6                     i1l3922:
  9487  14F6  3000               	movlw	0
  9488  14F7  00B0               	movwf	?i1___fltol+3
  9489  14F8  3000               	movlw	0
  9490  14F9  00AF               	movwf	?i1___fltol+2
  9491  14FA  3000               	movlw	0
  9492  14FB  00AE               	movwf	?i1___fltol+1
  9493  14FC  3000               	movlw	0
  9494  14FD  00AD               	movwf	?i1___fltol
  9495  14FE  2D64               	goto	i1l882
  9496  14FF                     i1l3926:
  9497  14FF  082D               	movf	i1___fltol@f1,w
  9498  1500  00B1               	movwf	??i1___fltol
  9499  1501  082E               	movf	i1___fltol@f1+1,w
  9500  1502  00B2               	movwf	??i1___fltol+1
  9501  1503  082F               	movf	i1___fltol@f1+2,w
  9502  1504  00B3               	movwf	??i1___fltol+2
  9503  1505  0830               	movf	i1___fltol@f1+3,w
  9504  1506  00B4               	movwf	??i1___fltol+3
  9505  1507  301F               	movlw	31
  9506  1508                     u559_25:
  9507  1508  1003               	clrc
  9508  1509  0CB4               	rrf	??i1___fltol+3,f
  9509  150A  0CB3               	rrf	??i1___fltol+2,f
  9510  150B  0CB2               	rrf	??i1___fltol+1,f
  9511  150C  0CB1               	rrf	??i1___fltol,f
  9512  150D                     u559_20:
  9513  150D  3EFF               	addlw	-1
  9514  150E  1D03               	skipz
  9515  150F  2D08               	goto	u559_25
  9516  1510  0831               	movf	??i1___fltol,w
  9517  1511  00FF               	movwf	btemp+1
  9518  1512  087F               	movf	btemp+1,w
  9519  1513  00B5               	movwf	i1___fltol@sign1
  9520  1514                     i1l3928:
  9521  1514  17AF               	bsf	i1___fltol@f1+2,7
  9522  1515                     i1l3930:
  9523  1515  30FF               	movlw	255
  9524  1516  05AD               	andwf	i1___fltol@f1,f
  9525  1517  30FF               	movlw	255
  9526  1518  05AE               	andwf	i1___fltol@f1+1,f
  9527  1519  30FF               	movlw	255
  9528  151A  05AF               	andwf	i1___fltol@f1+2,f
  9529  151B  3000               	movlw	0
  9530  151C  05B0               	andwf	i1___fltol@f1+3,f
  9531  151D                     i1l3932:
  9532  151D  3096               	movlw	150
  9533  151E  02B6               	subwf	i1___fltol@exp1,f
  9534  151F                     i1l3934:
  9535  151F  1FB6               	btfss	i1___fltol@exp1,7
  9536  1520  2D22               	goto	u560_21
  9537  1521  2D23               	goto	u560_20
  9538  1522                     u560_21:
  9539  1522  2D3D               	goto	i1l3946
  9540  1523                     u560_20:
  9541  1523                     i1l3936:
  9542  1523  0836               	movf	i1___fltol@exp1,w
  9543  1524  3A80               	xorlw	128
  9544  1525  3E97               	addlw	151
  9545  1526  1803               	skipnc
  9546  1527  2D29               	goto	u561_21
  9547  1528  2D2A               	goto	u561_20
  9548  1529                     u561_21:
  9549  1529  2D2B               	goto	i1l3942
  9550  152A                     u561_20:
  9551  152A  2CF6               	goto	i1l3922
  9552  152B                     i1l3942:
  9553  152B  3001               	movlw	1
  9554  152C                     u562_25:
  9555  152C  1003               	clrc
  9556  152D  0CB0               	rrf	i1___fltol@f1+3,f
  9557  152E  0CAF               	rrf	i1___fltol@f1+2,f
  9558  152F  0CAE               	rrf	i1___fltol@f1+1,f
  9559  1530  0CAD               	rrf	i1___fltol@f1,f
  9560  1531  3EFF               	addlw	-1
  9561  1532  1D03               	skipz
  9562  1533  2D2C               	goto	u562_25
  9563  1534                     i1l3944:
  9564  1534  3001               	movlw	1
  9565  1535  00FF               	movwf	btemp+1
  9566  1536  087F               	movf	btemp+1,w
  9567  1537  07B6               	addwf	i1___fltol@exp1,f
  9568  1538  1D03               	btfss	3,2
  9569  1539  2D3B               	goto	u563_21
  9570  153A  2D3C               	goto	u563_20
  9571  153B                     u563_21:
  9572  153B  2D2B               	goto	i1l3942
  9573  153C                     u563_20:
  9574  153C  2D54               	goto	i1l3954
  9575  153D                     i1l3946:
  9576  153D  3020               	movlw	32
  9577  153E  0236               	subwf	i1___fltol@exp1,w
  9578  153F  1C03               	skipc
  9579  1540  2D42               	goto	u564_21
  9580  1541  2D43               	goto	u564_20
  9581  1542                     u564_21:
  9582  1542  2D4F               	goto	i1l889
  9583  1543                     u564_20:
  9584  1543  2CF6               	goto	i1l3922
  9585  1544                     i1l3952:
  9586  1544  3001               	movlw	1
  9587  1545  00B1               	movwf	??i1___fltol
  9588  1546                     u565_25:
  9589  1546  1003               	clrc
  9590  1547  0DAD               	rlf	i1___fltol@f1,f
  9591  1548  0DAE               	rlf	i1___fltol@f1+1,f
  9592  1549  0DAF               	rlf	i1___fltol@f1+2,f
  9593  154A  0DB0               	rlf	i1___fltol@f1+3,f
  9594  154B  0BB1               	decfsz	??i1___fltol,f
  9595  154C  2D46               	goto	u565_25
  9596  154D  3001               	movlw	1
  9597  154E  02B6               	subwf	i1___fltol@exp1,f
  9598  154F                     i1l889:
  9599  154F  0836               	movf	i1___fltol@exp1,w
  9600  1550  1D03               	btfss	3,2
  9601  1551  2D53               	goto	u566_21
  9602  1552  2D54               	goto	u566_20
  9603  1553                     u566_21:
  9604  1553  2D44               	goto	i1l3952
  9605  1554                     u566_20:
  9606  1554                     i1l3954:
  9607  1554  0835               	movf	i1___fltol@sign1,w
  9608  1555  1903               	btfsc	3,2
  9609  1556  2D58               	goto	u567_21
  9610  1557  2D59               	goto	u567_20
  9611  1558                     u567_21:
  9612  1558  2D64               	goto	i1l892
  9613  1559                     u567_20:
  9614  1559                     i1l3956:
  9615  1559  09AD               	comf	i1___fltol@f1,f
  9616  155A  09AE               	comf	i1___fltol@f1+1,f
  9617  155B  09AF               	comf	i1___fltol@f1+2,f
  9618  155C  09B0               	comf	i1___fltol@f1+3,f
  9619  155D  0AAD               	incf	i1___fltol@f1,f
  9620  155E  1903               	skipnz
  9621  155F  0AAE               	incf	i1___fltol@f1+1,f
  9622  1560  1903               	skipnz
  9623  1561  0AAF               	incf	i1___fltol@f1+2,f
  9624  1562  1903               	skipnz
  9625  1563  0AB0               	incf	i1___fltol@f1+3,f
  9626  1564                     i1l892:
  9627  1564                     i1l882:
  9628  1564  0008               	return
  9629  1565                     __end_ofi1___fltol:
  9630                           
  9631                           	psect	text48
  9632  03AC                     __ptext48:	
  9633 ;; *************** function i1___flmul *****************
  9634 ;; Defined at:
  9635 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  b               4    0[BANK0 ] long 
  9638 ;;  a               4    4[BANK0 ] long 
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;  prod            4   20[BANK0 ] struct .
  9641 ;;  grs             4   14[BANK0 ] unsigned long 
  9642 ;;  temp            2   24[BANK0 ] struct .
  9643 ;;  bexp            1   19[BANK0 ] unsigned char 
  9644 ;;  aexp            1   18[BANK0 ] unsigned char 
  9645 ;;  sign            1   13[BANK0 ] unsigned char 
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  4    0[BANK0 ] unsigned char 
  9648 ;; Registers used:
  9649 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9655 ;;      Params:         0       8       0       0       0
  9656 ;;      Locals:         0      13       0       0       0
  9657 ;;      Temps:          0       5       0       0       0
  9658 ;;      Totals:         0      26       0       0       0
  9659 ;;Total ram usage:       26 bytes
  9660 ;; Hardware stack levels used:    1
  9661 ;; Hardware stack levels required when called:    1
  9662 ;; This function calls:
  9663 ;;		i1__Umul8_16
  9664 ;; This function is called by:
  9665 ;;		_Get_temp
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669                           
  9670                           ;psect for function i1___flmul
  9671  03AC                     i1___flmul:
  9672  03AC                     i1l4102:	
  9673                           ;incstack = 0
  9674 ;; hardware stack exceeded
  9675                           ; Regs used in i1___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9676                           
  9677  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  9678  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  9679  03AE  0823               	movf	i1___flmul@b+3,w
  9680  03AF  3980               	andlw	128
  9681  03B0  00FF               	movwf	btemp+1
  9682  03B1  087F               	movf	btemp+1,w
  9683  03B2  00AD               	movwf	i1___flmul@sign
  9684  03B3                     i1l4104:
  9685  03B3  0823               	movf	i1___flmul@b+3,w
  9686  03B4  00A8               	movwf	??i1___flmul
  9687  03B5  0728               	addwf	??i1___flmul,w
  9688  03B6  00FF               	movwf	btemp+1
  9689  03B7  087F               	movf	btemp+1,w
  9690  03B8  00B3               	movwf	i1___flmul@bexp
  9691  03B9                     i1l4106:
  9692  03B9  1FA2               	btfss	i1___flmul@b+2,7
  9693  03BA  2BBC               	goto	u598_21
  9694  03BB  2BBD               	goto	u598_20
  9695  03BC                     u598_21:
  9696  03BC  2BBE               	goto	i1l4110
  9697  03BD                     u598_20:
  9698  03BD                     i1l4108:
  9699  03BD  1433               	bsf	i1___flmul@bexp,0
  9700  03BE                     i1l4110:
  9701  03BE  0833               	movf	i1___flmul@bexp,w
  9702  03BF  1903               	btfsc	3,2
  9703  03C0  2BC2               	goto	u599_21
  9704  03C1  2BC3               	goto	u599_20
  9705  03C2                     u599_21:
  9706  03C2  2BD2               	goto	i1l4118
  9707  03C3                     u599_20:
  9708  03C3                     i1l4112:
  9709  03C3  0A33               	incf	i1___flmul@bexp,w
  9710  03C4  1D03               	btfss	3,2
  9711  03C5  2BC7               	goto	u600_21
  9712  03C6  2BC8               	goto	u600_20
  9713  03C7                     u600_21:
  9714  03C7  2BD0               	goto	i1l4116
  9715  03C8                     u600_20:
  9716  03C8                     i1l4114:
  9717  03C8  3000               	movlw	0
  9718  03C9  00A3               	movwf	i1___flmul@b+3
  9719  03CA  3000               	movlw	0
  9720  03CB  00A2               	movwf	i1___flmul@b+2
  9721  03CC  3000               	movlw	0
  9722  03CD  00A1               	movwf	i1___flmul@b+1
  9723  03CE  3000               	movlw	0
  9724  03CF  00A0               	movwf	i1___flmul@b
  9725  03D0                     i1l4116:
  9726  03D0  17A2               	bsf	i1___flmul@b+2,7
  9727  03D1  2BDA               	goto	i1l4120
  9728  03D2                     i1l4118:
  9729  03D2  3000               	movlw	0
  9730  03D3  00A3               	movwf	i1___flmul@b+3
  9731  03D4  3000               	movlw	0
  9732  03D5  00A2               	movwf	i1___flmul@b+2
  9733  03D6  3000               	movlw	0
  9734  03D7  00A1               	movwf	i1___flmul@b+1
  9735  03D8  3000               	movlw	0
  9736  03D9  00A0               	movwf	i1___flmul@b
  9737  03DA                     i1l4120:
  9738  03DA  0827               	movf	i1___flmul@a+3,w
  9739  03DB  3980               	andlw	128
  9740  03DC  00FF               	movwf	btemp+1
  9741  03DD  087F               	movf	btemp+1,w
  9742  03DE  06AD               	xorwf	i1___flmul@sign,f
  9743  03DF                     i1l4122:
  9744  03DF  0827               	movf	i1___flmul@a+3,w
  9745  03E0  00A8               	movwf	??i1___flmul
  9746  03E1  0728               	addwf	??i1___flmul,w
  9747  03E2  00FF               	movwf	btemp+1
  9748  03E3  087F               	movf	btemp+1,w
  9749  03E4  00B2               	movwf	i1___flmul@aexp
  9750  03E5                     i1l4124:
  9751  03E5  1FA6               	btfss	i1___flmul@a+2,7
  9752  03E6  2BE8               	goto	u601_21
  9753  03E7  2BE9               	goto	u601_20
  9754  03E8                     u601_21:
  9755  03E8  2BEA               	goto	i1l4128
  9756  03E9                     u601_20:
  9757  03E9                     i1l4126:
  9758  03E9  1432               	bsf	i1___flmul@aexp,0
  9759  03EA                     i1l4128:
  9760  03EA  0832               	movf	i1___flmul@aexp,w
  9761  03EB  1903               	btfsc	3,2
  9762  03EC  2BEE               	goto	u602_21
  9763  03ED  2BEF               	goto	u602_20
  9764  03EE                     u602_21:
  9765  03EE  2BFE               	goto	i1l4136
  9766  03EF                     u602_20:
  9767  03EF                     i1l4130:
  9768  03EF  0A32               	incf	i1___flmul@aexp,w
  9769  03F0  1D03               	btfss	3,2
  9770  03F1  2BF3               	goto	u603_21
  9771  03F2  2BF4               	goto	u603_20
  9772  03F3                     u603_21:
  9773  03F3  2BFC               	goto	i1l4134
  9774  03F4                     u603_20:
  9775  03F4                     i1l4132:
  9776  03F4  3000               	movlw	0
  9777  03F5  00A7               	movwf	i1___flmul@a+3
  9778  03F6  3000               	movlw	0
  9779  03F7  00A6               	movwf	i1___flmul@a+2
  9780  03F8  3000               	movlw	0
  9781  03F9  00A5               	movwf	i1___flmul@a+1
  9782  03FA  3000               	movlw	0
  9783  03FB  00A4               	movwf	i1___flmul@a
  9784  03FC                     i1l4134:
  9785  03FC  17A6               	bsf	i1___flmul@a+2,7
  9786  03FD  2C06               	goto	i1l4138
  9787  03FE                     i1l4136:
  9788  03FE  3000               	movlw	0
  9789  03FF  00A7               	movwf	i1___flmul@a+3
  9790  0400  3000               	movlw	0
  9791  0401  00A6               	movwf	i1___flmul@a+2
  9792  0402  3000               	movlw	0
  9793  0403  00A5               	movwf	i1___flmul@a+1
  9794  0404  3000               	movlw	0
  9795  0405  00A4               	movwf	i1___flmul@a
  9796  0406                     i1l4138:
  9797  0406  0832               	movf	i1___flmul@aexp,w
  9798  0407  1903               	btfsc	3,2
  9799  0408  2C0A               	goto	u604_21
  9800  0409  2C0B               	goto	u604_20
  9801  040A                     u604_21:
  9802  040A  2C10               	goto	i1l4142
  9803  040B                     u604_20:
  9804  040B                     i1l4140:
  9805  040B  0833               	movf	i1___flmul@bexp,w
  9806  040C  1D03               	btfss	3,2
  9807  040D  2C0F               	goto	u605_21
  9808  040E  2C10               	goto	u605_20
  9809  040F                     u605_21:
  9810  040F  2C19               	goto	i1l4146
  9811  0410                     u605_20:
  9812  0410                     i1l4142:
  9813  0410  3000               	movlw	0
  9814  0411  00A3               	movwf	?i1___flmul+3
  9815  0412  3000               	movlw	0
  9816  0413  00A2               	movwf	?i1___flmul+2
  9817  0414  3000               	movlw	0
  9818  0415  00A1               	movwf	?i1___flmul+1
  9819  0416  3000               	movlw	0
  9820  0417  00A0               	movwf	?i1___flmul
  9821  0418  2F0C               	goto	i1l1085
  9822  0419                     i1l4146:
  9823  0419  0820               	movf	i1___flmul@b,w
  9824  041A  00FF               	movwf	btemp+1
  9825  041B  087F               	movf	btemp+1,w
  9826  041C  00F0               	movwf	i1__Umul8_16@multiplicand
  9827  041D  0826               	movf	i1___flmul@a+2,w
  9828  041E  160A  158A  2618  120A  118A  	fcall	i1__Umul8_16
  9829  0423  0871               	movf	?i1__Umul8_16+1,w
  9830  0424  1283               	bcf	3,5	;RP0=0, select bank0
  9831  0425  1303               	bcf	3,6	;RP1=0, select bank0
  9832  0426  00B9               	movwf	i1___flmul@temp+1
  9833  0427  0870               	movf	?i1__Umul8_16,w
  9834  0428  00B8               	movwf	i1___flmul@temp
  9835  0429                     i1l4148:
  9836  0429  0838               	movf	i1___flmul@temp,w
  9837  042A  00A8               	movwf	??i1___flmul
  9838  042B  01A9               	clrf	??i1___flmul+1
  9839  042C  01AA               	clrf	??i1___flmul+2
  9840  042D  01AB               	clrf	??i1___flmul+3
  9841  042E  082B               	movf	??i1___flmul+3,w
  9842  042F  00B1               	movwf	i1___flmul@grs+3
  9843  0430  082A               	movf	??i1___flmul+2,w
  9844  0431  00B0               	movwf	i1___flmul@grs+2
  9845  0432  0829               	movf	??i1___flmul+1,w
  9846  0433  00AF               	movwf	i1___flmul@grs+1
  9847  0434  0828               	movf	??i1___flmul,w
  9848  0435  00AE               	movwf	i1___flmul@grs
  9849  0436                     i1l4150:
  9850  0436  0839               	movf	i1___flmul@temp+1,w
  9851  0437  00A8               	movwf	??i1___flmul
  9852  0438  01A9               	clrf	??i1___flmul+1
  9853  0439  01AA               	clrf	??i1___flmul+2
  9854  043A  01AB               	clrf	??i1___flmul+3
  9855  043B  082B               	movf	??i1___flmul+3,w
  9856  043C  00B7               	movwf	i1___flmul@prod+3
  9857  043D  082A               	movf	??i1___flmul+2,w
  9858  043E  00B6               	movwf	i1___flmul@prod+2
  9859  043F  0829               	movf	??i1___flmul+1,w
  9860  0440  00B5               	movwf	i1___flmul@prod+1
  9861  0441  0828               	movf	??i1___flmul,w
  9862  0442  00B4               	movwf	i1___flmul@prod
  9863  0443  0821               	movf	i1___flmul@b+1,w
  9864  0444  00FF               	movwf	btemp+1
  9865  0445  087F               	movf	btemp+1,w
  9866  0446  00F0               	movwf	i1__Umul8_16@multiplicand
  9867  0447  0825               	movf	i1___flmul@a+1,w
  9868  0448  160A  158A  2618  120A  118A  	fcall	i1__Umul8_16
  9869  044D  0871               	movf	?i1__Umul8_16+1,w
  9870  044E  1283               	bcf	3,5	;RP0=0, select bank0
  9871  044F  1303               	bcf	3,6	;RP1=0, select bank0
  9872  0450  00B9               	movwf	i1___flmul@temp+1
  9873  0451  0870               	movf	?i1__Umul8_16,w
  9874  0452  00B8               	movwf	i1___flmul@temp
  9875  0453                     i1l4152:
  9876  0453  0838               	movf	i1___flmul@temp,w
  9877  0454  00A8               	movwf	??i1___flmul
  9878  0455  01A9               	clrf	??i1___flmul+1
  9879  0456  01AA               	clrf	??i1___flmul+2
  9880  0457  01AB               	clrf	??i1___flmul+3
  9881  0458  0828               	movf	??i1___flmul,w
  9882  0459  07AE               	addwf	i1___flmul@grs,f
  9883  045A  0829               	movf	??i1___flmul+1,w
  9884  045B  1103               	clrz
  9885  045C  1803               	skipnc
  9886  045D  3E01               	addlw	1
  9887  045E  1903               	skipnz
  9888  045F  2C61               	goto	u606_21
  9889  0460  07AF               	addwf	i1___flmul@grs+1,f
  9890  0461                     u606_21:
  9891  0461  082A               	movf	??i1___flmul+2,w
  9892  0462  1103               	clrz
  9893  0463  1803               	skipnc
  9894  0464  3E01               	addlw	1
  9895  0465  1903               	skipnz
  9896  0466  2C68               	goto	u606_22
  9897  0467  07B0               	addwf	i1___flmul@grs+2,f
  9898  0468                     u606_22:
  9899  0468  082B               	movf	??i1___flmul+3,w
  9900  0469  1103               	clrz
  9901  046A  1803               	skipnc
  9902  046B  3E01               	addlw	1
  9903  046C  1903               	skipnz
  9904  046D  2C6F               	goto	u606_23
  9905  046E  07B1               	addwf	i1___flmul@grs+3,f
  9906  046F                     u606_23:
  9907  046F                     i1l4154:
  9908  046F  0839               	movf	i1___flmul@temp+1,w
  9909  0470  00A8               	movwf	??i1___flmul
  9910  0471  01A9               	clrf	??i1___flmul+1
  9911  0472  01AA               	clrf	??i1___flmul+2
  9912  0473  01AB               	clrf	??i1___flmul+3
  9913  0474  0828               	movf	??i1___flmul,w
  9914  0475  07B4               	addwf	i1___flmul@prod,f
  9915  0476  0829               	movf	??i1___flmul+1,w
  9916  0477  1103               	clrz
  9917  0478  1803               	skipnc
  9918  0479  3E01               	addlw	1
  9919  047A  1903               	skipnz
  9920  047B  2C7D               	goto	u607_21
  9921  047C  07B5               	addwf	i1___flmul@prod+1,f
  9922  047D                     u607_21:
  9923  047D  082A               	movf	??i1___flmul+2,w
  9924  047E  1103               	clrz
  9925  047F  1803               	skipnc
  9926  0480  3E01               	addlw	1
  9927  0481  1903               	skipnz
  9928  0482  2C84               	goto	u607_22
  9929  0483  07B6               	addwf	i1___flmul@prod+2,f
  9930  0484                     u607_22:
  9931  0484  082B               	movf	??i1___flmul+3,w
  9932  0485  1103               	clrz
  9933  0486  1803               	skipnc
  9934  0487  3E01               	addlw	1
  9935  0488  1903               	skipnz
  9936  0489  2C8B               	goto	u607_23
  9937  048A  07B7               	addwf	i1___flmul@prod+3,f
  9938  048B                     u607_23:
  9939  048B  0822               	movf	i1___flmul@b+2,w
  9940  048C  00FF               	movwf	btemp+1
  9941  048D  087F               	movf	btemp+1,w
  9942  048E  00F0               	movwf	i1__Umul8_16@multiplicand
  9943  048F  0824               	movf	i1___flmul@a,w
  9944  0490  160A  158A  2618  120A  118A  	fcall	i1__Umul8_16
  9945  0495  0871               	movf	?i1__Umul8_16+1,w
  9946  0496  1283               	bcf	3,5	;RP0=0, select bank0
  9947  0497  1303               	bcf	3,6	;RP1=0, select bank0
  9948  0498  00B9               	movwf	i1___flmul@temp+1
  9949  0499  0870               	movf	?i1__Umul8_16,w
  9950  049A  00B8               	movwf	i1___flmul@temp
  9951  049B                     i1l4156:
  9952  049B  0838               	movf	i1___flmul@temp,w
  9953  049C  00A8               	movwf	??i1___flmul
  9954  049D  01A9               	clrf	??i1___flmul+1
  9955  049E  01AA               	clrf	??i1___flmul+2
  9956  049F  01AB               	clrf	??i1___flmul+3
  9957  04A0  0828               	movf	??i1___flmul,w
  9958  04A1  07AE               	addwf	i1___flmul@grs,f
  9959  04A2  0829               	movf	??i1___flmul+1,w
  9960  04A3  1103               	clrz
  9961  04A4  1803               	skipnc
  9962  04A5  3E01               	addlw	1
  9963  04A6  1903               	skipnz
  9964  04A7  2CA9               	goto	u608_21
  9965  04A8  07AF               	addwf	i1___flmul@grs+1,f
  9966  04A9                     u608_21:
  9967  04A9  082A               	movf	??i1___flmul+2,w
  9968  04AA  1103               	clrz
  9969  04AB  1803               	skipnc
  9970  04AC  3E01               	addlw	1
  9971  04AD  1903               	skipnz
  9972  04AE  2CB0               	goto	u608_22
  9973  04AF  07B0               	addwf	i1___flmul@grs+2,f
  9974  04B0                     u608_22:
  9975  04B0  082B               	movf	??i1___flmul+3,w
  9976  04B1  1103               	clrz
  9977  04B2  1803               	skipnc
  9978  04B3  3E01               	addlw	1
  9979  04B4  1903               	skipnz
  9980  04B5  2CB7               	goto	u608_23
  9981  04B6  07B1               	addwf	i1___flmul@grs+3,f
  9982  04B7                     u608_23:
  9983  04B7                     i1l4158:
  9984  04B7  0839               	movf	i1___flmul@temp+1,w
  9985  04B8  00A8               	movwf	??i1___flmul
  9986  04B9  01A9               	clrf	??i1___flmul+1
  9987  04BA  01AA               	clrf	??i1___flmul+2
  9988  04BB  01AB               	clrf	??i1___flmul+3
  9989  04BC  0828               	movf	??i1___flmul,w
  9990  04BD  07B4               	addwf	i1___flmul@prod,f
  9991  04BE  0829               	movf	??i1___flmul+1,w
  9992  04BF  1103               	clrz
  9993  04C0  1803               	skipnc
  9994  04C1  3E01               	addlw	1
  9995  04C2  1903               	skipnz
  9996  04C3  2CC5               	goto	u609_21
  9997  04C4  07B5               	addwf	i1___flmul@prod+1,f
  9998  04C5                     u609_21:
  9999  04C5  082A               	movf	??i1___flmul+2,w
 10000  04C6  1103               	clrz
 10001  04C7  1803               	skipnc
 10002  04C8  3E01               	addlw	1
 10003  04C9  1903               	skipnz
 10004  04CA  2CCC               	goto	u609_22
 10005  04CB  07B6               	addwf	i1___flmul@prod+2,f
 10006  04CC                     u609_22:
 10007  04CC  082B               	movf	??i1___flmul+3,w
 10008  04CD  1103               	clrz
 10009  04CE  1803               	skipnc
 10010  04CF  3E01               	addlw	1
 10011  04D0  1903               	skipnz
 10012  04D1  2CD3               	goto	u609_23
 10013  04D2  07B7               	addwf	i1___flmul@prod+3,f
 10014  04D3                     u609_23:
 10015  04D3                     i1l4160:
 10016  04D3  3008               	movlw	8
 10017  04D4  00A8               	movwf	??i1___flmul
 10018  04D5                     u610_25:
 10019  04D5  1003               	clrc
 10020  04D6  0DAE               	rlf	i1___flmul@grs,f
 10021  04D7  0DAF               	rlf	i1___flmul@grs+1,f
 10022  04D8  0DB0               	rlf	i1___flmul@grs+2,f
 10023  04D9  0DB1               	rlf	i1___flmul@grs+3,f
 10024  04DA  0BA8               	decfsz	??i1___flmul,f
 10025  04DB  2CD5               	goto	u610_25
 10026  04DC                     i1l4162:
 10027  04DC  0821               	movf	i1___flmul@b+1,w
 10028  04DD  00FF               	movwf	btemp+1
 10029  04DE  087F               	movf	btemp+1,w
 10030  04DF  00F0               	movwf	i1__Umul8_16@multiplicand
 10031  04E0  0824               	movf	i1___flmul@a,w
 10032  04E1  160A  158A  2618  120A  118A  	fcall	i1__Umul8_16
 10033  04E6  0871               	movf	?i1__Umul8_16+1,w
 10034  04E7  1283               	bcf	3,5	;RP0=0, select bank0
 10035  04E8  1303               	bcf	3,6	;RP1=0, select bank0
 10036  04E9  00B9               	movwf	i1___flmul@temp+1
 10037  04EA  0870               	movf	?i1__Umul8_16,w
 10038  04EB  00B8               	movwf	i1___flmul@temp
 10039  04EC                     i1l4164:
 10040  04EC  0838               	movf	i1___flmul@temp,w
 10041  04ED  00A8               	movwf	??i1___flmul
 10042  04EE  0839               	movf	i1___flmul@temp+1,w
 10043  04EF  00A9               	movwf	??i1___flmul+1
 10044  04F0  01AA               	clrf	??i1___flmul+2
 10045  04F1  01AB               	clrf	??i1___flmul+3
 10046  04F2  0828               	movf	??i1___flmul,w
 10047  04F3  07AE               	addwf	i1___flmul@grs,f
 10048  04F4  0829               	movf	??i1___flmul+1,w
 10049  04F5  1103               	clrz
 10050  04F6  1803               	skipnc
 10051  04F7  3E01               	addlw	1
 10052  04F8  1903               	skipnz
 10053  04F9  2CFB               	goto	u611_21
 10054  04FA  07AF               	addwf	i1___flmul@grs+1,f
 10055  04FB                     u611_21:
 10056  04FB  082A               	movf	??i1___flmul+2,w
 10057  04FC  1103               	clrz
 10058  04FD  1803               	skipnc
 10059  04FE  3E01               	addlw	1
 10060  04FF  1903               	skipnz
 10061  0500  2D02               	goto	u611_22
 10062  0501  07B0               	addwf	i1___flmul@grs+2,f
 10063  0502                     u611_22:
 10064  0502  082B               	movf	??i1___flmul+3,w
 10065  0503  1103               	clrz
 10066  0504  1803               	skipnc
 10067  0505  3E01               	addlw	1
 10068  0506  1903               	skipnz
 10069  0507  2D09               	goto	u611_23
 10070  0508  07B1               	addwf	i1___flmul@grs+3,f
 10071  0509                     u611_23:
 10072  0509                     i1l4166:
 10073  0509  0820               	movf	i1___flmul@b,w
 10074  050A  00FF               	movwf	btemp+1
 10075  050B  087F               	movf	btemp+1,w
 10076  050C  00F0               	movwf	i1__Umul8_16@multiplicand
 10077  050D  0825               	movf	i1___flmul@a+1,w
 10078  050E  160A  158A  2618  120A  118A  	fcall	i1__Umul8_16
 10079  0513  0871               	movf	?i1__Umul8_16+1,w
 10080  0514  1283               	bcf	3,5	;RP0=0, select bank0
 10081  0515  1303               	bcf	3,6	;RP1=0, select bank0
 10082  0516  00B9               	movwf	i1___flmul@temp+1
 10083  0517  0870               	movf	?i1__Umul8_16,w
 10084  0518  00B8               	movwf	i1___flmul@temp
 10085  0519                     i1l4168:
 10086  0519  0838               	movf	i1___flmul@temp,w
 10087  051A  00A8               	movwf	??i1___flmul
 10088  051B  0839               	movf	i1___flmul@temp+1,w
 10089  051C  00A9               	movwf	??i1___flmul+1
 10090  051D  01AA               	clrf	??i1___flmul+2
 10091  051E  01AB               	clrf	??i1___flmul+3
 10092  051F  0828               	movf	??i1___flmul,w
 10093  0520  07AE               	addwf	i1___flmul@grs,f
 10094  0521  0829               	movf	??i1___flmul+1,w
 10095  0522  1103               	clrz
 10096  0523  1803               	skipnc
 10097  0524  3E01               	addlw	1
 10098  0525  1903               	skipnz
 10099  0526  2D28               	goto	u612_21
 10100  0527  07AF               	addwf	i1___flmul@grs+1,f
 10101  0528                     u612_21:
 10102  0528  082A               	movf	??i1___flmul+2,w
 10103  0529  1103               	clrz
 10104  052A  1803               	skipnc
 10105  052B  3E01               	addlw	1
 10106  052C  1903               	skipnz
 10107  052D  2D2F               	goto	u612_22
 10108  052E  07B0               	addwf	i1___flmul@grs+2,f
 10109  052F                     u612_22:
 10110  052F  082B               	movf	??i1___flmul+3,w
 10111  0530  1103               	clrz
 10112  0531  1803               	skipnc
 10113  0532  3E01               	addlw	1
 10114  0533  1903               	skipnz
 10115  0534  2D36               	goto	u612_23
 10116  0535  07B1               	addwf	i1___flmul@grs+3,f
 10117  0536                     u612_23:
 10118  0536                     i1l4170:
 10119  0536  3008               	movlw	8
 10120  0537  00A8               	movwf	??i1___flmul
 10121  0538                     u613_25:
 10122  0538  1003               	clrc
 10123  0539  0DAE               	rlf	i1___flmul@grs,f
 10124  053A  0DAF               	rlf	i1___flmul@grs+1,f
 10125  053B  0DB0               	rlf	i1___flmul@grs+2,f
 10126  053C  0DB1               	rlf	i1___flmul@grs+3,f
 10127  053D  0BA8               	decfsz	??i1___flmul,f
 10128  053E  2D38               	goto	u613_25
 10129  053F  0820               	movf	i1___flmul@b,w
 10130  0540  00FF               	movwf	btemp+1
 10131  0541  087F               	movf	btemp+1,w
 10132  0542  00F0               	movwf	i1__Umul8_16@multiplicand
 10133  0543  0824               	movf	i1___flmul@a,w
 10134  0544  160A  158A  2618  120A  118A  	fcall	i1__Umul8_16
 10135  0549  0871               	movf	?i1__Umul8_16+1,w
 10136  054A  1283               	bcf	3,5	;RP0=0, select bank0
 10137  054B  1303               	bcf	3,6	;RP1=0, select bank0
 10138  054C  00B9               	movwf	i1___flmul@temp+1
 10139  054D  0870               	movf	?i1__Umul8_16,w
 10140  054E  00B8               	movwf	i1___flmul@temp
 10141  054F                     i1l4172:
 10142  054F  0838               	movf	i1___flmul@temp,w
 10143  0550  00A8               	movwf	??i1___flmul
 10144  0551  0839               	movf	i1___flmul@temp+1,w
 10145  0552  00A9               	movwf	??i1___flmul+1
 10146  0553  01AA               	clrf	??i1___flmul+2
 10147  0554  01AB               	clrf	??i1___flmul+3
 10148  0555  0828               	movf	??i1___flmul,w
 10149  0556  07AE               	addwf	i1___flmul@grs,f
 10150  0557  0829               	movf	??i1___flmul+1,w
 10151  0558  1103               	clrz
 10152  0559  1803               	skipnc
 10153  055A  3E01               	addlw	1
 10154  055B  1903               	skipnz
 10155  055C  2D5E               	goto	u614_21
 10156  055D  07AF               	addwf	i1___flmul@grs+1,f
 10157  055E                     u614_21:
 10158  055E  082A               	movf	??i1___flmul+2,w
 10159  055F  1103               	clrz
 10160  0560  1803               	skipnc
 10161  0561  3E01               	addlw	1
 10162  0562  1903               	skipnz
 10163  0563  2D65               	goto	u614_22
 10164  0564  07B0               	addwf	i1___flmul@grs+2,f
 10165  0565                     u614_22:
 10166  0565  082B               	movf	??i1___flmul+3,w
 10167  0566  1103               	clrz
 10168  0567  1803               	skipnc
 10169  0568  3E01               	addlw	1
 10170  0569  1903               	skipnz
 10171  056A  2D6C               	goto	u614_23
 10172  056B  07B1               	addwf	i1___flmul@grs+3,f
 10173  056C                     u614_23:
 10174  056C                     i1l4174:
 10175  056C  0821               	movf	i1___flmul@b+1,w
 10176  056D  00FF               	movwf	btemp+1
 10177  056E  087F               	movf	btemp+1,w
 10178  056F  00F0               	movwf	i1__Umul8_16@multiplicand
 10179  0570  0826               	movf	i1___flmul@a+2,w
 10180  0571  160A  158A  2618  120A  118A  	fcall	i1__Umul8_16
 10181  0576  0871               	movf	?i1__Umul8_16+1,w
 10182  0577  1283               	bcf	3,5	;RP0=0, select bank0
 10183  0578  1303               	bcf	3,6	;RP1=0, select bank0
 10184  0579  00B9               	movwf	i1___flmul@temp+1
 10185  057A  0870               	movf	?i1__Umul8_16,w
 10186  057B  00B8               	movwf	i1___flmul@temp
 10187  057C  0838               	movf	i1___flmul@temp,w
 10188  057D  00A8               	movwf	??i1___flmul
 10189  057E  0839               	movf	i1___flmul@temp+1,w
 10190  057F  00A9               	movwf	??i1___flmul+1
 10191  0580  01AA               	clrf	??i1___flmul+2
 10192  0581  01AB               	clrf	??i1___flmul+3
 10193  0582  0828               	movf	??i1___flmul,w
 10194  0583  07B4               	addwf	i1___flmul@prod,f
 10195  0584  0829               	movf	??i1___flmul+1,w
 10196  0585  1103               	clrz
 10197  0586  1803               	skipnc
 10198  0587  3E01               	addlw	1
 10199  0588  1903               	skipnz
 10200  0589  2D8B               	goto	u615_21
 10201  058A  07B5               	addwf	i1___flmul@prod+1,f
 10202  058B                     u615_21:
 10203  058B  082A               	movf	??i1___flmul+2,w
 10204  058C  1103               	clrz
 10205  058D  1803               	skipnc
 10206  058E  3E01               	addlw	1
 10207  058F  1903               	skipnz
 10208  0590  2D92               	goto	u615_22
 10209  0591  07B6               	addwf	i1___flmul@prod+2,f
 10210  0592                     u615_22:
 10211  0592  082B               	movf	??i1___flmul+3,w
 10212  0593  1103               	clrz
 10213  0594  1803               	skipnc
 10214  0595  3E01               	addlw	1
 10215  0596  1903               	skipnz
 10216  0597  2D99               	goto	u615_23
 10217  0598  07B7               	addwf	i1___flmul@prod+3,f
 10218  0599                     u615_23:
 10219  0599                     i1l4176:
 10220  0599  0822               	movf	i1___flmul@b+2,w
 10221  059A  00FF               	movwf	btemp+1
 10222  059B  087F               	movf	btemp+1,w
 10223  059C  00F0               	movwf	i1__Umul8_16@multiplicand
 10224  059D  0825               	movf	i1___flmul@a+1,w
 10225  059E  160A  158A  2618  120A  118A  	fcall	i1__Umul8_16
 10226  05A3  0871               	movf	?i1__Umul8_16+1,w
 10227  05A4  1283               	bcf	3,5	;RP0=0, select bank0
 10228  05A5  1303               	bcf	3,6	;RP1=0, select bank0
 10229  05A6  00B9               	movwf	i1___flmul@temp+1
 10230  05A7  0870               	movf	?i1__Umul8_16,w
 10231  05A8  00B8               	movwf	i1___flmul@temp
 10232  05A9                     i1l4178:
 10233  05A9  0838               	movf	i1___flmul@temp,w
 10234  05AA  00A8               	movwf	??i1___flmul
 10235  05AB  0839               	movf	i1___flmul@temp+1,w
 10236  05AC  00A9               	movwf	??i1___flmul+1
 10237  05AD  01AA               	clrf	??i1___flmul+2
 10238  05AE  01AB               	clrf	??i1___flmul+3
 10239  05AF  0828               	movf	??i1___flmul,w
 10240  05B0  07B4               	addwf	i1___flmul@prod,f
 10241  05B1  0829               	movf	??i1___flmul+1,w
 10242  05B2  1103               	clrz
 10243  05B3  1803               	skipnc
 10244  05B4  3E01               	addlw	1
 10245  05B5  1903               	skipnz
 10246  05B6  2DB8               	goto	u616_21
 10247  05B7  07B5               	addwf	i1___flmul@prod+1,f
 10248  05B8                     u616_21:
 10249  05B8  082A               	movf	??i1___flmul+2,w
 10250  05B9  1103               	clrz
 10251  05BA  1803               	skipnc
 10252  05BB  3E01               	addlw	1
 10253  05BC  1903               	skipnz
 10254  05BD  2DBF               	goto	u616_22
 10255  05BE  07B6               	addwf	i1___flmul@prod+2,f
 10256  05BF                     u616_22:
 10257  05BF  082B               	movf	??i1___flmul+3,w
 10258  05C0  1103               	clrz
 10259  05C1  1803               	skipnc
 10260  05C2  3E01               	addlw	1
 10261  05C3  1903               	skipnz
 10262  05C4  2DC6               	goto	u616_23
 10263  05C5  07B7               	addwf	i1___flmul@prod+3,f
 10264  05C6                     u616_23:
 10265  05C6  0822               	movf	i1___flmul@b+2,w
 10266  05C7  00FF               	movwf	btemp+1
 10267  05C8  087F               	movf	btemp+1,w
 10268  05C9  00F0               	movwf	i1__Umul8_16@multiplicand
 10269  05CA  0826               	movf	i1___flmul@a+2,w
 10270  05CB  160A  158A  2618  120A  118A  	fcall	i1__Umul8_16
 10271  05D0  0871               	movf	?i1__Umul8_16+1,w
 10272  05D1  1283               	bcf	3,5	;RP0=0, select bank0
 10273  05D2  1303               	bcf	3,6	;RP1=0, select bank0
 10274  05D3  00B9               	movwf	i1___flmul@temp+1
 10275  05D4  0870               	movf	?i1__Umul8_16,w
 10276  05D5  00B8               	movwf	i1___flmul@temp
 10277  05D6                     i1l4180:
 10278  05D6  0838               	movf	i1___flmul@temp,w
 10279  05D7  00A8               	movwf	??i1___flmul
 10280  05D8  0839               	movf	i1___flmul@temp+1,w
 10281  05D9  00A9               	movwf	??i1___flmul+1
 10282  05DA  01AA               	clrf	??i1___flmul+2
 10283  05DB  01AB               	clrf	??i1___flmul+3
 10284  05DC  3008               	movlw	8
 10285  05DD                     u617_25:
 10286  05DD  1003               	clrc
 10287  05DE  0DA8               	rlf	??i1___flmul,f
 10288  05DF  0DA9               	rlf	??i1___flmul+1,f
 10289  05E0  0DAA               	rlf	??i1___flmul+2,f
 10290  05E1  0DAB               	rlf	??i1___flmul+3,f
 10291  05E2                     u617_20:
 10292  05E2  3EFF               	addlw	-1
 10293  05E3  1D03               	skipz
 10294  05E4  2DDD               	goto	u617_25
 10295  05E5  0828               	movf	??i1___flmul,w
 10296  05E6  07B4               	addwf	i1___flmul@prod,f
 10297  05E7  0829               	movf	??i1___flmul+1,w
 10298  05E8  1103               	clrz
 10299  05E9  1803               	skipnc
 10300  05EA  3E01               	addlw	1
 10301  05EB  1903               	skipnz
 10302  05EC  2DEE               	goto	u618_21
 10303  05ED  07B5               	addwf	i1___flmul@prod+1,f
 10304  05EE                     u618_21:
 10305  05EE  082A               	movf	??i1___flmul+2,w
 10306  05EF  1103               	clrz
 10307  05F0  1803               	skipnc
 10308  05F1  3E01               	addlw	1
 10309  05F2  1903               	skipnz
 10310  05F3  2DF5               	goto	u618_22
 10311  05F4  07B6               	addwf	i1___flmul@prod+2,f
 10312  05F5                     u618_22:
 10313  05F5  082B               	movf	??i1___flmul+3,w
 10314  05F6  1103               	clrz
 10315  05F7  1803               	skipnc
 10316  05F8  3E01               	addlw	1
 10317  05F9  1903               	skipnz
 10318  05FA  2DFC               	goto	u618_23
 10319  05FB  07B7               	addwf	i1___flmul@prod+3,f
 10320  05FC                     u618_23:
 10321  05FC                     i1l4182:
 10322  05FC  082E               	movf	i1___flmul@grs,w
 10323  05FD  00A8               	movwf	??i1___flmul
 10324  05FE  082F               	movf	i1___flmul@grs+1,w
 10325  05FF  00A9               	movwf	??i1___flmul+1
 10326  0600  0830               	movf	i1___flmul@grs+2,w
 10327  0601  00AA               	movwf	??i1___flmul+2
 10328  0602  0831               	movf	i1___flmul@grs+3,w
 10329  0603  00AB               	movwf	??i1___flmul+3
 10330  0604  3018               	movlw	24
 10331  0605                     u619_25:
 10332  0605  1003               	clrc
 10333  0606  0CAB               	rrf	??i1___flmul+3,f
 10334  0607  0CAA               	rrf	??i1___flmul+2,f
 10335  0608  0CA9               	rrf	??i1___flmul+1,f
 10336  0609  0CA8               	rrf	??i1___flmul,f
 10337  060A                     u619_20:
 10338  060A  3EFF               	addlw	-1
 10339  060B  1D03               	skipz
 10340  060C  2E05               	goto	u619_25
 10341  060D  0828               	movf	??i1___flmul,w
 10342  060E  07B4               	addwf	i1___flmul@prod,f
 10343  060F  0829               	movf	??i1___flmul+1,w
 10344  0610  1103               	clrz
 10345  0611  1803               	skipnc
 10346  0612  3E01               	addlw	1
 10347  0613  1903               	skipnz
 10348  0614  2E16               	goto	u620_21
 10349  0615  07B5               	addwf	i1___flmul@prod+1,f
 10350  0616                     u620_21:
 10351  0616  082A               	movf	??i1___flmul+2,w
 10352  0617  1103               	clrz
 10353  0618  1803               	skipnc
 10354  0619  3E01               	addlw	1
 10355  061A  1903               	skipnz
 10356  061B  2E1D               	goto	u620_22
 10357  061C  07B6               	addwf	i1___flmul@prod+2,f
 10358  061D                     u620_22:
 10359  061D  082B               	movf	??i1___flmul+3,w
 10360  061E  1103               	clrz
 10361  061F  1803               	skipnc
 10362  0620  3E01               	addlw	1
 10363  0621  1903               	skipnz
 10364  0622  2E24               	goto	u620_23
 10365  0623  07B7               	addwf	i1___flmul@prod+3,f
 10366  0624                     u620_23:
 10367  0624                     i1l4184:
 10368  0624  3008               	movlw	8
 10369  0625  00A8               	movwf	??i1___flmul
 10370  0626                     u621_25:
 10371  0626  1003               	clrc
 10372  0627  0DAE               	rlf	i1___flmul@grs,f
 10373  0628  0DAF               	rlf	i1___flmul@grs+1,f
 10374  0629  0DB0               	rlf	i1___flmul@grs+2,f
 10375  062A  0DB1               	rlf	i1___flmul@grs+3,f
 10376  062B  0BA8               	decfsz	??i1___flmul,f
 10377  062C  2E26               	goto	u621_25
 10378  062D                     i1l4186:
 10379  062D  0833               	movf	i1___flmul@bexp,w
 10380  062E  0732               	addwf	i1___flmul@aexp,w
 10381  062F  00A8               	movwf	??i1___flmul
 10382  0630  01A9               	clrf	??i1___flmul+1
 10383  0631  0DA9               	rlf	??i1___flmul+1,f
 10384  0632  0828               	movf	??i1___flmul,w
 10385  0633  3E82               	addlw	130
 10386  0634  00B8               	movwf	i1___flmul@temp
 10387  0635  0829               	movf	??i1___flmul+1,w
 10388  0636  1803               	skipnc
 10389  0637  3E01               	addlw	1
 10390  0638  3EFF               	addlw	255
 10391  0639  00B9               	movwf	i1___flmul@temp+1
 10392  063A  2E58               	goto	i1l4198
 10393  063B                     i1l4188:
 10394  063B  3001               	movlw	1
 10395  063C  00A8               	movwf	??i1___flmul
 10396  063D                     u622_25:
 10397  063D  1003               	clrc
 10398  063E  0DB4               	rlf	i1___flmul@prod,f
 10399  063F  0DB5               	rlf	i1___flmul@prod+1,f
 10400  0640  0DB6               	rlf	i1___flmul@prod+2,f
 10401  0641  0DB7               	rlf	i1___flmul@prod+3,f
 10402  0642  0BA8               	decfsz	??i1___flmul,f
 10403  0643  2E3D               	goto	u622_25
 10404  0644                     i1l4190:
 10405  0644  1FB1               	btfss	i1___flmul@grs+3,7
 10406  0645  2E47               	goto	u623_21
 10407  0646  2E48               	goto	u623_20
 10408  0647                     u623_21:
 10409  0647  2E49               	goto	i1l4194
 10410  0648                     u623_20:
 10411  0648                     i1l4192:
 10412  0648  1434               	bsf	i1___flmul@prod,0
 10413  0649                     i1l4194:
 10414  0649  3001               	movlw	1
 10415  064A  00A8               	movwf	??i1___flmul
 10416  064B                     u624_25:
 10417  064B  1003               	clrc
 10418  064C  0DAE               	rlf	i1___flmul@grs,f
 10419  064D  0DAF               	rlf	i1___flmul@grs+1,f
 10420  064E  0DB0               	rlf	i1___flmul@grs+2,f
 10421  064F  0DB1               	rlf	i1___flmul@grs+3,f
 10422  0650  0BA8               	decfsz	??i1___flmul,f
 10423  0651  2E4B               	goto	u624_25
 10424  0652                     i1l4196:
 10425  0652  30FF               	movlw	255
 10426  0653  07B8               	addwf	i1___flmul@temp,f
 10427  0654  1803               	skipnc
 10428  0655  0AB9               	incf	i1___flmul@temp+1,f
 10429  0656  30FF               	movlw	255
 10430  0657  07B9               	addwf	i1___flmul@temp+1,f
 10431  0658                     i1l4198:
 10432  0658  1FB6               	btfss	i1___flmul@prod+2,7
 10433  0659  2E5B               	goto	u625_21
 10434  065A  2E5C               	goto	u625_20
 10435  065B                     u625_21:
 10436  065B  2E3B               	goto	i1l4188
 10437  065C                     u625_20:
 10438  065C                     i1l4200:
 10439  065C  01B2               	clrf	i1___flmul@aexp
 10440  065D                     i1l4202:
 10441  065D  1FB1               	btfss	i1___flmul@grs+3,7
 10442  065E  2E60               	goto	u626_21
 10443  065F  2E61               	goto	u626_20
 10444  0660                     u626_21:
 10445  0660  2E7D               	goto	i1l4210
 10446  0661                     u626_20:
 10447  0661                     i1l4204:
 10448  0661  30FF               	movlw	255
 10449  0662  052E               	andwf	i1___flmul@grs,w
 10450  0663  00A8               	movwf	??i1___flmul
 10451  0664  30FF               	movlw	255
 10452  0665  052F               	andwf	i1___flmul@grs+1,w
 10453  0666  00A9               	movwf	??i1___flmul+1
 10454  0667  30FF               	movlw	255
 10455  0668  0530               	andwf	i1___flmul@grs+2,w
 10456  0669  00AA               	movwf	??i1___flmul+2
 10457  066A  307F               	movlw	127
 10458  066B  0531               	andwf	i1___flmul@grs+3,w
 10459  066C  00AB               	movwf	??i1___flmul+3
 10460  066D  082B               	movf	??i1___flmul+3,w
 10461  066E  042A               	iorwf	??i1___flmul+2,w
 10462  066F  0429               	iorwf	??i1___flmul+1,w
 10463  0670  0428               	iorwf	??i1___flmul,w
 10464  0671  1903               	skipnz
 10465  0672  2E74               	goto	u627_21
 10466  0673  2E75               	goto	u627_20
 10467  0674                     u627_21:
 10468  0674  2E78               	goto	i1l1091
 10469  0675                     u627_20:
 10470  0675                     i1l4206:
 10471  0675  01B2               	clrf	i1___flmul@aexp
 10472  0676  0AB2               	incf	i1___flmul@aexp,f
 10473  0677  2E7D               	goto	i1l4210
 10474  0678                     i1l1091:
 10475  0678  1C34               	btfss	i1___flmul@prod,0
 10476  0679  2E7B               	goto	u628_21
 10477  067A  2E7C               	goto	u628_20
 10478  067B                     u628_21:
 10479  067B  2E7D               	goto	i1l4210
 10480  067C                     u628_20:
 10481  067C  2E75               	goto	i1l4206
 10482  067D                     i1l4210:
 10483  067D  0832               	movf	i1___flmul@aexp,w
 10484  067E  1903               	btfsc	3,2
 10485  067F  2E81               	goto	u629_21
 10486  0680  2E82               	goto	u629_20
 10487  0681                     u629_21:
 10488  0681  2EB3               	goto	i1l4220
 10489  0682                     u629_20:
 10490  0682                     i1l4212:
 10491  0682  3001               	movlw	1
 10492  0683  07B4               	addwf	i1___flmul@prod,f
 10493  0684  3000               	movlw	0
 10494  0685  1803               	skipnc
 10495  0686  3001               	movlw	1
 10496  0687  07B5               	addwf	i1___flmul@prod+1,f
 10497  0688  3000               	movlw	0
 10498  0689  1803               	skipnc
 10499  068A  3001               	movlw	1
 10500  068B  07B6               	addwf	i1___flmul@prod+2,f
 10501  068C  3000               	movlw	0
 10502  068D  1803               	skipnc
 10503  068E  3001               	movlw	1
 10504  068F  07B7               	addwf	i1___flmul@prod+3,f
 10505  0690                     i1l4214:
 10506  0690  1C37               	btfss	i1___flmul@prod+3,0
 10507  0691  2E93               	goto	u630_21
 10508  0692  2E94               	goto	u630_20
 10509  0693                     u630_21:
 10510  0693  2EB3               	goto	i1l4220
 10511  0694                     u630_20:
 10512  0694                     i1l4216:
 10513  0694  0834               	movf	i1___flmul@prod,w
 10514  0695  00A8               	movwf	??i1___flmul
 10515  0696  0835               	movf	i1___flmul@prod+1,w
 10516  0697  00A9               	movwf	??i1___flmul+1
 10517  0698  0836               	movf	i1___flmul@prod+2,w
 10518  0699  00AA               	movwf	??i1___flmul+2
 10519  069A  0837               	movf	i1___flmul@prod+3,w
 10520  069B  00AB               	movwf	??i1___flmul+3
 10521  069C  3001               	movlw	1
 10522  069D  00AC               	movwf	??i1___flmul+4
 10523  069E                     u631_25:
 10524  069E  0D2B               	rlf	??i1___flmul+3,w
 10525  069F  0CAB               	rrf	??i1___flmul+3,f
 10526  06A0  0CAA               	rrf	??i1___flmul+2,f
 10527  06A1  0CA9               	rrf	??i1___flmul+1,f
 10528  06A2  0CA8               	rrf	??i1___flmul,f
 10529  06A3                     u631_20:
 10530  06A3  0BAC               	decfsz	??i1___flmul+4,f
 10531  06A4  2E9E               	goto	u631_25
 10532  06A5  082B               	movf	??i1___flmul+3,w
 10533  06A6  00B7               	movwf	i1___flmul@prod+3
 10534  06A7  082A               	movf	??i1___flmul+2,w
 10535  06A8  00B6               	movwf	i1___flmul@prod+2
 10536  06A9  0829               	movf	??i1___flmul+1,w
 10537  06AA  00B5               	movwf	i1___flmul@prod+1
 10538  06AB  0828               	movf	??i1___flmul,w
 10539  06AC  00B4               	movwf	i1___flmul@prod
 10540  06AD                     i1l4218:
 10541  06AD  3001               	movlw	1
 10542  06AE  07B8               	addwf	i1___flmul@temp,f
 10543  06AF  1803               	skipnc
 10544  06B0  0AB9               	incf	i1___flmul@temp+1,f
 10545  06B1  3000               	movlw	0
 10546  06B2  07B9               	addwf	i1___flmul@temp+1,f
 10547  06B3                     i1l4220:
 10548  06B3  0839               	movf	i1___flmul@temp+1,w
 10549  06B4  3A80               	xorlw	128
 10550  06B5  00FF               	movwf	btemp+1
 10551  06B6  3080               	movlw	128
 10552  06B7  027F               	subwf	btemp+1,w
 10553  06B8  1D03               	skipz
 10554  06B9  2EBC               	goto	u632_25
 10555  06BA  30FF               	movlw	255
 10556  06BB  0238               	subwf	i1___flmul@temp,w
 10557  06BC                     u632_25:
 10558  06BC  1C03               	skipc
 10559  06BD  2EBF               	goto	u632_21
 10560  06BE  2EC0               	goto	u632_20
 10561  06BF                     u632_21:
 10562  06BF  2ECB               	goto	i1l4224
 10563  06C0                     u632_20:
 10564  06C0                     i1l4222:
 10565  06C0  307F               	movlw	127
 10566  06C1  1283               	bcf	3,5	;RP0=0, select bank0
 10567  06C2  1303               	bcf	3,6	;RP1=0, select bank0
 10568  06C3  00B7               	movwf	i1___flmul@prod+3
 10569  06C4  3080               	movlw	128
 10570  06C5  00B6               	movwf	i1___flmul@prod+2
 10571  06C6  3000               	movlw	0
 10572  06C7  00B5               	movwf	i1___flmul@prod+1
 10573  06C8  3000               	movlw	0
 10574  06C9  00B4               	movwf	i1___flmul@prod
 10575  06CA  2F00               	goto	i1l1097
 10576  06CB                     i1l4224:
 10577  06CB  1283               	bcf	3,5	;RP0=0, select bank0
 10578  06CC  1303               	bcf	3,6	;RP1=0, select bank0
 10579  06CD  0839               	movf	i1___flmul@temp+1,w
 10580  06CE  3A80               	xorlw	128
 10581  06CF  00FF               	movwf	btemp+1
 10582  06D0  3080               	movlw	128
 10583  06D1  027F               	subwf	btemp+1,w
 10584  06D2  1D03               	skipz
 10585  06D3  2ED6               	goto	u633_25
 10586  06D4  3001               	movlw	1
 10587  06D5  0238               	subwf	i1___flmul@temp,w
 10588  06D6                     u633_25:
 10589  06D6  1803               	skipnc
 10590  06D7  2ED9               	goto	u633_21
 10591  06D8  2EDA               	goto	u633_20
 10592  06D9                     u633_21:
 10593  06D9  2EE6               	goto	i1l4230
 10594  06DA                     u633_20:
 10595  06DA                     i1l4226:
 10596  06DA  3000               	movlw	0
 10597  06DB  1283               	bcf	3,5	;RP0=0, select bank0
 10598  06DC  1303               	bcf	3,6	;RP1=0, select bank0
 10599  06DD  00B7               	movwf	i1___flmul@prod+3
 10600  06DE  3000               	movlw	0
 10601  06DF  00B6               	movwf	i1___flmul@prod+2
 10602  06E0  3000               	movlw	0
 10603  06E1  00B5               	movwf	i1___flmul@prod+1
 10604  06E2  3000               	movlw	0
 10605  06E3  00B4               	movwf	i1___flmul@prod
 10606  06E4                     i1l4228:
 10607  06E4  01AD               	clrf	i1___flmul@sign
 10608  06E5  2F00               	goto	i1l1097
 10609  06E6                     i1l4230:
 10610  06E6  1283               	bcf	3,5	;RP0=0, select bank0
 10611  06E7  1303               	bcf	3,6	;RP1=0, select bank0
 10612  06E8  0838               	movf	i1___flmul@temp,w
 10613  06E9  00FF               	movwf	btemp+1
 10614  06EA  087F               	movf	btemp+1,w
 10615  06EB  00B3               	movwf	i1___flmul@bexp
 10616  06EC                     i1l4232:
 10617  06EC  30FF               	movlw	255
 10618  06ED  05B4               	andwf	i1___flmul@prod,f
 10619  06EE  30FF               	movlw	255
 10620  06EF  05B5               	andwf	i1___flmul@prod+1,f
 10621  06F0  307F               	movlw	127
 10622  06F1  05B6               	andwf	i1___flmul@prod+2,f
 10623  06F2  3000               	movlw	0
 10624  06F3  05B7               	andwf	i1___flmul@prod+3,f
 10625  06F4                     i1l4234:
 10626  06F4  1C33               	btfss	i1___flmul@bexp,0
 10627  06F5  2EF7               	goto	u634_21
 10628  06F6  2EF8               	goto	u634_20
 10629  06F7                     u634_21:
 10630  06F7  2EF9               	goto	i1l4238
 10631  06F8                     u634_20:
 10632  06F8                     i1l4236:
 10633  06F8  17B6               	bsf	i1___flmul@prod+2,7
 10634  06F9                     i1l4238:
 10635  06F9  0833               	movf	i1___flmul@bexp,w
 10636  06FA  00A8               	movwf	??i1___flmul
 10637  06FB  1003               	clrc
 10638  06FC  0C28               	rrf	??i1___flmul,w
 10639  06FD  00FF               	movwf	btemp+1
 10640  06FE  087F               	movf	btemp+1,w
 10641  06FF  00B7               	movwf	i1___flmul@prod+3
 10642  0700                     i1l1097:
 10643  0700  082D               	movf	i1___flmul@sign,w
 10644  0701  00FF               	movwf	btemp+1
 10645  0702  087F               	movf	btemp+1,w
 10646  0703  04B7               	iorwf	i1___flmul@prod+3,f
 10647  0704                     i1l4240:
 10648  0704  0837               	movf	i1___flmul@prod+3,w
 10649  0705  00A3               	movwf	?i1___flmul+3
 10650  0706  0836               	movf	i1___flmul@prod+2,w
 10651  0707  00A2               	movwf	?i1___flmul+2
 10652  0708  0835               	movf	i1___flmul@prod+1,w
 10653  0709  00A1               	movwf	?i1___flmul+1
 10654  070A  0834               	movf	i1___flmul@prod,w
 10655  070B  00A0               	movwf	?i1___flmul
 10656  070C                     i1l1085:
 10657  070C  0008               	return
 10658  070D                     __end_ofi1___flmul:
 10659                           
 10660                           	psect	text49
 10661  1E18                     __ptext49:	
 10662 ;; *************** function i1__Umul8_16 *****************
 10663 ;; Defined at:
 10664 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
 10665 ;; Parameters:    Size  Location     Type
 10666 ;;  multiplier      1    wreg     unsigned char 
 10667 ;;  multiplicand    1    0[COMMON] unsigned char 
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;  multiplier      1    8[COMMON] unsigned char 
 10670 ;;  word_mpld       2    6[COMMON] unsigned int 
 10671 ;;  product         2    4[COMMON] unsigned int 
 10672 ;; Return value:  Size  Location     Type
 10673 ;;                  2    0[COMMON] unsigned int 
 10674 ;; Registers used:
 10675 ;;		wreg, status,2, status,0
 10676 ;; Tracked objects:
 10677 ;;		On entry : 0/0
 10678 ;;		On exit  : 0/0
 10679 ;;		Unchanged: 0/0
 10680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10681 ;;      Params:         2       0       0       0       0
 10682 ;;      Locals:         5       0       0       0       0
 10683 ;;      Temps:          2       0       0       0       0
 10684 ;;      Totals:         9       0       0       0       0
 10685 ;;Total ram usage:        9 bytes
 10686 ;; Hardware stack levels used:    1
 10687 ;; This function calls:
 10688 ;;		Nothing
 10689 ;; This function is called by:
 10690 ;;		i1___flmul
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           
 10695                           ;psect for function i1__Umul8_16
 10696  1E18                     i1__Umul8_16:
 10697                           
 10698                           ;incstack = 0
 10699 ;; hardware stack exceeded
 10700                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 10701                           ;i1__Umul8_16@multiplier stored from wreg
 10702  1E18  00F8               	movwf	i1__Umul8_16@multiplier
 10703  1E19                     i1l3658:
 10704  1E19  01F4               	clrf	i1__Umul8_16@product
 10705  1E1A  01F5               	clrf	i1__Umul8_16@product+1
 10706  1E1B                     i1l3660:
 10707  1E1B  0870               	movf	i1__Umul8_16@multiplicand,w
 10708  1E1C  00F2               	movwf	??i1__Umul8_16
 10709  1E1D  01F3               	clrf	??i1__Umul8_16+1
 10710  1E1E  0872               	movf	??i1__Umul8_16,w
 10711  1E1F  00F6               	movwf	i1__Umul8_16@word_mpld
 10712  1E20  0873               	movf	??i1__Umul8_16+1,w
 10713  1E21  00F7               	movwf	i1__Umul8_16@word_mpld+1
 10714  1E22                     i1l3662:
 10715  1E22  1C78               	btfss	i1__Umul8_16@multiplier,0
 10716  1E23  2E25               	goto	u502_21
 10717  1E24  2E26               	goto	u502_20
 10718  1E25                     u502_21:
 10719  1E25  2E2C               	goto	i1l1104
 10720  1E26                     u502_20:
 10721  1E26                     i1l3664:
 10722  1E26  0876               	movf	i1__Umul8_16@word_mpld,w
 10723  1E27  07F4               	addwf	i1__Umul8_16@product,f
 10724  1E28  1803               	skipnc
 10725  1E29  0AF5               	incf	i1__Umul8_16@product+1,f
 10726  1E2A  0877               	movf	i1__Umul8_16@word_mpld+1,w
 10727  1E2B  07F5               	addwf	i1__Umul8_16@product+1,f
 10728  1E2C                     i1l1104:
 10729  1E2C  3001               	movlw	1
 10730  1E2D                     u503_25:
 10731  1E2D  1003               	clrc
 10732  1E2E  0DF6               	rlf	i1__Umul8_16@word_mpld,f
 10733  1E2F  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 10734  1E30  3EFF               	addlw	-1
 10735  1E31  1D03               	skipz
 10736  1E32  2E2D               	goto	u503_25
 10737  1E33  1003               	clrc
 10738  1E34  0CF8               	rrf	i1__Umul8_16@multiplier,f
 10739  1E35                     i1l3666:
 10740  1E35  0878               	movf	i1__Umul8_16@multiplier,w
 10741  1E36  1D03               	btfss	3,2
 10742  1E37  2E39               	goto	u504_21
 10743  1E38  2E3A               	goto	u504_20
 10744  1E39                     u504_21:
 10745  1E39  2E22               	goto	i1l3662
 10746  1E3A                     u504_20:
 10747  1E3A                     i1l3668:
 10748  1E3A  0875               	movf	i1__Umul8_16@product+1,w
 10749  1E3B  00F1               	movwf	?i1__Umul8_16+1
 10750  1E3C  0874               	movf	i1__Umul8_16@product,w
 10751  1E3D  00F0               	movwf	?i1__Umul8_16
 10752  1E3E                     i1l1106:
 10753  1E3E  0008               	return
 10754  1E3F                     __end_ofi1__Umul8_16:
 10755                           
 10756                           	psect	text50
 10757  0B95                     __ptext50:	
 10758 ;; *************** function i1___fldiv *****************
 10759 ;; Defined at:
 10760 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;  a               4    0[COMMON] unsigned int 
 10763 ;;  b               4    4[COMMON] unsigned int 
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;  grs             4    7[BANK0 ] unsigned long 
 10766 ;;  rem             4    0[BANK0 ] unsigned long 
 10767 ;;  new_exp         2    5[BANK0 ] int 
 10768 ;;  aexp            1   12[BANK0 ] unsigned char 
 10769 ;;  bexp            1   11[BANK0 ] unsigned char 
 10770 ;;  sign            1    4[BANK0 ] unsigned char 
 10771 ;; Return value:  Size  Location     Type
 10772 ;;                  4    0[COMMON] unsigned char 
 10773 ;; Registers used:
 10774 ;;		wreg, status,2, status,0, btemp+1
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10780 ;;      Params:         8       0       0       0       0
 10781 ;;      Locals:         0      13       0       0       0
 10782 ;;      Temps:          5       0       0       0       0
 10783 ;;      Totals:        13      13       0       0       0
 10784 ;;Total ram usage:       26 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; This function calls:
 10787 ;;		Nothing
 10788 ;; This function is called by:
 10789 ;;		_Get_temp
 10790 ;; This function uses a non-reentrant model
 10791 ;;
 10792                           
 10793                           
 10794                           ;psect for function i1___fldiv
 10795  0B95                     i1___fldiv:
 10796  0B95                     i1l3958:	
 10797                           ;incstack = 0
 10798 ;; hardware stack exceeded
 10799                           ; Regs used in i1___fldiv: [wreg+status,2+status,0+btemp+1]
 10800                           
 10801  0B95  0877               	movf	i1___fldiv@b+3,w
 10802  0B96  3980               	andlw	128
 10803  0B97  00FF               	movwf	btemp+1
 10804  0B98  087F               	movf	btemp+1,w
 10805  0B99  1283               	bcf	3,5	;RP0=0, select bank0
 10806  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
 10807  0B9B  00A4               	movwf	i1___fldiv@sign
 10808  0B9C                     i1l3960:
 10809  0B9C  0877               	movf	i1___fldiv@b+3,w
 10810  0B9D  00F8               	movwf	??i1___fldiv
 10811  0B9E  0778               	addwf	??i1___fldiv,w
 10812  0B9F  00FF               	movwf	btemp+1
 10813  0BA0  087F               	movf	btemp+1,w
 10814  0BA1  00AB               	movwf	i1___fldiv@bexp
 10815  0BA2                     i1l3962:
 10816  0BA2  1FF6               	btfss	i1___fldiv@b+2,7
 10817  0BA3  2BA5               	goto	u568_21
 10818  0BA4  2BA6               	goto	u568_20
 10819  0BA5                     u568_21:
 10820  0BA5  2BA7               	goto	i1l3966
 10821  0BA6                     u568_20:
 10822  0BA6                     i1l3964:
 10823  0BA6  142B               	bsf	i1___fldiv@bexp,0
 10824  0BA7                     i1l3966:
 10825  0BA7  082B               	movf	i1___fldiv@bexp,w
 10826  0BA8  1903               	btfsc	3,2
 10827  0BA9  2BAB               	goto	u569_21
 10828  0BAA  2BAC               	goto	u569_20
 10829  0BAB                     u569_21:
 10830  0BAB  2BBC               	goto	i1l3976
 10831  0BAC                     u569_20:
 10832  0BAC                     i1l3968:
 10833  0BAC  0A2B               	incf	i1___fldiv@bexp,w
 10834  0BAD  1D03               	btfss	3,2
 10835  0BAE  2BB0               	goto	u570_21
 10836  0BAF  2BB1               	goto	u570_20
 10837  0BB0                     u570_21:
 10838  0BB0  2BB9               	goto	i1l3972
 10839  0BB1                     u570_20:
 10840  0BB1                     i1l3970:
 10841  0BB1  3000               	movlw	0
 10842  0BB2  00F7               	movwf	i1___fldiv@b+3
 10843  0BB3  3000               	movlw	0
 10844  0BB4  00F6               	movwf	i1___fldiv@b+2
 10845  0BB5  3000               	movlw	0
 10846  0BB6  00F5               	movwf	i1___fldiv@b+1
 10847  0BB7  3000               	movlw	0
 10848  0BB8  00F4               	movwf	i1___fldiv@b
 10849  0BB9                     i1l3972:
 10850  0BB9  17F6               	bsf	i1___fldiv@b+2,7
 10851  0BBA                     i1l3974:
 10852  0BBA  01F7               	clrf	i1___fldiv@b+3
 10853  0BBB  2BC4               	goto	i1l3978
 10854  0BBC                     i1l3976:
 10855  0BBC  3000               	movlw	0
 10856  0BBD  00F7               	movwf	i1___fldiv@b+3
 10857  0BBE  3000               	movlw	0
 10858  0BBF  00F6               	movwf	i1___fldiv@b+2
 10859  0BC0  3000               	movlw	0
 10860  0BC1  00F5               	movwf	i1___fldiv@b+1
 10861  0BC2  3000               	movlw	0
 10862  0BC3  00F4               	movwf	i1___fldiv@b
 10863  0BC4                     i1l3978:
 10864  0BC4  0873               	movf	i1___fldiv@a+3,w
 10865  0BC5  3980               	andlw	128
 10866  0BC6  00FF               	movwf	btemp+1
 10867  0BC7  087F               	movf	btemp+1,w
 10868  0BC8  06A4               	xorwf	i1___fldiv@sign,f
 10869  0BC9                     i1l3980:
 10870  0BC9  0873               	movf	i1___fldiv@a+3,w
 10871  0BCA  00F8               	movwf	??i1___fldiv
 10872  0BCB  0778               	addwf	??i1___fldiv,w
 10873  0BCC  00FF               	movwf	btemp+1
 10874  0BCD  087F               	movf	btemp+1,w
 10875  0BCE  00AC               	movwf	i1___fldiv@aexp
 10876  0BCF                     i1l3982:
 10877  0BCF  1FF2               	btfss	i1___fldiv@a+2,7
 10878  0BD0  2BD2               	goto	u571_21
 10879  0BD1  2BD3               	goto	u571_20
 10880  0BD2                     u571_21:
 10881  0BD2  2BD4               	goto	i1l3986
 10882  0BD3                     u571_20:
 10883  0BD3                     i1l3984:
 10884  0BD3  142C               	bsf	i1___fldiv@aexp,0
 10885  0BD4                     i1l3986:
 10886  0BD4  082C               	movf	i1___fldiv@aexp,w
 10887  0BD5  1903               	btfsc	3,2
 10888  0BD6  2BD8               	goto	u572_21
 10889  0BD7  2BD9               	goto	u572_20
 10890  0BD8                     u572_21:
 10891  0BD8  2BE9               	goto	i1l3996
 10892  0BD9                     u572_20:
 10893  0BD9                     i1l3988:
 10894  0BD9  0A2C               	incf	i1___fldiv@aexp,w
 10895  0BDA  1D03               	btfss	3,2
 10896  0BDB  2BDD               	goto	u573_21
 10897  0BDC  2BDE               	goto	u573_20
 10898  0BDD                     u573_21:
 10899  0BDD  2BE6               	goto	i1l3992
 10900  0BDE                     u573_20:
 10901  0BDE                     i1l3990:
 10902  0BDE  3000               	movlw	0
 10903  0BDF  00F3               	movwf	i1___fldiv@a+3
 10904  0BE0  3000               	movlw	0
 10905  0BE1  00F2               	movwf	i1___fldiv@a+2
 10906  0BE2  3000               	movlw	0
 10907  0BE3  00F1               	movwf	i1___fldiv@a+1
 10908  0BE4  3000               	movlw	0
 10909  0BE5  00F0               	movwf	i1___fldiv@a
 10910  0BE6                     i1l3992:
 10911  0BE6  17F2               	bsf	i1___fldiv@a+2,7
 10912  0BE7                     i1l3994:
 10913  0BE7  01F3               	clrf	i1___fldiv@a+3
 10914  0BE8  2BF1               	goto	i1l1045
 10915  0BE9                     i1l3996:
 10916  0BE9  3000               	movlw	0
 10917  0BEA  00F3               	movwf	i1___fldiv@a+3
 10918  0BEB  3000               	movlw	0
 10919  0BEC  00F2               	movwf	i1___fldiv@a+2
 10920  0BED  3000               	movlw	0
 10921  0BEE  00F1               	movwf	i1___fldiv@a+1
 10922  0BEF  3000               	movlw	0
 10923  0BF0  00F0               	movwf	i1___fldiv@a
 10924  0BF1                     i1l1045:
 10925  0BF1  0873               	movf	i1___fldiv@a+3,w
 10926  0BF2  0472               	iorwf	i1___fldiv@a+2,w
 10927  0BF3  0471               	iorwf	i1___fldiv@a+1,w
 10928  0BF4  0470               	iorwf	i1___fldiv@a,w
 10929  0BF5  1D03               	skipz
 10930  0BF6  2BF8               	goto	u574_21
 10931  0BF7  2BF9               	goto	u574_20
 10932  0BF8                     u574_21:
 10933  0BF8  2C12               	goto	i1l4006
 10934  0BF9                     u574_20:
 10935  0BF9                     i1l3998:
 10936  0BF9  3000               	movlw	0
 10937  0BFA  00F7               	movwf	i1___fldiv@b+3
 10938  0BFB  3000               	movlw	0
 10939  0BFC  00F6               	movwf	i1___fldiv@b+2
 10940  0BFD  3000               	movlw	0
 10941  0BFE  00F5               	movwf	i1___fldiv@b+1
 10942  0BFF  3000               	movlw	0
 10943  0C00  00F4               	movwf	i1___fldiv@b
 10944  0C01  3080               	movlw	128
 10945  0C02  04F6               	iorwf	i1___fldiv@b+2,f
 10946  0C03  307F               	movlw	127
 10947  0C04  04F7               	iorwf	i1___fldiv@b+3,f
 10948  0C05                     i1l4000:
 10949  0C05  0824               	movf	i1___fldiv@sign,w
 10950  0C06  00FF               	movwf	btemp+1
 10951  0C07  087F               	movf	btemp+1,w
 10952  0C08  04F7               	iorwf	i1___fldiv@b+3,f
 10953  0C09                     i1l4002:
 10954  0C09  0877               	movf	i1___fldiv@b+3,w
 10955  0C0A  00F3               	movwf	?i1___fldiv+3
 10956  0C0B  0876               	movf	i1___fldiv@b+2,w
 10957  0C0C  00F2               	movwf	?i1___fldiv+2
 10958  0C0D  0875               	movf	i1___fldiv@b+1,w
 10959  0C0E  00F1               	movwf	?i1___fldiv+1
 10960  0C0F  0874               	movf	i1___fldiv@b,w
 10961  0C10  00F0               	movwf	?i1___fldiv
 10962  0C11  2D77               	goto	i1l1047
 10963  0C12                     i1l4006:
 10964  0C12  082B               	movf	i1___fldiv@bexp,w
 10965  0C13  1D03               	btfss	3,2
 10966  0C14  2C16               	goto	u575_21
 10967  0C15  2C17               	goto	u575_20
 10968  0C16                     u575_21:
 10969  0C16  2C20               	goto	i1l4012
 10970  0C17                     u575_20:
 10971  0C17                     i1l4008:
 10972  0C17  3000               	movlw	0
 10973  0C18  00F3               	movwf	?i1___fldiv+3
 10974  0C19  3000               	movlw	0
 10975  0C1A  00F2               	movwf	?i1___fldiv+2
 10976  0C1B  3000               	movlw	0
 10977  0C1C  00F1               	movwf	?i1___fldiv+1
 10978  0C1D  3000               	movlw	0
 10979  0C1E  00F0               	movwf	?i1___fldiv
 10980  0C1F  2D77               	goto	i1l1047
 10981  0C20                     i1l4012:
 10982  0C20  082B               	movf	i1___fldiv@bexp,w
 10983  0C21  00F8               	movwf	??i1___fldiv
 10984  0C22  01F9               	clrf	??i1___fldiv+1
 10985  0C23  0879               	movf	??i1___fldiv+1,w
 10986  0C24  00FB               	movwf	??i1___fldiv+3
 10987  0C25  082C               	movf	i1___fldiv@aexp,w
 10988  0C26  0278               	subwf	??i1___fldiv,w
 10989  0C27  00FA               	movwf	??i1___fldiv+2
 10990  0C28  1C03               	skipc
 10991  0C29  03FB               	decf	??i1___fldiv+3,f
 10992  0C2A  087A               	movf	??i1___fldiv+2,w
 10993  0C2B  3E7F               	addlw	127
 10994  0C2C  00A5               	movwf	i1___fldiv@new_exp
 10995  0C2D  087B               	movf	??i1___fldiv+3,w
 10996  0C2E  1803               	skipnc
 10997  0C2F  3E01               	addlw	1
 10998  0C30  3E00               	addlw	0
 10999  0C31  00A6               	movwf	i1___fldiv@new_exp+1
 11000  0C32                     i1l4014:
 11001  0C32  0877               	movf	i1___fldiv@b+3,w
 11002  0C33  00A3               	movwf	i1___fldiv@rem+3
 11003  0C34  0876               	movf	i1___fldiv@b+2,w
 11004  0C35  00A2               	movwf	i1___fldiv@rem+2
 11005  0C36  0875               	movf	i1___fldiv@b+1,w
 11006  0C37  00A1               	movwf	i1___fldiv@rem+1
 11007  0C38  0874               	movf	i1___fldiv@b,w
 11008  0C39  00A0               	movwf	i1___fldiv@rem
 11009  0C3A                     i1l4016:
 11010  0C3A  3000               	movlw	0
 11011  0C3B  00F7               	movwf	i1___fldiv@b+3
 11012  0C3C  3000               	movlw	0
 11013  0C3D  00F6               	movwf	i1___fldiv@b+2
 11014  0C3E  3000               	movlw	0
 11015  0C3F  00F5               	movwf	i1___fldiv@b+1
 11016  0C40  3000               	movlw	0
 11017  0C41  00F4               	movwf	i1___fldiv@b
 11018  0C42                     i1l4018:
 11019  0C42  3000               	movlw	0
 11020  0C43  00AA               	movwf	i1___fldiv@grs+3
 11021  0C44  3000               	movlw	0
 11022  0C45  00A9               	movwf	i1___fldiv@grs+2
 11023  0C46  3000               	movlw	0
 11024  0C47  00A8               	movwf	i1___fldiv@grs+1
 11025  0C48  3000               	movlw	0
 11026  0C49  00A7               	movwf	i1___fldiv@grs
 11027  0C4A                     i1l4020:
 11028  0C4A  01AC               	clrf	i1___fldiv@aexp
 11029  0C4B  2C9C               	goto	i1l4040
 11030  0C4C                     i1l4022:
 11031  0C4C  082C               	movf	i1___fldiv@aexp,w
 11032  0C4D  1903               	btfsc	3,2
 11033  0C4E  2C50               	goto	u576_21
 11034  0C4F  2C51               	goto	u576_20
 11035  0C50                     u576_21:
 11036  0C50  2C71               	goto	i1l4032
 11037  0C51                     u576_20:
 11038  0C51                     i1l4024:
 11039  0C51  3001               	movlw	1
 11040  0C52  00F8               	movwf	??i1___fldiv
 11041  0C53                     u577_25:
 11042  0C53  1003               	clrc
 11043  0C54  0DA0               	rlf	i1___fldiv@rem,f
 11044  0C55  0DA1               	rlf	i1___fldiv@rem+1,f
 11045  0C56  0DA2               	rlf	i1___fldiv@rem+2,f
 11046  0C57  0DA3               	rlf	i1___fldiv@rem+3,f
 11047  0C58  0BF8               	decfsz	??i1___fldiv,f
 11048  0C59  2C53               	goto	u577_25
 11049  0C5A  3001               	movlw	1
 11050  0C5B  00F8               	movwf	??i1___fldiv
 11051  0C5C                     u578_25:
 11052  0C5C  1003               	clrc
 11053  0C5D  0DF4               	rlf	i1___fldiv@b,f
 11054  0C5E  0DF5               	rlf	i1___fldiv@b+1,f
 11055  0C5F  0DF6               	rlf	i1___fldiv@b+2,f
 11056  0C60  0DF7               	rlf	i1___fldiv@b+3,f
 11057  0C61  0BF8               	decfsz	??i1___fldiv,f
 11058  0C62  2C5C               	goto	u578_25
 11059  0C63                     i1l4026:
 11060  0C63  1FAA               	btfss	i1___fldiv@grs+3,7
 11061  0C64  2C66               	goto	u579_21
 11062  0C65  2C67               	goto	u579_20
 11063  0C66                     u579_21:
 11064  0C66  2C68               	goto	i1l4030
 11065  0C67                     u579_20:
 11066  0C67                     i1l4028:
 11067  0C67  1474               	bsf	i1___fldiv@b,0
 11068  0C68                     i1l4030:
 11069  0C68  3001               	movlw	1
 11070  0C69  00F8               	movwf	??i1___fldiv
 11071  0C6A                     u580_25:
 11072  0C6A  1003               	clrc
 11073  0C6B  0DA7               	rlf	i1___fldiv@grs,f
 11074  0C6C  0DA8               	rlf	i1___fldiv@grs+1,f
 11075  0C6D  0DA9               	rlf	i1___fldiv@grs+2,f
 11076  0C6E  0DAA               	rlf	i1___fldiv@grs+3,f
 11077  0C6F  0BF8               	decfsz	??i1___fldiv,f
 11078  0C70  2C6A               	goto	u580_25
 11079  0C71                     i1l4032:
 11080  0C71  0873               	movf	i1___fldiv@a+3,w
 11081  0C72  0223               	subwf	i1___fldiv@rem+3,w
 11082  0C73  1D03               	skipz
 11083  0C74  2C7F               	goto	u581_25
 11084  0C75  0872               	movf	i1___fldiv@a+2,w
 11085  0C76  0222               	subwf	i1___fldiv@rem+2,w
 11086  0C77  1D03               	skipz
 11087  0C78  2C7F               	goto	u581_25
 11088  0C79  0871               	movf	i1___fldiv@a+1,w
 11089  0C7A  0221               	subwf	i1___fldiv@rem+1,w
 11090  0C7B  1D03               	skipz
 11091  0C7C  2C7F               	goto	u581_25
 11092  0C7D  0870               	movf	i1___fldiv@a,w
 11093  0C7E  0220               	subwf	i1___fldiv@rem,w
 11094  0C7F                     u581_25:
 11095  0C7F  1C03               	skipc
 11096  0C80  2C82               	goto	u581_21
 11097  0C81  2C83               	goto	u581_20
 11098  0C82                     u581_21:
 11099  0C82  2C98               	goto	i1l4038
 11100  0C83                     u581_20:
 11101  0C83                     i1l4034:
 11102  0C83  172A               	bsf	i1___fldiv@grs+3,6
 11103  0C84                     i1l4036:
 11104  0C84  0870               	movf	i1___fldiv@a,w
 11105  0C85  02A0               	subwf	i1___fldiv@rem,f
 11106  0C86  0871               	movf	i1___fldiv@a+1,w
 11107  0C87  1C03               	skipc
 11108  0C88  0F71               	incfsz	i1___fldiv@a+1,w
 11109  0C89  2C8B               	goto	u582_25
 11110  0C8A  2C8C               	goto	u582_26
 11111  0C8B                     u582_25:
 11112  0C8B  02A1               	subwf	i1___fldiv@rem+1,f
 11113  0C8C                     u582_26:
 11114  0C8C  0872               	movf	i1___fldiv@a+2,w
 11115  0C8D  1C03               	skipc
 11116  0C8E  0F72               	incfsz	i1___fldiv@a+2,w
 11117  0C8F  2C91               	goto	u582_27
 11118  0C90  2C92               	goto	u582_28
 11119  0C91                     u582_27:
 11120  0C91  02A2               	subwf	i1___fldiv@rem+2,f
 11121  0C92                     u582_28:
 11122  0C92  0873               	movf	i1___fldiv@a+3,w
 11123  0C93  1C03               	skipc
 11124  0C94  0F73               	incfsz	i1___fldiv@a+3,w
 11125  0C95  2C97               	goto	u582_29
 11126  0C96  2C98               	goto	u582_20
 11127  0C97                     u582_29:
 11128  0C97  02A3               	subwf	i1___fldiv@rem+3,f
 11129  0C98                     u582_20:
 11130  0C98                     i1l4038:
 11131  0C98  3001               	movlw	1
 11132  0C99  00FF               	movwf	btemp+1
 11133  0C9A  087F               	movf	btemp+1,w
 11134  0C9B  07AC               	addwf	i1___fldiv@aexp,f
 11135  0C9C                     i1l4040:
 11136  0C9C  301A               	movlw	26
 11137  0C9D  022C               	subwf	i1___fldiv@aexp,w
 11138  0C9E  1C03               	skipc
 11139  0C9F  2CA1               	goto	u583_21
 11140  0CA0  2CA2               	goto	u583_20
 11141  0CA1                     u583_21:
 11142  0CA1  2C4C               	goto	i1l4022
 11143  0CA2                     u583_20:
 11144  0CA2                     i1l4042:
 11145  0CA2  0823               	movf	i1___fldiv@rem+3,w
 11146  0CA3  0422               	iorwf	i1___fldiv@rem+2,w
 11147  0CA4  0421               	iorwf	i1___fldiv@rem+1,w
 11148  0CA5  0420               	iorwf	i1___fldiv@rem,w
 11149  0CA6  1903               	skipnz
 11150  0CA7  2CA9               	goto	u584_21
 11151  0CA8  2CAA               	goto	u584_20
 11152  0CA9                     u584_21:
 11153  0CA9  2CC9               	goto	i1l4056
 11154  0CAA                     u584_20:
 11155  0CAA                     i1l4044:
 11156  0CAA  1427               	bsf	i1___fldiv@grs,0
 11157  0CAB  2CC9               	goto	i1l4056
 11158  0CAC                     i1l4046:
 11159  0CAC  3001               	movlw	1
 11160  0CAD  00F8               	movwf	??i1___fldiv
 11161  0CAE                     u585_25:
 11162  0CAE  1003               	clrc
 11163  0CAF  0DF4               	rlf	i1___fldiv@b,f
 11164  0CB0  0DF5               	rlf	i1___fldiv@b+1,f
 11165  0CB1  0DF6               	rlf	i1___fldiv@b+2,f
 11166  0CB2  0DF7               	rlf	i1___fldiv@b+3,f
 11167  0CB3  0BF8               	decfsz	??i1___fldiv,f
 11168  0CB4  2CAE               	goto	u585_25
 11169  0CB5                     i1l4048:
 11170  0CB5  1FAA               	btfss	i1___fldiv@grs+3,7
 11171  0CB6  2CB8               	goto	u586_21
 11172  0CB7  2CB9               	goto	u586_20
 11173  0CB8                     u586_21:
 11174  0CB8  2CBA               	goto	i1l4052
 11175  0CB9                     u586_20:
 11176  0CB9                     i1l4050:
 11177  0CB9  1474               	bsf	i1___fldiv@b,0
 11178  0CBA                     i1l4052:
 11179  0CBA  3001               	movlw	1
 11180  0CBB  00F8               	movwf	??i1___fldiv
 11181  0CBC                     u587_25:
 11182  0CBC  1003               	clrc
 11183  0CBD  0DA7               	rlf	i1___fldiv@grs,f
 11184  0CBE  0DA8               	rlf	i1___fldiv@grs+1,f
 11185  0CBF  0DA9               	rlf	i1___fldiv@grs+2,f
 11186  0CC0  0DAA               	rlf	i1___fldiv@grs+3,f
 11187  0CC1  0BF8               	decfsz	??i1___fldiv,f
 11188  0CC2  2CBC               	goto	u587_25
 11189  0CC3                     i1l4054:
 11190  0CC3  30FF               	movlw	255
 11191  0CC4  07A5               	addwf	i1___fldiv@new_exp,f
 11192  0CC5  1803               	skipnc
 11193  0CC6  0AA6               	incf	i1___fldiv@new_exp+1,f
 11194  0CC7  30FF               	movlw	255
 11195  0CC8  07A6               	addwf	i1___fldiv@new_exp+1,f
 11196  0CC9                     i1l4056:
 11197  0CC9  1FF6               	btfss	i1___fldiv@b+2,7
 11198  0CCA  2CCC               	goto	u588_21
 11199  0CCB  2CCD               	goto	u588_20
 11200  0CCC                     u588_21:
 11201  0CCC  2CAC               	goto	i1l4046
 11202  0CCD                     u588_20:
 11203  0CCD                     i1l4058:
 11204  0CCD  01AC               	clrf	i1___fldiv@aexp
 11205  0CCE                     i1l4060:
 11206  0CCE  1FAA               	btfss	i1___fldiv@grs+3,7
 11207  0CCF  2CD1               	goto	u589_21
 11208  0CD0  2CD2               	goto	u589_20
 11209  0CD1                     u589_21:
 11210  0CD1  2CEE               	goto	i1l4068
 11211  0CD2                     u589_20:
 11212  0CD2                     i1l4062:
 11213  0CD2  30FF               	movlw	255
 11214  0CD3  0527               	andwf	i1___fldiv@grs,w
 11215  0CD4  00F8               	movwf	??i1___fldiv
 11216  0CD5  30FF               	movlw	255
 11217  0CD6  0528               	andwf	i1___fldiv@grs+1,w
 11218  0CD7  00F9               	movwf	??i1___fldiv+1
 11219  0CD8  30FF               	movlw	255
 11220  0CD9  0529               	andwf	i1___fldiv@grs+2,w
 11221  0CDA  00FA               	movwf	??i1___fldiv+2
 11222  0CDB  307F               	movlw	127
 11223  0CDC  052A               	andwf	i1___fldiv@grs+3,w
 11224  0CDD  00FB               	movwf	??i1___fldiv+3
 11225  0CDE  087B               	movf	??i1___fldiv+3,w
 11226  0CDF  047A               	iorwf	??i1___fldiv+2,w
 11227  0CE0  0479               	iorwf	??i1___fldiv+1,w
 11228  0CE1  0478               	iorwf	??i1___fldiv,w
 11229  0CE2  1903               	skipnz
 11230  0CE3  2CE5               	goto	u590_21
 11231  0CE4  2CE6               	goto	u590_20
 11232  0CE5                     u590_21:
 11233  0CE5  2CE9               	goto	i1l1061
 11234  0CE6                     u590_20:
 11235  0CE6                     i1l4064:
 11236  0CE6  01AC               	clrf	i1___fldiv@aexp
 11237  0CE7  0AAC               	incf	i1___fldiv@aexp,f
 11238  0CE8  2CEE               	goto	i1l4068
 11239  0CE9                     i1l1061:
 11240  0CE9  1C74               	btfss	i1___fldiv@b,0
 11241  0CEA  2CEC               	goto	u591_21
 11242  0CEB  2CED               	goto	u591_20
 11243  0CEC                     u591_21:
 11244  0CEC  2CEE               	goto	i1l4068
 11245  0CED                     u591_20:
 11246  0CED  2CE6               	goto	i1l4064
 11247  0CEE                     i1l4068:
 11248  0CEE  082C               	movf	i1___fldiv@aexp,w
 11249  0CEF  1903               	btfsc	3,2
 11250  0CF0  2CF2               	goto	u592_21
 11251  0CF1  2CF3               	goto	u592_20
 11252  0CF2                     u592_21:
 11253  0CF2  2D24               	goto	i1l4078
 11254  0CF3                     u592_20:
 11255  0CF3                     i1l4070:
 11256  0CF3  3001               	movlw	1
 11257  0CF4  07F4               	addwf	i1___fldiv@b,f
 11258  0CF5  3000               	movlw	0
 11259  0CF6  1803               	skipnc
 11260  0CF7  3001               	movlw	1
 11261  0CF8  07F5               	addwf	i1___fldiv@b+1,f
 11262  0CF9  3000               	movlw	0
 11263  0CFA  1803               	skipnc
 11264  0CFB  3001               	movlw	1
 11265  0CFC  07F6               	addwf	i1___fldiv@b+2,f
 11266  0CFD  3000               	movlw	0
 11267  0CFE  1803               	skipnc
 11268  0CFF  3001               	movlw	1
 11269  0D00  07F7               	addwf	i1___fldiv@b+3,f
 11270  0D01                     i1l4072:
 11271  0D01  1C77               	btfss	i1___fldiv@b+3,0
 11272  0D02  2D04               	goto	u593_21
 11273  0D03  2D05               	goto	u593_20
 11274  0D04                     u593_21:
 11275  0D04  2D24               	goto	i1l4078
 11276  0D05                     u593_20:
 11277  0D05                     i1l4074:
 11278  0D05  0874               	movf	i1___fldiv@b,w
 11279  0D06  00F8               	movwf	??i1___fldiv
 11280  0D07  0875               	movf	i1___fldiv@b+1,w
 11281  0D08  00F9               	movwf	??i1___fldiv+1
 11282  0D09  0876               	movf	i1___fldiv@b+2,w
 11283  0D0A  00FA               	movwf	??i1___fldiv+2
 11284  0D0B  0877               	movf	i1___fldiv@b+3,w
 11285  0D0C  00FB               	movwf	??i1___fldiv+3
 11286  0D0D  3001               	movlw	1
 11287  0D0E  00FC               	movwf	??i1___fldiv+4
 11288  0D0F                     u594_25:
 11289  0D0F  0D7B               	rlf	??i1___fldiv+3,w
 11290  0D10  0CFB               	rrf	??i1___fldiv+3,f
 11291  0D11  0CFA               	rrf	??i1___fldiv+2,f
 11292  0D12  0CF9               	rrf	??i1___fldiv+1,f
 11293  0D13  0CF8               	rrf	??i1___fldiv,f
 11294  0D14                     u594_20:
 11295  0D14  0BFC               	decfsz	??i1___fldiv+4,f
 11296  0D15  2D0F               	goto	u594_25
 11297  0D16  087B               	movf	??i1___fldiv+3,w
 11298  0D17  00F7               	movwf	i1___fldiv@b+3
 11299  0D18  087A               	movf	??i1___fldiv+2,w
 11300  0D19  00F6               	movwf	i1___fldiv@b+2
 11301  0D1A  0879               	movf	??i1___fldiv+1,w
 11302  0D1B  00F5               	movwf	i1___fldiv@b+1
 11303  0D1C  0878               	movf	??i1___fldiv,w
 11304  0D1D  00F4               	movwf	i1___fldiv@b
 11305  0D1E                     i1l4076:
 11306  0D1E  3001               	movlw	1
 11307  0D1F  07A5               	addwf	i1___fldiv@new_exp,f
 11308  0D20  1803               	skipnc
 11309  0D21  0AA6               	incf	i1___fldiv@new_exp+1,f
 11310  0D22  3000               	movlw	0
 11311  0D23  07A6               	addwf	i1___fldiv@new_exp+1,f
 11312  0D24                     i1l4078:
 11313  0D24  0826               	movf	i1___fldiv@new_exp+1,w
 11314  0D25  3A80               	xorlw	128
 11315  0D26  00FF               	movwf	btemp+1
 11316  0D27  3080               	movlw	128
 11317  0D28  027F               	subwf	btemp+1,w
 11318  0D29  1D03               	skipz
 11319  0D2A  2D2D               	goto	u595_25
 11320  0D2B  30FF               	movlw	255
 11321  0D2C  0225               	subwf	i1___fldiv@new_exp,w
 11322  0D2D                     u595_25:
 11323  0D2D  1C03               	skipc
 11324  0D2E  2D30               	goto	u595_21
 11325  0D2F  2D31               	goto	u595_20
 11326  0D30                     u595_21:
 11327  0D30  2D3F               	goto	i1l4082
 11328  0D31                     u595_20:
 11329  0D31                     i1l4080:
 11330  0D31  30FF               	movlw	255
 11331  0D32  1283               	bcf	3,5	;RP0=0, select bank0
 11332  0D33  1303               	bcf	3,6	;RP1=0, select bank0
 11333  0D34  00A5               	movwf	i1___fldiv@new_exp
 11334  0D35  3000               	movlw	0
 11335  0D36  00A6               	movwf	i1___fldiv@new_exp+1
 11336  0D37  3000               	movlw	0
 11337  0D38  00F7               	movwf	i1___fldiv@b+3
 11338  0D39  3000               	movlw	0
 11339  0D3A  00F6               	movwf	i1___fldiv@b+2
 11340  0D3B  3000               	movlw	0
 11341  0D3C  00F5               	movwf	i1___fldiv@b+1
 11342  0D3D  3000               	movlw	0
 11343  0D3E  00F4               	movwf	i1___fldiv@b
 11344  0D3F                     i1l4082:
 11345  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
 11346  0D40  1303               	bcf	3,6	;RP1=0, select bank0
 11347  0D41  0826               	movf	i1___fldiv@new_exp+1,w
 11348  0D42  3A80               	xorlw	128
 11349  0D43  00FF               	movwf	btemp+1
 11350  0D44  3080               	movlw	128
 11351  0D45  027F               	subwf	btemp+1,w
 11352  0D46  1D03               	skipz
 11353  0D47  2D4A               	goto	u596_25
 11354  0D48  3001               	movlw	1
 11355  0D49  0225               	subwf	i1___fldiv@new_exp,w
 11356  0D4A                     u596_25:
 11357  0D4A  1803               	skipnc
 11358  0D4B  2D4D               	goto	u596_21
 11359  0D4C  2D4E               	goto	u596_20
 11360  0D4D                     u596_21:
 11361  0D4D  2D5B               	goto	i1l4090
 11362  0D4E                     u596_20:
 11363  0D4E                     i1l4084:
 11364  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
 11365  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
 11366  0D50  01A5               	clrf	i1___fldiv@new_exp
 11367  0D51  01A6               	clrf	i1___fldiv@new_exp+1
 11368  0D52                     i1l4086:
 11369  0D52  3000               	movlw	0
 11370  0D53  00F7               	movwf	i1___fldiv@b+3
 11371  0D54  3000               	movlw	0
 11372  0D55  00F6               	movwf	i1___fldiv@b+2
 11373  0D56  3000               	movlw	0
 11374  0D57  00F5               	movwf	i1___fldiv@b+1
 11375  0D58  3000               	movlw	0
 11376  0D59  00F4               	movwf	i1___fldiv@b
 11377  0D5A                     i1l4088:
 11378  0D5A  01A4               	clrf	i1___fldiv@sign
 11379  0D5B                     i1l4090:
 11380  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
 11381  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
 11382  0D5D  0825               	movf	i1___fldiv@new_exp,w
 11383  0D5E  00FF               	movwf	btemp+1
 11384  0D5F  087F               	movf	btemp+1,w
 11385  0D60  00AB               	movwf	i1___fldiv@bexp
 11386  0D61                     i1l4092:
 11387  0D61  1C2B               	btfss	i1___fldiv@bexp,0
 11388  0D62  2D64               	goto	u597_21
 11389  0D63  2D65               	goto	u597_20
 11390  0D64                     u597_21:
 11391  0D64  2D67               	goto	i1l4096
 11392  0D65                     u597_20:
 11393  0D65                     i1l4094:
 11394  0D65  17F6               	bsf	i1___fldiv@b+2,7
 11395  0D66  2D6B               	goto	i1l1069
 11396  0D67                     i1l4096:
 11397  0D67  307F               	movlw	127
 11398  0D68  00FF               	movwf	btemp+1
 11399  0D69  087F               	movf	btemp+1,w
 11400  0D6A  05F6               	andwf	i1___fldiv@b+2,f
 11401  0D6B                     i1l1069:
 11402  0D6B  082B               	movf	i1___fldiv@bexp,w
 11403  0D6C  00F8               	movwf	??i1___fldiv
 11404  0D6D  1003               	clrc
 11405  0D6E  0C78               	rrf	??i1___fldiv,w
 11406  0D6F  00FF               	movwf	btemp+1
 11407  0D70  087F               	movf	btemp+1,w
 11408  0D71  00F7               	movwf	i1___fldiv@b+3
 11409  0D72  0824               	movf	i1___fldiv@sign,w
 11410  0D73  00FF               	movwf	btemp+1
 11411  0D74  087F               	movf	btemp+1,w
 11412  0D75  04F7               	iorwf	i1___fldiv@b+3,f
 11413  0D76  2C09               	goto	i1l4002
 11414  0D77                     i1l1047:
 11415  0D77  0008               	return
 11416  0D78                     __end_ofi1___fldiv:
 11417                           
 11418                           	psect	text51
 11419  10B6                     __ptext51:	
 11420 ;; *************** function _ADC_Read *****************
 11421 ;; Defined at:
 11422 ;;		line 12 in file "ADC.c"
 11423 ;; Parameters:    Size  Location     Type
 11424 ;;  Channel         1    wreg     unsigned char 
 11425 ;; Auto vars:     Size  Location     Type
 11426 ;;  Channel         1    5[COMMON] unsigned char 
 11427 ;;  ret             2    3[COMMON] unsigned int 
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  2    0[COMMON] unsigned int 
 11430 ;; Registers used:
 11431 ;;		wreg, status,2, status,0
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11437 ;;      Params:         2       0       0       0       0
 11438 ;;      Locals:         3       0       0       0       0
 11439 ;;      Temps:          1       0       0       0       0
 11440 ;;      Totals:         6       0       0       0       0
 11441 ;;Total ram usage:        6 bytes
 11442 ;; Hardware stack levels used:    1
 11443 ;; This function calls:
 11444 ;;		Nothing
 11445 ;; This function is called by:
 11446 ;;		_Get_temp
 11447 ;; This function uses a non-reentrant model
 11448 ;;
 11449                           
 11450                           
 11451                           ;psect for function _ADC_Read
 11452  10B6                     _ADC_Read:
 11453                           
 11454                           ;incstack = 0
 11455 ;; hardware stack exceeded
 11456                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
 11457                           ;ADC_Read@Channel stored from wreg
 11458  10B6  00F5               	movwf	ADC_Read@Channel
 11459  10B7                     i1l3688:
 11460  10B7                     i1l3690:
 11461                           
 11462                           ;ADC.c: 15: (ADON = 1);
 11463  10B7  1283               	bcf	3,5	;RP0=0, select bank0
 11464  10B8  1303               	bcf	3,6	;RP1=0, select bank0
 11465  10B9  141F               	bsf	31,0	;volatile
 11466  10BA                     i1l3692:
 11467                           
 11468                           ;ADC.c: 16: (ADFM = 1);
 11469  10BA  1683               	bsf	3,5	;RP0=1, select bank1
 11470  10BB  1303               	bcf	3,6	;RP1=0, select bank1
 11471  10BC  179F               	bsf	31,7	;volatile
 11472  10BD                     i1l3694:
 11473                           
 11474                           ;ADC.c: 17: (CHS2 = ((Channel) & 0x4 ) >> 2); (CHS1 = ((Channel) & 0x2 ) >> 1); (CHS0 = 
      +                          ((Channel) & 0x1 ) >> 0);;
 11475  10BD  0875               	movf	ADC_Read@Channel,w
 11476  10BE  00F2               	movwf	??_ADC_Read
 11477  10BF  3002               	movlw	2
 11478  10C0                     u507_25:
 11479  10C0  1003               	clrc
 11480  10C1  0CF2               	rrf	??_ADC_Read,f
 11481  10C2  3EFF               	addlw	-1
 11482  10C3  1D03               	skipz
 11483  10C4  28C0               	goto	u507_25
 11484  10C5  1872               	btfsc	??_ADC_Read,0
 11485  10C6  28C8               	goto	u508_21
 11486  10C7  28CC               	goto	u508_20
 11487  10C8                     u508_21:
 11488  10C8  1283               	bcf	3,5	;RP0=0, select bank0
 11489  10C9  1303               	bcf	3,6	;RP1=0, select bank0
 11490  10CA  169F               	bsf	31,5	;volatile
 11491  10CB  28CF               	goto	u509_24
 11492  10CC                     u508_20:
 11493  10CC  1283               	bcf	3,5	;RP0=0, select bank0
 11494  10CD  1303               	bcf	3,6	;RP1=0, select bank0
 11495  10CE  129F               	bcf	31,5	;volatile
 11496  10CF                     u509_24:
 11497  10CF                     i1l3696:
 11498  10CF  0875               	movf	ADC_Read@Channel,w
 11499  10D0  00F2               	movwf	??_ADC_Read
 11500  10D1  3001               	movlw	1
 11501  10D2                     u510_25:
 11502  10D2  1003               	clrc
 11503  10D3  0CF2               	rrf	??_ADC_Read,f
 11504  10D4  3EFF               	addlw	-1
 11505  10D5  1D03               	skipz
 11506  10D6  28D2               	goto	u510_25
 11507  10D7  1872               	btfsc	??_ADC_Read,0
 11508  10D8  28DA               	goto	u511_21
 11509  10D9  28DE               	goto	u511_20
 11510  10DA                     u511_21:
 11511  10DA  1283               	bcf	3,5	;RP0=0, select bank0
 11512  10DB  1303               	bcf	3,6	;RP1=0, select bank0
 11513  10DC  161F               	bsf	31,4	;volatile
 11514  10DD  28E1               	goto	u512_24
 11515  10DE                     u511_20:
 11516  10DE  1283               	bcf	3,5	;RP0=0, select bank0
 11517  10DF  1303               	bcf	3,6	;RP1=0, select bank0
 11518  10E0  121F               	bcf	31,4	;volatile
 11519  10E1                     u512_24:
 11520  10E1                     i1l3698:
 11521  10E1  1875               	btfsc	ADC_Read@Channel,0
 11522  10E2  28E4               	goto	u513_21
 11523  10E3  28E8               	goto	u513_20
 11524  10E4                     u513_21:
 11525  10E4  1283               	bcf	3,5	;RP0=0, select bank0
 11526  10E5  1303               	bcf	3,6	;RP1=0, select bank0
 11527  10E6  159F               	bsf	31,3	;volatile
 11528  10E7  28EB               	goto	u514_24
 11529  10E8                     u513_20:
 11530  10E8  1283               	bcf	3,5	;RP0=0, select bank0
 11531  10E9  1303               	bcf	3,6	;RP1=0, select bank0
 11532  10EA  119F               	bcf	31,3	;volatile
 11533  10EB                     u514_24:
 11534  10EB                     i1l3700:
 11535                           
 11536                           ;ADC.c: 18: (GO = 1);
 11537  10EB  151F               	bsf	31,2	;volatile
 11538  10EC                     i1l126:	
 11539                           ;ADC.c: 19: while(GO == 1);
 11540                           
 11541  10EC  191F               	btfsc	31,2	;volatile
 11542  10ED  28EF               	goto	u515_21
 11543  10EE  28F0               	goto	u515_20
 11544  10EF                     u515_21:
 11545  10EF  28EC               	goto	i1l126
 11546  10F0                     u515_20:
 11547  10F0                     i1l3702:
 11548                           
 11549                           ;ADC.c: 20: ret = (((uint16_t)ADRESH << 8) | ADRESL);
 11550  10F0  081E               	movf	30,w	;volatile
 11551  10F1  00F4               	movwf	ADC_Read@ret+1
 11552  10F2  1683               	bsf	3,5	;RP0=1, select bank1
 11553  10F3  1303               	bcf	3,6	;RP1=0, select bank1
 11554  10F4  081E               	movf	30,w	;volatile
 11555  10F5  00F3               	movwf	ADC_Read@ret
 11556  10F6                     i1l3704:
 11557                           
 11558                           ;ADC.c: 21: (ADON = 0);
 11559  10F6  1283               	bcf	3,5	;RP0=0, select bank0
 11560  10F7  1303               	bcf	3,6	;RP1=0, select bank0
 11561  10F8  101F               	bcf	31,0	;volatile
 11562                           
 11563                           ;ADC.c: 22: return ret;
 11564  10F9  0874               	movf	ADC_Read@ret+1,w
 11565  10FA  00F1               	movwf	?_ADC_Read+1
 11566  10FB  0873               	movf	ADC_Read@ret,w
 11567  10FC  00F0               	movwf	?_ADC_Read
 11568  10FD                     i1l129:
 11569  10FD  0008               	return
 11570  10FE                     __end_of_ADC_Read:
 11571                           
 11572                           	psect	text52
 11573  085B                     __ptext52:	
 11574 ;; *************** function _SW_Update *****************
 11575 ;; Defined at:
 11576 ;;		line 44 in file "SW.c"
 11577 ;; Parameters:    Size  Location     Type
 11578 ;;		None
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;  index           1    4[COMMON] unsigned char 
 11581 ;; Return value:  Size  Location     Type
 11582 ;;                  1    wreg      void 
 11583 ;; Registers used:
 11584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11585 ;; Tracked objects:
 11586 ;;		On entry : 0/0
 11587 ;;		On exit  : 0/0
 11588 ;;		Unchanged: 0/0
 11589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11590 ;;      Params:         0       0       0       0       0
 11591 ;;      Locals:         1       0       0       0       0
 11592 ;;      Temps:          1       0       0       0       0
 11593 ;;      Totals:         2       0       0       0       0
 11594 ;;Total ram usage:        2 bytes
 11595 ;; Hardware stack levels used:    1
 11596 ;; Hardware stack levels required when called:    1
 11597 ;; This function calls:
 11598 ;;		i1___bmul
 11599 ;; This function is called by:
 11600 ;;		_TMR_Update
 11601 ;; This function uses a non-reentrant model
 11602 ;;
 11603                           
 11604                           
 11605                           ;psect for function _SW_Update
 11606  085B                     _SW_Update:
 11607  085B                     i1l5454:	
 11608                           ;incstack = 0
 11609                           ; Regs used in _SW_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11610                           
 11611  085B                     i1l5456:
 11612                           
 11613                           ;SW.c: 48: SW_UPDATE +=(1);
 11614  085B  3001               	movlw	1
 11615  085C  00FF               	movwf	btemp+1
 11616  085D  087F               	movf	btemp+1,w
 11617  085E  1283               	bcf	3,5	;RP0=0, select bank0
 11618  085F  1303               	bcf	3,6	;RP1=0, select bank0
 11619  0860  07CD               	addwf	SW_Update@SW_UPDATE,f
 11620  0861                     i1l5458:
 11621                           
 11622                           ;SW.c: 50: if(SW_UPDATE != (2) )
 11623  0861  3002               	movlw	2
 11624  0862  064D               	xorwf	SW_Update@SW_UPDATE,w
 11625  0863  1903               	btfsc	3,2
 11626  0864  2866               	goto	u874_21
 11627  0865  2867               	goto	u874_20
 11628  0866                     u874_21:
 11629  0866  2868               	goto	i1l5462
 11630  0867                     u874_20:
 11631  0867  29B7               	goto	i1l387
 11632  0868                     i1l5462:
 11633                           
 11634                           ;SW.c: 53: };SW.c: 54: SW_UPDATE = 0;
 11635  0868  01CD               	clrf	SW_Update@SW_UPDATE
 11636                           
 11637                           ;SW.c: 56: for(index = SW_SET ; index < (3) ; index++)
 11638  0869  01F4               	clrf	SW_Update@index
 11639  086A                     i1l5468:
 11640                           
 11641                           ;SW.c: 57: {;SW.c: 59: SWs_Info[index].SW_Samples[0] = SWs_Info[index].SW_Samples[1];
 11642  086A  3003               	movlw	3
 11643  086B  00FF               	movwf	btemp+1
 11644  086C  087F               	movf	btemp+1,w
 11645  086D  00F0               	movwf	i1___bmul@multiplicand
 11646  086E  0874               	movf	SW_Update@index,w
 11647  086F  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11648  0874  3E91               	addlw	(low ((_SWs_Info| (0+256)+1)))& (0+255)
 11649  0875  0084               	movwf	4
 11650  0876  1783               	bsf	3,7	;select IRP bank3
 11651  0877  0800               	movf	0,w
 11652  0878  00F3               	movwf	??_SW_Update
 11653  0879  3003               	movlw	3
 11654  087A  00FF               	movwf	btemp+1
 11655  087B  087F               	movf	btemp+1,w
 11656  087C  00F0               	movwf	i1___bmul@multiplicand
 11657  087D  0874               	movf	SW_Update@index,w
 11658  087E  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11659  0883  3E90               	addlw	(low (_SWs_Info| (0+256)))& (0+255)
 11660  0884  0084               	movwf	4
 11661  0885  0873               	movf	??_SW_Update,w
 11662  0886  1783               	bsf	3,7	;select IRP bank3
 11663  0887  0080               	movwf	0
 11664  0888                     i1l5470:
 11665                           
 11666                           ;SW.c: 61: if(index == SW_PLUS)
 11667  0888  3002               	movlw	2
 11668  0889  0674               	xorwf	SW_Update@index,w
 11669  088A  1D03               	btfss	3,2
 11670  088B  288D               	goto	u875_21
 11671  088C  288E               	goto	u875_20
 11672  088D                     u875_21:
 11673  088D  28AB               	goto	i1l5474
 11674  088E                     u875_20:
 11675  088E                     i1l5472:
 11676                           
 11677                           ;SW.c: 62: {;SW.c: 63: SWs_Info[index].SW_Samples[1] = ((((PORTB)) & (1 << SW_PLUS)) >> 
      +                          (SW_PLUS));
 11678  088E  3003               	movlw	3
 11679  088F  00FF               	movwf	btemp+1
 11680  0890  087F               	movf	btemp+1,w
 11681  0891  00F0               	movwf	i1___bmul@multiplicand
 11682  0892  0874               	movf	SW_Update@index,w
 11683  0893  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11684  0898  3E91               	addlw	(low ((_SWs_Info| (0+256)+1)))& (0+255)
 11685  0899  0084               	movwf	4
 11686  089A  1283               	bcf	3,5	;RP0=0, select bank0
 11687  089B  1303               	bcf	3,6	;RP1=0, select bank0
 11688  089C  0806               	movf	6,w	;volatile
 11689  089D  00F3               	movwf	??_SW_Update
 11690  089E  3002               	movlw	2
 11691  089F                     u876_25:
 11692  089F  1003               	clrc
 11693  08A0  0CF3               	rrf	??_SW_Update,f
 11694  08A1  3EFF               	addlw	-1
 11695  08A2  1D03               	skipz
 11696  08A3  289F               	goto	u876_25
 11697  08A4  0873               	movf	??_SW_Update,w
 11698  08A5  3901               	andlw	1
 11699  08A6  00FF               	movwf	btemp+1
 11700  08A7  087F               	movf	btemp+1,w
 11701  08A8  1783               	bsf	3,7	;select IRP bank3
 11702  08A9  0080               	movwf	0
 11703                           
 11704                           ;SW.c: 64: }
 11705  08AA  2992               	goto	i1l5504
 11706  08AB                     i1l5474:
 11707                           
 11708                           ;SW.c: 65: else if(index == SW_MINUS)
 11709  08AB  0374               	decf	SW_Update@index,w
 11710  08AC  1D03               	btfss	3,2
 11711  08AD  28AF               	goto	u877_21
 11712  08AE  28B0               	goto	u877_20
 11713  08AF                     u877_21:
 11714  08AF  28C8               	goto	i1l5478
 11715  08B0                     u877_20:
 11716  08B0                     i1l5476:
 11717                           
 11718                           ;SW.c: 66: {;SW.c: 67: SWs_Info[index].SW_Samples[1] = ((((PORTB)) & (1 << SW_MINUS)) >>
      +                           (SW_MINUS));
 11719  08B0  3003               	movlw	3
 11720  08B1  00FF               	movwf	btemp+1
 11721  08B2  087F               	movf	btemp+1,w
 11722  08B3  00F0               	movwf	i1___bmul@multiplicand
 11723  08B4  0874               	movf	SW_Update@index,w
 11724  08B5  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11725  08BA  3E91               	addlw	(low ((_SWs_Info| (0+256)+1)))& (0+255)
 11726  08BB  0084               	movwf	4
 11727  08BC  1283               	bcf	3,5	;RP0=0, select bank0
 11728  08BD  1303               	bcf	3,6	;RP1=0, select bank0
 11729  08BE  0806               	movf	6,w	;volatile
 11730  08BF  00F3               	movwf	??_SW_Update
 11731  08C0  1003               	clrc
 11732  08C1  0C73               	rrf	??_SW_Update,w
 11733  08C2  3901               	andlw	1
 11734  08C3  00FF               	movwf	btemp+1
 11735  08C4  087F               	movf	btemp+1,w
 11736  08C5  1783               	bsf	3,7	;select IRP bank3
 11737  08C6  0080               	movwf	0
 11738                           
 11739                           ;SW.c: 68: }
 11740  08C7  2992               	goto	i1l5504
 11741  08C8                     i1l5478:
 11742                           
 11743                           ;SW.c: 69: else if (index == SW_SET)
 11744  08C8  0874               	movf	SW_Update@index,w
 11745  08C9  1D03               	btfss	3,2
 11746  08CA  28CC               	goto	u878_21
 11747  08CB  28CD               	goto	u878_20
 11748  08CC                     u878_21:
 11749  08CC  28E2               	goto	i1l391
 11750  08CD                     u878_20:
 11751  08CD                     i1l5480:
 11752                           
 11753                           ;SW.c: 70: {;SW.c: 71: SWs_Info[index].SW_Samples[1] = ((((PORTB)) & (1 << SW_SET)) >> (
      +                          SW_SET));
 11754  08CD  3003               	movlw	3
 11755  08CE  00FF               	movwf	btemp+1
 11756  08CF  087F               	movf	btemp+1,w
 11757  08D0  00F0               	movwf	i1___bmul@multiplicand
 11758  08D1  0874               	movf	SW_Update@index,w
 11759  08D2  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11760  08D7  3E91               	addlw	(low ((_SWs_Info| (0+256)+1)))& (0+255)
 11761  08D8  0084               	movwf	4
 11762  08D9  1283               	bcf	3,5	;RP0=0, select bank0
 11763  08DA  1303               	bcf	3,6	;RP1=0, select bank0
 11764  08DB  0806               	movf	6,w	;volatile
 11765  08DC  3901               	andlw	1
 11766  08DD  00FF               	movwf	btemp+1
 11767  08DE  087F               	movf	btemp+1,w
 11768  08DF  1783               	bsf	3,7	;select IRP bank3
 11769  08E0  0080               	movwf	0
 11770                           
 11771                           ;SW.c: 72: }
 11772  08E1  2992               	goto	i1l5504
 11773  08E2                     i1l391:
 11774                           
 11775                           ;SW.c: 76: };SW.c: 77: switch(SWs_Info[index].SW_state)
 11776  08E2  2992               	goto	i1l5504
 11777  08E3                     i1l5482:
 11778                           
 11779                           ;SW.c: 80: if((SWs_Info[index].SW_Samples[0] == (0)) &&;SW.c: 81: (SWs_Info[index].SW_Sa
      +                          mples[1] == (0)))
 11780  08E3  3003               	movlw	3
 11781  08E4  00FF               	movwf	btemp+1
 11782  08E5  087F               	movf	btemp+1,w
 11783  08E6  00F0               	movwf	i1___bmul@multiplicand
 11784  08E7  0874               	movf	SW_Update@index,w
 11785  08E8  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11786  08ED  3E90               	addlw	(low (_SWs_Info| (0+256)))& (0+255)
 11787  08EE  0084               	movwf	4
 11788  08EF  1783               	bsf	3,7	;select IRP bank3
 11789  08F0  0800               	movf	0,w
 11790  08F1  1D03               	btfss	3,2
 11791  08F2  28F4               	goto	u879_21
 11792  08F3  28F5               	goto	u879_20
 11793  08F4                     u879_21:
 11794  08F4  29AD               	goto	i1l5506
 11795  08F5                     u879_20:
 11796  08F5                     i1l5484:
 11797  08F5  3003               	movlw	3
 11798  08F6  00FF               	movwf	btemp+1
 11799  08F7  087F               	movf	btemp+1,w
 11800  08F8  00F0               	movwf	i1___bmul@multiplicand
 11801  08F9  0874               	movf	SW_Update@index,w
 11802  08FA  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11803  08FF  3E91               	addlw	(low ((_SWs_Info| (0+256)+1)))& (0+255)
 11804  0900  0084               	movwf	4
 11805  0901  1783               	bsf	3,7	;select IRP bank3
 11806  0902  0800               	movf	0,w
 11807  0903  1D03               	btfss	3,2
 11808  0904  2906               	goto	u880_21
 11809  0905  2907               	goto	u880_20
 11810  0906                     u880_21:
 11811  0906  29AD               	goto	i1l5506
 11812  0907                     u880_20:
 11813  0907                     i1l5486:
 11814                           
 11815                           ;SW.c: 82: {;SW.c: 83: SWs_Info[index].SW_state = SW_PRE_PRESSED;
 11816  0907  3003               	movlw	3
 11817  0908  00FF               	movwf	btemp+1
 11818  0909  087F               	movf	btemp+1,w
 11819  090A  00F0               	movwf	i1___bmul@multiplicand
 11820  090B  0874               	movf	SW_Update@index,w
 11821  090C  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11822  0911  3E92               	addlw	(low ((_SWs_Info| (0+256)+2)))& (0+255)
 11823  0912  0084               	movwf	4
 11824  0913  1783               	bsf	3,7	;select IRP bank3
 11825  0914  0180               	clrf	0
 11826  0915  0A80               	incf	0,f
 11827                           
 11828                           ;SW.c: 84: }
 11829  0916  29AD               	goto	i1l5506
 11830  0917                     i1l5488:
 11831                           
 11832                           ;SW.c: 91: if((SWs_Info[index].SW_Samples[1] == (0)))
 11833  0917  3003               	movlw	3
 11834  0918  00FF               	movwf	btemp+1
 11835  0919  087F               	movf	btemp+1,w
 11836  091A  00F0               	movwf	i1___bmul@multiplicand
 11837  091B  0874               	movf	SW_Update@index,w
 11838  091C  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11839  0921  3E91               	addlw	(low ((_SWs_Info| (0+256)+1)))& (0+255)
 11840  0922  0084               	movwf	4
 11841  0923  1783               	bsf	3,7	;select IRP bank3
 11842  0924  0800               	movf	0,w
 11843  0925  1D03               	btfss	3,2
 11844  0926  2928               	goto	u881_21
 11845  0927  2929               	goto	u881_20
 11846  0928                     u881_21:
 11847  0928  29AD               	goto	i1l5506
 11848  0929                     u881_20:
 11849  0929                     i1l5490:
 11850                           
 11851                           ;SW.c: 92: {;SW.c: 93: SWs_Info[index].SW_state = SW_PRESSED;
 11852  0929  3003               	movlw	3
 11853  092A  00FF               	movwf	btemp+1
 11854  092B  087F               	movf	btemp+1,w
 11855  092C  00F0               	movwf	i1___bmul@multiplicand
 11856  092D  0874               	movf	SW_Update@index,w
 11857  092E  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11858  0933  3E92               	addlw	(low ((_SWs_Info| (0+256)+2)))& (0+255)
 11859  0934  0084               	movwf	4
 11860  0935  3002               	movlw	2
 11861  0936  00FF               	movwf	btemp+1
 11862  0937  087F               	movf	btemp+1,w
 11863  0938  1783               	bsf	3,7	;select IRP bank3
 11864  0939  0080               	movwf	0
 11865                           
 11866                           ;SW.c: 94: }
 11867  093A  29AD               	goto	i1l5506
 11868  093B                     i1l5492:
 11869                           
 11870                           ;SW.c: 101: if((SWs_Info[index].SW_Samples[0] == (1)) &&;SW.c: 102: (SWs_Info[index].SW_
      +                          Samples[1] == (1)))
 11871  093B  3003               	movlw	3
 11872  093C  00FF               	movwf	btemp+1
 11873  093D  087F               	movf	btemp+1,w
 11874  093E  00F0               	movwf	i1___bmul@multiplicand
 11875  093F  0874               	movf	SW_Update@index,w
 11876  0940  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11877  0945  3E90               	addlw	(low (_SWs_Info| (0+256)))& (0+255)
 11878  0946  0084               	movwf	4
 11879  0947  1783               	bsf	3,7	;select IRP bank3
 11880  0948  0300               	decf	0,w
 11881  0949  1D03               	btfss	3,2
 11882  094A  294C               	goto	u882_21
 11883  094B  294D               	goto	u882_20
 11884  094C                     u882_21:
 11885  094C  29AD               	goto	i1l5506
 11886  094D                     u882_20:
 11887  094D                     i1l5494:
 11888  094D  3003               	movlw	3
 11889  094E  00FF               	movwf	btemp+1
 11890  094F  087F               	movf	btemp+1,w
 11891  0950  00F0               	movwf	i1___bmul@multiplicand
 11892  0951  0874               	movf	SW_Update@index,w
 11893  0952  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11894  0957  3E91               	addlw	(low ((_SWs_Info| (0+256)+1)))& (0+255)
 11895  0958  0084               	movwf	4
 11896  0959  1783               	bsf	3,7	;select IRP bank3
 11897  095A  0300               	decf	0,w
 11898  095B  1D03               	btfss	3,2
 11899  095C  295E               	goto	u883_21
 11900  095D  295F               	goto	u883_20
 11901  095E                     u883_21:
 11902  095E  29AD               	goto	i1l5506
 11903  095F                     u883_20:
 11904  095F                     i1l5496:
 11905                           
 11906                           ;SW.c: 103: {;SW.c: 104: SWs_Info[index].SW_state = SW_PRE_RELEASED;
 11907  095F  3003               	movlw	3
 11908  0960  00FF               	movwf	btemp+1
 11909  0961  087F               	movf	btemp+1,w
 11910  0962  00F0               	movwf	i1___bmul@multiplicand
 11911  0963  0874               	movf	SW_Update@index,w
 11912  0964  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11913  0969  3E92               	addlw	(low ((_SWs_Info| (0+256)+2)))& (0+255)
 11914  096A  0084               	movwf	4
 11915  096B  3003               	movlw	3
 11916  096C  00FF               	movwf	btemp+1
 11917  096D  087F               	movf	btemp+1,w
 11918  096E  1783               	bsf	3,7	;select IRP bank3
 11919  096F  0080               	movwf	0
 11920                           
 11921                           ;SW.c: 105: }
 11922  0970  29AD               	goto	i1l5506
 11923  0971                     i1l5498:
 11924                           
 11925                           ;SW.c: 112: if((SWs_Info[index].SW_Samples[1] == (1)))
 11926  0971  3003               	movlw	3
 11927  0972  00FF               	movwf	btemp+1
 11928  0973  087F               	movf	btemp+1,w
 11929  0974  00F0               	movwf	i1___bmul@multiplicand
 11930  0975  0874               	movf	SW_Update@index,w
 11931  0976  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11932  097B  3E91               	addlw	(low ((_SWs_Info| (0+256)+1)))& (0+255)
 11933  097C  0084               	movwf	4
 11934  097D  1783               	bsf	3,7	;select IRP bank3
 11935  097E  0300               	decf	0,w
 11936  097F  1D03               	btfss	3,2
 11937  0980  2982               	goto	u884_21
 11938  0981  2983               	goto	u884_20
 11939  0982                     u884_21:
 11940  0982  29AD               	goto	i1l5506
 11941  0983                     u884_20:
 11942  0983                     i1l5500:
 11943                           
 11944                           ;SW.c: 113: {;SW.c: 114: SWs_Info[index].SW_state = SW_RELEASED;
 11945  0983  3003               	movlw	3
 11946  0984  00FF               	movwf	btemp+1
 11947  0985  087F               	movf	btemp+1,w
 11948  0986  00F0               	movwf	i1___bmul@multiplicand
 11949  0987  0874               	movf	SW_Update@index,w
 11950  0988  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11951  098D  3E92               	addlw	(low ((_SWs_Info| (0+256)+2)))& (0+255)
 11952  098E  0084               	movwf	4
 11953  098F  1783               	bsf	3,7	;select IRP bank3
 11954  0990  0180               	clrf	0
 11955                           
 11956                           ;SW.c: 115: }
 11957  0991  29AD               	goto	i1l5506
 11958  0992                     i1l5504:
 11959  0992  3003               	movlw	3
 11960  0993  00FF               	movwf	btemp+1
 11961  0994  087F               	movf	btemp+1,w
 11962  0995  00F0               	movwf	i1___bmul@multiplicand
 11963  0996  0874               	movf	SW_Update@index,w
 11964  0997  160A  158A  250E  120A  158A  	fcall	i1___bmul
 11965  099C  3E92               	addlw	(low ((_SWs_Info| (0+256)+2)))& (0+255)
 11966  099D  0084               	movwf	4
 11967  099E  1783               	bsf	3,7	;select IRP bank3
 11968  099F  0800               	movf	0,w
 11969                           
 11970                           ; Switch size 1, requested type "simple"
 11971                           ; Number of cases is 4, Range of values is 0 to 3
 11972                           ; switch strategies available:
 11973                           ; Name         Instructions Cycles
 11974                           ; simple_byte           13     7 (average)
 11975                           ; direct_byte           20     8 (fixed)
 11976                           ; jumptable            260     6 (fixed)
 11977                           ;	Chosen strategy is simple_byte
 11978  09A0  3A00               	xorlw	0	; case 0
 11979  09A1  1903               	skipnz
 11980  09A2  28E3               	goto	i1l5482
 11981  09A3  3A01               	xorlw	1	; case 1
 11982  09A4  1903               	skipnz
 11983  09A5  2917               	goto	i1l5488
 11984  09A6  3A03               	xorlw	3	; case 2
 11985  09A7  1903               	skipnz
 11986  09A8  293B               	goto	i1l5492
 11987  09A9  3A01               	xorlw	1	; case 3
 11988  09AA  1903               	skipnz
 11989  09AB  2971               	goto	i1l5498
 11990  09AC  29AD               	goto	i1l5506
 11991  09AD                     i1l5506:
 11992  09AD  3001               	movlw	1
 11993  09AE  00FF               	movwf	btemp+1
 11994  09AF  087F               	movf	btemp+1,w
 11995  09B0  07F4               	addwf	SW_Update@index,f
 11996  09B1                     i1l5508:
 11997  09B1  3003               	movlw	3
 11998  09B2  0274               	subwf	SW_Update@index,w
 11999  09B3  1C03               	skipc
 12000  09B4  29B6               	goto	u885_21
 12001  09B5  29B7               	goto	u885_20
 12002  09B6                     u885_21:
 12003  09B6  286A               	goto	i1l5468
 12004  09B7                     u885_20:
 12005  09B7                     i1l387:
 12006  09B7  0008               	return
 12007  09B8                     __end_of_SW_Update:
 12008                           
 12009                           	psect	text53
 12010  1D0E                     __ptext53:	
 12011 ;; *************** function i1___bmul *****************
 12012 ;; Defined at:
 12013 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;  multiplier      1    wreg     unsigned char 
 12016 ;;  multiplicand    1    0[COMMON] unsigned char 
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;  multiplier      1    2[COMMON] unsigned char 
 12019 ;;  product         1    1[COMMON] unsigned char 
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  1    wreg      unsigned char 
 12022 ;; Registers used:
 12023 ;;		wreg, status,2, status,0, btemp+1
 12024 ;; Tracked objects:
 12025 ;;		On entry : 0/0
 12026 ;;		On exit  : 0/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12029 ;;      Params:         1       0       0       0       0
 12030 ;;      Locals:         2       0       0       0       0
 12031 ;;      Temps:          0       0       0       0       0
 12032 ;;      Totals:         3       0       0       0       0
 12033 ;;Total ram usage:        3 bytes
 12034 ;; Hardware stack levels used:    1
 12035 ;; This function calls:
 12036 ;;		Nothing
 12037 ;; This function is called by:
 12038 ;;		_SW_GetState
 12039 ;;		_SW_Update
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           
 12044                           ;psect for function i1___bmul
 12045  1D0E                     i1___bmul:
 12046                           
 12047                           ;incstack = 0
 12048 ;; hardware stack exceeded
 12049                           ; Regs used in i1___bmul: [wreg+status,2+status,0+btemp+1]
 12050                           ;i1___bmul@multiplier stored from wreg
 12051  1D0E  00F2               	movwf	i1___bmul@multiplier
 12052  1D0F                     i1l3672:
 12053  1D0F  01F1               	clrf	i1___bmul@product
 12054  1D10                     i1l3674:
 12055  1D10  1C72               	btfss	i1___bmul@multiplier,0
 12056  1D11  2D13               	goto	u505_21
 12057  1D12  2D14               	goto	u505_20
 12058  1D13                     u505_21:
 12059  1D13  2D18               	goto	i1l3678
 12060  1D14                     u505_20:
 12061  1D14                     i1l3676:
 12062  1D14  0870               	movf	i1___bmul@multiplicand,w
 12063  1D15  00FF               	movwf	btemp+1
 12064  1D16  087F               	movf	btemp+1,w
 12065  1D17  07F1               	addwf	i1___bmul@product,f
 12066  1D18                     i1l3678:
 12067  1D18  1003               	clrc
 12068  1D19  0DF0               	rlf	i1___bmul@multiplicand,f
 12069  1D1A                     i1l3680:
 12070  1D1A  1003               	clrc
 12071  1D1B  0CF2               	rrf	i1___bmul@multiplier,f
 12072  1D1C                     i1l3682:
 12073  1D1C  0872               	movf	i1___bmul@multiplier,w
 12074  1D1D  1D03               	btfss	3,2
 12075  1D1E  2D20               	goto	u506_21
 12076  1D1F  2D21               	goto	u506_20
 12077  1D20                     u506_21:
 12078  1D20  2D10               	goto	i1l3674
 12079  1D21                     u506_20:
 12080  1D21                     i1l3684:
 12081  1D21  0871               	movf	i1___bmul@product,w
 12082  1D22                     i1l722:
 12083  1D22  0008               	return
 12084  1D23                     __end_ofi1___bmul:
 12085                           
 12086                           	psect	text54
 12087  1FBE                     __ptext54:	
 12088 ;; *************** function _LED_Update *****************
 12089 ;; Defined at:
 12090 ;;		line 17 in file "LED.c"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;		None
 12093 ;; Auto vars:     Size  Location     Type
 12094 ;;		None
 12095 ;; Return value:  Size  Location     Type
 12096 ;;                  1    wreg      void 
 12097 ;; Registers used:
 12098 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12099 ;; Tracked objects:
 12100 ;;		On entry : 0/0
 12101 ;;		On exit  : 0/0
 12102 ;;		Unchanged: 0/0
 12103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12104 ;;      Params:         0       0       0       0       0
 12105 ;;      Locals:         0       0       0       0       0
 12106 ;;      Temps:          0       0       0       0       0
 12107 ;;      Totals:         0       0       0       0       0
 12108 ;;Total ram usage:        0 bytes
 12109 ;; Hardware stack levels used:    1
 12110 ;; Hardware stack levels required when called:    1
 12111 ;; This function calls:
 12112 ;;		_Led_Off
 12113 ;;		_Led_Toggle
 12114 ;;		_Led_on
 12115 ;; This function is called by:
 12116 ;;		_TMR_Update
 12117 ;; This function uses a non-reentrant model
 12118 ;;
 12119                           
 12120                           
 12121                           ;psect for function _LED_Update
 12122  1FBE                     _LED_Update:
 12123  1FBE                     i1l4586:	
 12124                           ;incstack = 0
 12125                           ; Regs used in _LED_Update: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12126                           
 12127                           
 12128                           ;LED.c: 19: static uint32_t Led_counter = 0 ;;LED.c: 20: Led_counter += (1);
 12129  1FBE  3001               	movlw	1
 12130  1FBF  1683               	bsf	3,5	;RP0=1, select bank3
 12131  1FC0  1703               	bsf	3,6	;RP1=1, select bank3
 12132  1FC1  0799               	addwf	LED_Update@Led_counter^(0+384),f
 12133  1FC2  3000               	movlw	0
 12134  1FC3  1803               	skipnc
 12135  1FC4  3001               	movlw	1
 12136  1FC5  079A               	addwf	(LED_Update@Led_counter+1)^(0+384),f
 12137  1FC6  3000               	movlw	0
 12138  1FC7  1803               	skipnc
 12139  1FC8  3001               	movlw	1
 12140  1FC9  079B               	addwf	(LED_Update@Led_counter+2)^(0+384),f
 12141  1FCA  3000               	movlw	0
 12142  1FCB  1803               	skipnc
 12143  1FCC  3001               	movlw	1
 12144  1FCD  079C               	addwf	(LED_Update@Led_counter+3)^(0+384),f
 12145  1FCE                     i1l4588:
 12146                           
 12147                           ;LED.c: 22: if(Led_counter != (100))
 12148  1FCE  3064               	movlw	100
 12149  1FCF  0619               	xorwf	LED_Update@Led_counter^(0+384),w
 12150  1FD0  041A               	iorwf	(LED_Update@Led_counter+1)^(0+384),w
 12151  1FD1  041B               	iorwf	(LED_Update@Led_counter+2)^(0+384),w
 12152  1FD2  041C               	iorwf	(LED_Update@Led_counter+3)^(0+384),w
 12153  1FD3  1903               	btfsc	3,2
 12154  1FD4  2FD6               	goto	u697_21
 12155  1FD5  2FD7               	goto	u697_20
 12156  1FD6                     u697_21:
 12157  1FD6  2FD8               	goto	i1l4592
 12158  1FD7                     u697_20:
 12159  1FD7  2FFF               	goto	i1l597
 12160  1FD8                     i1l4592:
 12161                           
 12162                           ;LED.c: 25: };LED.c: 26: Led_counter = 0 ;
 12163  1FD8  3000               	movlw	0
 12164  1FD9  009C               	movwf	(LED_Update@Led_counter+3)^(0+384)
 12165  1FDA  3000               	movlw	0
 12166  1FDB  009B               	movwf	(LED_Update@Led_counter+2)^(0+384)
 12167  1FDC  3000               	movlw	0
 12168  1FDD  009A               	movwf	(LED_Update@Led_counter+1)^(0+384)
 12169  1FDE  3000               	movlw	0
 12170  1FDF  0099               	movwf	LED_Update@Led_counter^(0+384)
 12171  1FE0                     i1l4594:
 12172                           
 12173                           ;LED.c: 28: if(WH_FLAG)
 12174  1FE0  1283               	bcf	3,5	;RP0=0, select bank0
 12175  1FE1  1303               	bcf	3,6	;RP1=0, select bank0
 12176  1FE2  0849               	movf	_WH_FLAG,w
 12177  1FE3  1903               	btfsc	3,2
 12178  1FE4  2FE6               	goto	u698_21
 12179  1FE5  2FE7               	goto	u698_20
 12180  1FE6                     u698_21:
 12181  1FE6  2FEE               	goto	i1l4598
 12182  1FE7                     u698_20:
 12183  1FE7                     i1l4596:
 12184                           
 12185                           ;LED.c: 29: {;LED.c: 30: Led_Toggle((7));
 12186  1FE7  3007               	movlw	7
 12187  1FE8  160A  158A  24B1  160A  158A  	fcall	_Led_Toggle
 12188                           
 12189                           ;LED.c: 31: }
 12190  1FED  2FFF               	goto	i1l597
 12191  1FEE                     i1l4598:
 12192                           
 12193                           ;LED.c: 32: else if(CL_Flag)
 12194  1FEE  0848               	movf	_CL_Flag,w
 12195  1FEF  1903               	btfsc	3,2
 12196  1FF0  2FF2               	goto	u699_21
 12197  1FF1  2FF3               	goto	u699_20
 12198  1FF2                     u699_21:
 12199  1FF2  2FFF               	goto	i1l597
 12200  1FF3                     u699_20:
 12201  1FF3                     i1l4600:
 12202                           
 12203                           ;LED.c: 33: {;LED.c: 34: Led_Off((7));
 12204  1FF3  3007               	movlw	7
 12205  1FF4  160A  158A  257D  160A  158A  	fcall	_Led_Off
 12206                           
 12207                           ;LED.c: 35: Led_on((7));
 12208  1FF9  3007               	movlw	7
 12209  1FFA  160A  158A  2597  160A  158A  	fcall	_Led_on
 12210  1FFF                     i1l597:	
 12211                           ;LED.c: 36: }
 12212                           
 12213  1FFF  0008               	return
 12214  2000                     __end_of_LED_Update:
 12215                           
 12216                           	psect	text55
 12217  1D97                     __ptext55:	
 12218 ;; *************** function _Led_on *****************
 12219 ;; Defined at:
 12220 ;;		line 44 in file "LED.c"
 12221 ;; Parameters:    Size  Location     Type
 12222 ;;  Led             1    wreg     unsigned char 
 12223 ;; Auto vars:     Size  Location     Type
 12224 ;;  Led             1    2[COMMON] unsigned char 
 12225 ;; Return value:  Size  Location     Type
 12226 ;;                  1    wreg      void 
 12227 ;; Registers used:
 12228 ;;		wreg, status,2, status,0
 12229 ;; Tracked objects:
 12230 ;;		On entry : 0/0
 12231 ;;		On exit  : 0/0
 12232 ;;		Unchanged: 0/0
 12233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12234 ;;      Params:         0       0       0       0       0
 12235 ;;      Locals:         1       0       0       0       0
 12236 ;;      Temps:          2       0       0       0       0
 12237 ;;      Totals:         3       0       0       0       0
 12238 ;;Total ram usage:        3 bytes
 12239 ;; Hardware stack levels used:    1
 12240 ;; This function calls:
 12241 ;;		Nothing
 12242 ;; This function is called by:
 12243 ;;		_LED_Update
 12244 ;; This function uses a non-reentrant model
 12245 ;;
 12246                           
 12247                           
 12248                           ;psect for function _Led_on
 12249  1D97                     _Led_on:
 12250                           
 12251                           ;incstack = 0
 12252                           ; Regs used in _Led_on: [wreg+status,2+status,0]
 12253                           ;Led_on@Led stored from wreg
 12254  1D97  00F2               	movwf	Led_on@Led
 12255  1D98                     i1l4448:
 12256                           
 12257                           ;LED.c: 46: (((PORTB)) = ((((PORTB)) & (~1<<Led))) | ((1) << Led));
 12258  1D98  3001               	movlw	1
 12259  1D99  00F0               	movwf	??_Led_on
 12260  1D9A  0A72               	incf	Led_on@Led,w
 12261  1D9B  2D9E               	goto	u673_24
 12262  1D9C                     u673_25:
 12263  1D9C  1003               	clrc
 12264  1D9D  0DF0               	rlf	??_Led_on,f
 12265  1D9E                     u673_24:
 12266  1D9E  3EFF               	addlw	-1
 12267  1D9F  1D03               	skipz
 12268  1DA0  2D9C               	goto	u673_25
 12269  1DA1  30FE               	movlw	254
 12270  1DA2  00F1               	movwf	??_Led_on+1
 12271  1DA3  0A72               	incf	Led_on@Led,w
 12272  1DA4  2DA7               	goto	u674_24
 12273  1DA5                     u674_25:
 12274  1DA5  1003               	clrc
 12275  1DA6  0DF1               	rlf	??_Led_on+1,f
 12276  1DA7                     u674_24:
 12277  1DA7  3EFF               	addlw	-1
 12278  1DA8  1D03               	skipz
 12279  1DA9  2DA5               	goto	u674_25
 12280  1DAA  0871               	movf	??_Led_on+1,w
 12281  1DAB  1283               	bcf	3,5	;RP0=0, select bank0
 12282  1DAC  1303               	bcf	3,6	;RP1=0, select bank0
 12283  1DAD  0506               	andwf	6,w	;volatile
 12284  1DAE  0470               	iorwf	??_Led_on,w
 12285  1DAF  0086               	movwf	6	;volatile
 12286  1DB0                     i1l604:
 12287  1DB0  0008               	return
 12288  1DB1                     __end_of_Led_on:
 12289                           
 12290                           	psect	text56
 12291  1CB1                     __ptext56:	
 12292 ;; *************** function _Led_Toggle *****************
 12293 ;; Defined at:
 12294 ;;		line 54 in file "LED.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;  Led             1    wreg     unsigned char 
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;  Led             1    1[COMMON] unsigned char 
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1    wreg      void 
 12301 ;; Registers used:
 12302 ;;		wreg, status,2, status,0, btemp+1
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12308 ;;      Params:         0       0       0       0       0
 12309 ;;      Locals:         1       0       0       0       0
 12310 ;;      Temps:          1       0       0       0       0
 12311 ;;      Totals:         2       0       0       0       0
 12312 ;;Total ram usage:        2 bytes
 12313 ;; Hardware stack levels used:    1
 12314 ;; This function calls:
 12315 ;;		Nothing
 12316 ;; This function is called by:
 12317 ;;		_LED_Update
 12318 ;; This function uses a non-reentrant model
 12319 ;;
 12320                           
 12321                           
 12322                           ;psect for function _Led_Toggle
 12323  1CB1                     _Led_Toggle:
 12324                           
 12325                           ;incstack = 0
 12326                           ; Regs used in _Led_Toggle: [wreg+status,2+status,0+btemp+1]
 12327                           ;Led_Toggle@Led stored from wreg
 12328  1CB1  00F1               	movwf	Led_Toggle@Led
 12329  1CB2                     i1l4444:
 12330                           
 12331                           ;LED.c: 56: ((((PORTB)) ^= (1 << Led)));
 12332  1CB2  3001               	movlw	1
 12333  1CB3  00F0               	movwf	??_Led_Toggle
 12334  1CB4  0A71               	incf	Led_Toggle@Led,w
 12335  1CB5  2CB8               	goto	u670_24
 12336  1CB6                     u670_25:
 12337  1CB6  1003               	clrc
 12338  1CB7  0DF0               	rlf	??_Led_Toggle,f
 12339  1CB8                     u670_24:
 12340  1CB8  3EFF               	addlw	-1
 12341  1CB9  1D03               	skipz
 12342  1CBA  2CB6               	goto	u670_25
 12343  1CBB  0870               	movf	??_Led_Toggle,w
 12344  1CBC  00FF               	movwf	btemp+1
 12345  1CBD  087F               	movf	btemp+1,w
 12346  1CBE  1283               	bcf	3,5	;RP0=0, select bank0
 12347  1CBF  1303               	bcf	3,6	;RP1=0, select bank0
 12348  1CC0  0686               	xorwf	6,f	;volatile
 12349  1CC1                     i1l610:
 12350  1CC1  0008               	return
 12351  1CC2                     __end_of_Led_Toggle:
 12352                           
 12353                           	psect	text57
 12354  1D7D                     __ptext57:	
 12355 ;; *************** function _Led_Off *****************
 12356 ;; Defined at:
 12357 ;;		line 49 in file "LED.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;  Led             1    wreg     unsigned char 
 12360 ;; Auto vars:     Size  Location     Type
 12361 ;;  Led             1    2[COMMON] unsigned char 
 12362 ;; Return value:  Size  Location     Type
 12363 ;;                  1    wreg      void 
 12364 ;; Registers used:
 12365 ;;		wreg, status,2, status,0
 12366 ;; Tracked objects:
 12367 ;;		On entry : 0/0
 12368 ;;		On exit  : 0/0
 12369 ;;		Unchanged: 0/0
 12370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12371 ;;      Params:         0       0       0       0       0
 12372 ;;      Locals:         1       0       0       0       0
 12373 ;;      Temps:          2       0       0       0       0
 12374 ;;      Totals:         3       0       0       0       0
 12375 ;;Total ram usage:        3 bytes
 12376 ;; Hardware stack levels used:    1
 12377 ;; This function calls:
 12378 ;;		Nothing
 12379 ;; This function is called by:
 12380 ;;		_LED_Update
 12381 ;; This function uses a non-reentrant model
 12382 ;;
 12383                           
 12384                           
 12385                           ;psect for function _Led_Off
 12386  1D7D                     _Led_Off:
 12387                           
 12388                           ;incstack = 0
 12389                           ; Regs used in _Led_Off: [wreg+status,2+status,0]
 12390                           ;Led_Off@Led stored from wreg
 12391  1D7D  00F2               	movwf	Led_Off@Led
 12392  1D7E                     i1l4446:
 12393                           
 12394                           ;LED.c: 51: (((PORTB)) = ((((PORTB)) & (~1<<Led))) | ((0) << Led));
 12395  1D7E  3000               	movlw	0
 12396  1D7F  00F0               	movwf	??_Led_Off
 12397  1D80  0A72               	incf	Led_Off@Led,w
 12398  1D81  2D84               	goto	u671_24
 12399  1D82                     u671_25:
 12400  1D82  1003               	clrc
 12401  1D83  0DF0               	rlf	??_Led_Off,f
 12402  1D84                     u671_24:
 12403  1D84  3EFF               	addlw	-1
 12404  1D85  1D03               	skipz
 12405  1D86  2D82               	goto	u671_25
 12406  1D87  30FE               	movlw	254
 12407  1D88  00F1               	movwf	??_Led_Off+1
 12408  1D89  0A72               	incf	Led_Off@Led,w
 12409  1D8A  2D8D               	goto	u672_24
 12410  1D8B                     u672_25:
 12411  1D8B  1003               	clrc
 12412  1D8C  0DF1               	rlf	??_Led_Off+1,f
 12413  1D8D                     u672_24:
 12414  1D8D  3EFF               	addlw	-1
 12415  1D8E  1D03               	skipz
 12416  1D8F  2D8B               	goto	u672_25
 12417  1D90  0871               	movf	??_Led_Off+1,w
 12418  1D91  1283               	bcf	3,5	;RP0=0, select bank0
 12419  1D92  1303               	bcf	3,6	;RP1=0, select bank0
 12420  1D93  0506               	andwf	6,w	;volatile
 12421  1D94  0470               	iorwf	??_Led_Off,w
 12422  1D95  0086               	movwf	6	;volatile
 12423  1D96                     i1l607:
 12424  1D96  0008               	return
 12425  1D97                     __end_of_Led_Off:
 12426                           
 12427                           	psect	text58
 12428  1408                     __ptext58:	
 12429 ;; *************** function _DISP_Update *****************
 12430 ;; Defined at:
 12431 ;;		line 31 in file "SSD.c"
 12432 ;; Parameters:    Size  Location     Type
 12433 ;;		None
 12434 ;; Auto vars:     Size  Location     Type
 12435 ;;		None
 12436 ;; Return value:  Size  Location     Type
 12437 ;;                  1    wreg      void 
 12438 ;; Registers used:
 12439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12440 ;; Tracked objects:
 12441 ;;		On entry : 0/0
 12442 ;;		On exit  : 0/0
 12443 ;;		Unchanged: 0/0
 12444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12445 ;;      Params:         0       0       0       0       0
 12446 ;;      Locals:         0       0       0       0       0
 12447 ;;      Temps:          0       0       0       0       0
 12448 ;;      Totals:         0       0       0       0       0
 12449 ;;Total ram usage:        0 bytes
 12450 ;; Hardware stack levels used:    1
 12451 ;; Hardware stack levels required when called:    3
 12452 ;; This function calls:
 12453 ;;		_DISP_Elements
 12454 ;;		_SSD_Blink
 12455 ;;		_SSD_Dispaly_NULL
 12456 ;; This function is called by:
 12457 ;;		_TMR_Update
 12458 ;; This function uses a non-reentrant model
 12459 ;;
 12460                           
 12461                           
 12462                           ;psect for function _DISP_Update
 12463  1408                     _DISP_Update:
 12464  1408                     i1l4470:	
 12465                           ;incstack = 0
 12466 ;; hardware stack exceeded
 12467                           ; Regs used in _DISP_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12468                           
 12469                           
 12470                           ;SSD.c: 33: static uint32_t DISP_Counter = 0;;SSD.c: 34: static uint32_t DISP_Blink = 0 
      +                          ;;SSD.c: 35: DISP_Counter += (1);
 12471  1408  3001               	movlw	1
 12472  1409  1683               	bsf	3,5	;RP0=1, select bank3
 12473  140A  1703               	bsf	3,6	;RP1=1, select bank3
 12474  140B  07B9               	addwf	DISP_Update@DISP_Counter^(0+384),f
 12475  140C  3000               	movlw	0
 12476  140D  1803               	skipnc
 12477  140E  3001               	movlw	1
 12478  140F  07BA               	addwf	(DISP_Update@DISP_Counter+1)^(0+384),f
 12479  1410  3000               	movlw	0
 12480  1411  1803               	skipnc
 12481  1412  3001               	movlw	1
 12482  1413  07BB               	addwf	(DISP_Update@DISP_Counter+2)^(0+384),f
 12483  1414  3000               	movlw	0
 12484  1415  1803               	skipnc
 12485  1416  3001               	movlw	1
 12486  1417  07BC               	addwf	(DISP_Update@DISP_Counter+3)^(0+384),f
 12487  1418                     i1l4472:
 12488                           
 12489                           ;SSD.c: 36: if(DISP_Counter != (2))
 12490  1418  3002               	movlw	2
 12491  1419  0639               	xorwf	DISP_Update@DISP_Counter^(0+384),w
 12492  141A  043A               	iorwf	(DISP_Update@DISP_Counter+1)^(0+384),w
 12493  141B  043B               	iorwf	(DISP_Update@DISP_Counter+2)^(0+384),w
 12494  141C  043C               	iorwf	(DISP_Update@DISP_Counter+3)^(0+384),w
 12495  141D  1903               	btfsc	3,2
 12496  141E  2C20               	goto	u675_21
 12497  141F  2C21               	goto	u675_20
 12498  1420                     u675_21:
 12499  1420  2C22               	goto	i1l4476
 12500  1421                     u675_20:
 12501  1421  2C76               	goto	i1l236
 12502  1422                     i1l4476:
 12503                           
 12504                           ;SSD.c: 39: };SSD.c: 41: DISP_Counter = 0;
 12505  1422  3000               	movlw	0
 12506  1423  00BC               	movwf	(DISP_Update@DISP_Counter+3)^(0+384)
 12507  1424  3000               	movlw	0
 12508  1425  00BB               	movwf	(DISP_Update@DISP_Counter+2)^(0+384)
 12509  1426  3000               	movlw	0
 12510  1427  00BA               	movwf	(DISP_Update@DISP_Counter+1)^(0+384)
 12511  1428  3000               	movlw	0
 12512  1429  00B9               	movwf	DISP_Update@DISP_Counter^(0+384)
 12513  142A                     i1l4478:
 12514                           
 12515                           ;SSD.c: 43: if(MODE == Normal_Mode)
 12516  142A  1283               	bcf	3,5	;RP0=0, select bank0
 12517  142B  1303               	bcf	3,6	;RP1=0, select bank0
 12518  142C  0358               	decf	_MODE,w
 12519  142D  1D03               	btfss	3,2
 12520  142E  2C30               	goto	u676_21
 12521  142F  2C31               	goto	u676_20
 12522  1430                     u676_21:
 12523  1430  2C38               	goto	i1l4482
 12524  1431                     u676_20:
 12525  1431                     i1l4480:
 12526                           
 12527                           ;SSD.c: 44: {;SSD.c: 45: DISP_Elements(Temperature);
 12528  1431  0850               	movf	_Temperature,w
 12529  1432  160A  118A  2146  160A  118A  	fcall	_DISP_Elements
 12530                           
 12531                           ;SSD.c: 46: }
 12532  1437  2C76               	goto	i1l236
 12533  1438                     i1l4482:
 12534                           
 12535                           ;SSD.c: 47: else if(MODE == Set_Mode)
 12536  1438  0858               	movf	_MODE,w
 12537  1439  1D03               	btfss	3,2
 12538  143A  2C3C               	goto	u677_21
 12539  143B  2C3D               	goto	u677_20
 12540  143C                     u677_21:
 12541  143C  2C71               	goto	i1l4496
 12542  143D                     u677_20:
 12543  143D                     i1l4484:
 12544                           
 12545                           ;SSD.c: 48: {;SSD.c: 49: DISP_Blink += (1);
 12546  143D  3001               	movlw	1
 12547  143E  1683               	bsf	3,5	;RP0=1, select bank3
 12548  143F  1703               	bsf	3,6	;RP1=1, select bank3
 12549  1440  07B5               	addwf	DISP_Update@DISP_Blink^(0+384),f
 12550  1441  3000               	movlw	0
 12551  1442  1803               	skipnc
 12552  1443  3001               	movlw	1
 12553  1444  07B6               	addwf	(DISP_Update@DISP_Blink+1)^(0+384),f
 12554  1445  3000               	movlw	0
 12555  1446  1803               	skipnc
 12556  1447  3001               	movlw	1
 12557  1448  07B7               	addwf	(DISP_Update@DISP_Blink+2)^(0+384),f
 12558  1449  3000               	movlw	0
 12559  144A  1803               	skipnc
 12560  144B  3001               	movlw	1
 12561  144C  07B8               	addwf	(DISP_Update@DISP_Blink+3)^(0+384),f
 12562  144D                     i1l4486:
 12563                           
 12564                           ;SSD.c: 50: DISP_Elements(set_temp);
 12565  144D  1283               	bcf	3,5	;RP0=0, select bank0
 12566  144E  1303               	bcf	3,6	;RP1=0, select bank0
 12567  144F  0857               	movf	_set_temp,w
 12568  1450  160A  118A  2146  160A  118A  	fcall	_DISP_Elements
 12569  1455                     i1l4488:
 12570                           
 12571                           ;SSD.c: 51: if(DISP_Blink != (100))
 12572  1455  3064               	movlw	100
 12573  1456  1683               	bsf	3,5	;RP0=1, select bank3
 12574  1457  1703               	bsf	3,6	;RP1=1, select bank3
 12575  1458  0635               	xorwf	DISP_Update@DISP_Blink^(0+384),w
 12576  1459  0436               	iorwf	(DISP_Update@DISP_Blink+1)^(0+384),w
 12577  145A  0437               	iorwf	(DISP_Update@DISP_Blink+2)^(0+384),w
 12578  145B  0438               	iorwf	(DISP_Update@DISP_Blink+3)^(0+384),w
 12579  145C  1903               	btfsc	3,2
 12580  145D  2C5F               	goto	u678_21
 12581  145E  2C60               	goto	u678_20
 12582  145F                     u678_21:
 12583  145F  2C61               	goto	i1l4492
 12584  1460                     u678_20:
 12585  1460  2C76               	goto	i1l236
 12586  1461                     i1l4492:
 12587                           
 12588                           ;SSD.c: 54: };SSD.c: 56: SSD_Blink();
 12589  1461  160A  158A  2428  160A  118A  	fcall	_SSD_Blink
 12590  1466                     i1l4494:
 12591                           
 12592                           ;SSD.c: 58: DISP_Blink = 0;
 12593  1466  3000               	movlw	0
 12594  1467  1683               	bsf	3,5	;RP0=1, select bank3
 12595  1468  1703               	bsf	3,6	;RP1=1, select bank3
 12596  1469  00B8               	movwf	(DISP_Update@DISP_Blink+3)^(0+384)
 12597  146A  3000               	movlw	0
 12598  146B  00B7               	movwf	(DISP_Update@DISP_Blink+2)^(0+384)
 12599  146C  3000               	movlw	0
 12600  146D  00B6               	movwf	(DISP_Update@DISP_Blink+1)^(0+384)
 12601  146E  3000               	movlw	0
 12602  146F  00B5               	movwf	DISP_Update@DISP_Blink^(0+384)
 12603                           
 12604                           ;SSD.c: 60: }
 12605  1470  2C76               	goto	i1l236
 12606  1471                     i1l4496:
 12607                           
 12608                           ;SSD.c: 61: else;SSD.c: 62: {;SSD.c: 63: SSD_Dispaly_NULL();
 12609  1471  160A  158A  23F9  160A  118A  	fcall	_SSD_Dispaly_NULL
 12610  1476                     i1l236:
 12611  1476  0008               	return
 12612  1477                     __end_of_DISP_Update:
 12613                           
 12614                           	psect	text59
 12615  1BF9                     __ptext59:	
 12616 ;; *************** function _SSD_Dispaly_NULL *****************
 12617 ;; Defined at:
 12618 ;;		line 68 in file "SSD.c"
 12619 ;; Parameters:    Size  Location     Type
 12620 ;;		None
 12621 ;; Auto vars:     Size  Location     Type
 12622 ;;		None
 12623 ;; Return value:  Size  Location     Type
 12624 ;;                  1    wreg      void 
 12625 ;; Registers used:
 12626 ;;		status,2
 12627 ;; Tracked objects:
 12628 ;;		On entry : 0/0
 12629 ;;		On exit  : 0/0
 12630 ;;		Unchanged: 0/0
 12631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12632 ;;      Params:         0       0       0       0       0
 12633 ;;      Locals:         0       0       0       0       0
 12634 ;;      Temps:          0       0       0       0       0
 12635 ;;      Totals:         0       0       0       0       0
 12636 ;;Total ram usage:        0 bytes
 12637 ;; Hardware stack levels used:    1
 12638 ;; This function calls:
 12639 ;;		Nothing
 12640 ;; This function is called by:
 12641 ;;		_DISP_Update
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           
 12645                           
 12646                           ;psect for function _SSD_Dispaly_NULL
 12647  1BF9                     _SSD_Dispaly_NULL:
 12648  1BF9                     i1l4360:	
 12649                           ;incstack = 0
 12650                           ; Regs used in _SSD_Dispaly_NULL: [status,2]
 12651                           
 12652                           
 12653                           ;SSD.c: 70: (((PORTD)) = (0x00));
 12654  1BF9  1283               	bcf	3,5	;RP0=0, select bank0
 12655  1BFA  1303               	bcf	3,6	;RP1=0, select bank0
 12656  1BFB  0188               	clrf	8	;volatile
 12657  1BFC                     i1l244:
 12658  1BFC  0008               	return
 12659  1BFD                     __end_of_SSD_Dispaly_NULL:
 12660                           
 12661                           	psect	text60
 12662  1C28                     __ptext60:	
 12663 ;; *************** function _SSD_Blink *****************
 12664 ;; Defined at:
 12665 ;;		line 108 in file "SSD.c"
 12666 ;; Parameters:    Size  Location     Type
 12667 ;;		None
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;		None
 12670 ;; Return value:  Size  Location     Type
 12671 ;;                  1    wreg      void 
 12672 ;; Registers used:
 12673 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12674 ;; Tracked objects:
 12675 ;;		On entry : 0/0
 12676 ;;		On exit  : 0/0
 12677 ;;		Unchanged: 0/0
 12678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12679 ;;      Params:         0       0       0       0       0
 12680 ;;      Locals:         0       0       0       0       0
 12681 ;;      Temps:          0       0       0       0       0
 12682 ;;      Totals:         0       0       0       0       0
 12683 ;;Total ram usage:        0 bytes
 12684 ;; Hardware stack levels used:    1
 12685 ;; Hardware stack levels required when called:    2
 12686 ;; This function calls:
 12687 ;;		_SSD_Toggle
 12688 ;; This function is called by:
 12689 ;;		_DISP_Update
 12690 ;; This function uses a non-reentrant model
 12691 ;;
 12692                           
 12693                           
 12694                           ;psect for function _SSD_Blink
 12695  1C28                     _SSD_Blink:
 12696  1C28                     i1l4356:	
 12697                           ;incstack = 0
 12698 ;; hardware stack exceeded
 12699                           ; Regs used in _SSD_Blink: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12700                           
 12701                           
 12702                           ;SSD.c: 110: (((PORTD)) = (0x00));
 12703  1C28  1283               	bcf	3,5	;RP0=0, select bank0
 12704  1C29  1303               	bcf	3,6	;RP1=0, select bank0
 12705  1C2A  0188               	clrf	8	;volatile
 12706  1C2B                     i1l4358:
 12707                           
 12708                           ;SSD.c: 111: SSD_Toggle();
 12709  1C2B  160A  158A  24F9  160A  158A  	fcall	_SSD_Toggle
 12710  1C30                     i1l263:
 12711  1C30  0008               	return
 12712  1C31                     __end_of_SSD_Blink:
 12713                           
 12714                           	psect	text61
 12715  1CF9                     __ptext61:	
 12716 ;; *************** function _SSD_Toggle *****************
 12717 ;; Defined at:
 12718 ;;		line 73 in file "SSD.c"
 12719 ;; Parameters:    Size  Location     Type
 12720 ;;		None
 12721 ;; Auto vars:     Size  Location     Type
 12722 ;;		None
 12723 ;; Return value:  Size  Location     Type
 12724 ;;                  1    wreg      void 
 12725 ;; Registers used:
 12726 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12727 ;; Tracked objects:
 12728 ;;		On entry : 0/0
 12729 ;;		On exit  : 0/0
 12730 ;;		Unchanged: 0/0
 12731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12732 ;;      Params:         0       0       0       0       0
 12733 ;;      Locals:         0       0       0       0       0
 12734 ;;      Temps:          0       0       0       0       0
 12735 ;;      Totals:         0       0       0       0       0
 12736 ;;Total ram usage:        0 bytes
 12737 ;; Hardware stack levels used:    1
 12738 ;; Hardware stack levels required when called:    1
 12739 ;; This function calls:
 12740 ;;		_SSD_SetState
 12741 ;; This function is called by:
 12742 ;;		_SSD_Blink
 12743 ;; This function uses a non-reentrant model
 12744 ;;
 12745                           
 12746                           
 12747                           ;psect for function _SSD_Toggle
 12748  1CF9                     _SSD_Toggle:
 12749  1CF9                     i1l3708:	
 12750                           ;incstack = 0
 12751 ;; hardware stack exceeded
 12752                           ; Regs used in _SSD_Toggle: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12753                           
 12754                           
 12755                           ;SSD.c: 75: if(SSD_BLINK_STATE == SSD_ON)
 12756  1CF9  1283               	bcf	3,5	;RP0=0, select bank0
 12757  1CFA  1303               	bcf	3,6	;RP1=0, select bank0
 12758  1CFB  034E               	decf	_SSD_BLINK_STATE,w
 12759  1CFC  1D03               	btfss	3,2
 12760  1CFD  2CFF               	goto	u516_21
 12761  1CFE  2D00               	goto	u516_20
 12762  1CFF                     u516_21:
 12763  1CFF  2D07               	goto	i1l3712
 12764  1D00                     u516_20:
 12765  1D00                     i1l3710:
 12766                           
 12767                           ;SSD.c: 76: {;SSD.c: 77: SSD_SetState(SSD_OFF);
 12768  1D00  3000               	movlw	0
 12769  1D01  160A  158A  2418  160A  158A  	fcall	_SSD_SetState
 12770                           
 12771                           ;SSD.c: 78: }
 12772  1D06  2D0D               	goto	i1l249
 12773  1D07                     i1l3712:
 12774                           
 12775                           ;SSD.c: 79: else;SSD.c: 80: {;SSD.c: 81: SSD_SetState(SSD_ON);
 12776  1D07  3001               	movlw	1
 12777  1D08  160A  158A  2418  160A  158A  	fcall	_SSD_SetState
 12778  1D0D                     i1l249:
 12779  1D0D  0008               	return
 12780  1D0E                     __end_of_SSD_Toggle:
 12781                           
 12782                           	psect	text62
 12783  1C18                     __ptext62:	
 12784 ;; *************** function _SSD_SetState *****************
 12785 ;; Defined at:
 12786 ;;		line 103 in file "SSD.c"
 12787 ;; Parameters:    Size  Location     Type
 12788 ;;  state           1    wreg     enum E885
 12789 ;; Auto vars:     Size  Location     Type
 12790 ;;  state           1    0[COMMON] enum E885
 12791 ;; Return value:  Size  Location     Type
 12792 ;;                  1    wreg      void 
 12793 ;; Registers used:
 12794 ;;		wreg, btemp+1
 12795 ;; Tracked objects:
 12796 ;;		On entry : 0/0
 12797 ;;		On exit  : 0/0
 12798 ;;		Unchanged: 0/0
 12799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12800 ;;      Params:         0       0       0       0       0
 12801 ;;      Locals:         1       0       0       0       0
 12802 ;;      Temps:          0       0       0       0       0
 12803 ;;      Totals:         1       0       0       0       0
 12804 ;;Total ram usage:        1 bytes
 12805 ;; Hardware stack levels used:    1
 12806 ;; This function calls:
 12807 ;;		Nothing
 12808 ;; This function is called by:
 12809 ;;		_SSD_Toggle
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           
 12814                           ;psect for function _SSD_SetState
 12815  1C18                     _SSD_SetState:
 12816                           
 12817                           ;incstack = 0
 12818 ;; hardware stack exceeded
 12819                           ; Regs used in _SSD_SetState: [wreg+btemp+1]
 12820                           ;SSD_SetState@state stored from wreg
 12821  1C18  00F0               	movwf	SSD_SetState@state
 12822  1C19                     i1l3228:
 12823                           
 12824                           ;SSD.c: 105: SSD_BLINK_STATE = state;
 12825  1C19  0870               	movf	SSD_SetState@state,w
 12826  1C1A  00FF               	movwf	btemp+1
 12827  1C1B  087F               	movf	btemp+1,w
 12828  1C1C  1283               	bcf	3,5	;RP0=0, select bank0
 12829  1C1D  1303               	bcf	3,6	;RP1=0, select bank0
 12830  1C1E  00CE               	movwf	_SSD_BLINK_STATE
 12831  1C1F                     i1l260:
 12832  1C1F  0008               	return
 12833  1C20                     __end_of_SSD_SetState:
 12834                           
 12835                           	psect	text63
 12836  1146                     __ptext63:	
 12837 ;; *************** function _DISP_Elements *****************
 12838 ;; Defined at:
 12839 ;;		line 125 in file "SSD.c"
 12840 ;; Parameters:    Size  Location     Type
 12841 ;;  var             1    wreg     unsigned char 
 12842 ;; Auto vars:     Size  Location     Type
 12843 ;;  var             1   12[COMMON] unsigned char 
 12844 ;; Return value:  Size  Location     Type
 12845 ;;                  1    wreg      void 
 12846 ;; Registers used:
 12847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12848 ;; Tracked objects:
 12849 ;;		On entry : 0/0
 12850 ;;		On exit  : 0/0
 12851 ;;		Unchanged: 0/0
 12852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12853 ;;      Params:         0       0       0       0       0
 12854 ;;      Locals:         1       0       0       0       0
 12855 ;;      Temps:          2       0       0       0       0
 12856 ;;      Totals:         3       0       0       0       0
 12857 ;;Total ram usage:        3 bytes
 12858 ;; Hardware stack levels used:    1
 12859 ;; Hardware stack levels required when called:    2
 12860 ;; This function calls:
 12861 ;;		_SSD_OUT
 12862 ;;		___awdiv
 12863 ;;		___awmod
 12864 ;; This function is called by:
 12865 ;;		_DISP_Update
 12866 ;; This function uses a non-reentrant model
 12867 ;;
 12868                           
 12869                           
 12870                           ;psect for function _DISP_Elements
 12871  1146                     _DISP_Elements:
 12872                           
 12873                           ;incstack = 0
 12874 ;; hardware stack exceeded
 12875                           ; Regs used in _DISP_Elements: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12876                           ;DISP_Elements@var stored from wreg
 12877  1146  00FC               	movwf	DISP_Elements@var
 12878  1147                     i1l4346:
 12879                           
 12880                           ;SSD.c: 127: if(Current_SSD == (3))
 12881  1147  3003               	movlw	3
 12882  1148  1283               	bcf	3,5	;RP0=0, select bank0
 12883  1149  1303               	bcf	3,6	;RP1=0, select bank0
 12884  114A  0652               	xorwf	_Current_SSD,w
 12885  114B  0453               	iorwf	_Current_SSD+1,w
 12886  114C  0454               	iorwf	_Current_SSD+2,w
 12887  114D  0455               	iorwf	_Current_SSD+3,w
 12888  114E  1D03               	btfss	3,2
 12889  114F  2951               	goto	u651_21
 12890  1150  2952               	goto	u651_20
 12891  1151                     u651_21:
 12892  1151  2977               	goto	i1l4352
 12893  1152                     u651_20:
 12894  1152                     i1l4348:
 12895                           
 12896                           ;SSD.c: 128: {;SSD.c: 129: SSD_OUT(var /10 , Current_SSD);
 12897  1152  0852               	movf	_Current_SSD,w
 12898  1153  00FF               	movwf	btemp+1
 12899  1154  087F               	movf	btemp+1,w
 12900  1155  00F8               	movwf	SSD_OUT@ssd
 12901  1156  300A               	movlw	10
 12902  1157  00F0               	movwf	___awdiv@divisor
 12903  1158  3000               	movlw	0
 12904  1159  00F1               	movwf	___awdiv@divisor+1
 12905  115A  087C               	movf	DISP_Elements@var,w
 12906  115B  00FA               	movwf	??_DISP_Elements
 12907  115C  01FB               	clrf	??_DISP_Elements+1
 12908  115D  087A               	movf	??_DISP_Elements,w
 12909  115E  00F2               	movwf	___awdiv@dividend
 12910  115F  087B               	movf	??_DISP_Elements+1,w
 12911  1160  00F3               	movwf	___awdiv@dividend+1
 12912  1161  160A  118A  2262  160A  118A  	fcall	___awdiv
 12913  1166  0870               	movf	?___awdiv,w
 12914  1167  160A  158A  254F  160A  118A  	fcall	_SSD_OUT
 12915  116C                     i1l4350:
 12916                           
 12917                           ;SSD.c: 130: Current_SSD = (4);
 12918  116C  3000               	movlw	0
 12919  116D  1283               	bcf	3,5	;RP0=0, select bank0
 12920  116E  1303               	bcf	3,6	;RP1=0, select bank0
 12921  116F  00D5               	movwf	_Current_SSD+3
 12922  1170  3000               	movlw	0
 12923  1171  00D4               	movwf	_Current_SSD+2
 12924  1172  3000               	movlw	0
 12925  1173  00D3               	movwf	_Current_SSD+1
 12926  1174  3004               	movlw	4
 12927  1175  00D2               	movwf	_Current_SSD
 12928                           
 12929                           ;SSD.c: 131: }
 12930  1176  299B               	goto	i1l272
 12931  1177                     i1l4352:
 12932                           
 12933                           ;SSD.c: 132: else;SSD.c: 133: {;SSD.c: 135: SSD_OUT(var % 10 , Current_SSD);
 12934  1177  0852               	movf	_Current_SSD,w
 12935  1178  00FF               	movwf	btemp+1
 12936  1179  087F               	movf	btemp+1,w
 12937  117A  00F8               	movwf	SSD_OUT@ssd
 12938  117B  300A               	movlw	10
 12939  117C  00F0               	movwf	___awmod@divisor
 12940  117D  3000               	movlw	0
 12941  117E  00F1               	movwf	___awmod@divisor+1
 12942  117F  087C               	movf	DISP_Elements@var,w
 12943  1180  00FA               	movwf	??_DISP_Elements
 12944  1181  01FB               	clrf	??_DISP_Elements+1
 12945  1182  087A               	movf	??_DISP_Elements,w
 12946  1183  00F2               	movwf	___awmod@dividend
 12947  1184  087B               	movf	??_DISP_Elements+1,w
 12948  1185  00F3               	movwf	___awmod@dividend+1
 12949  1186  120A  158A  2002  160A  118A  	fcall	___awmod
 12950  118B  0870               	movf	?___awmod,w
 12951  118C  160A  158A  254F  160A  118A  	fcall	_SSD_OUT
 12952  1191                     i1l4354:
 12953                           
 12954                           ;SSD.c: 136: Current_SSD = (3);
 12955  1191  3000               	movlw	0
 12956  1192  1283               	bcf	3,5	;RP0=0, select bank0
 12957  1193  1303               	bcf	3,6	;RP1=0, select bank0
 12958  1194  00D5               	movwf	_Current_SSD+3
 12959  1195  3000               	movlw	0
 12960  1196  00D4               	movwf	_Current_SSD+2
 12961  1197  3000               	movlw	0
 12962  1198  00D3               	movwf	_Current_SSD+1
 12963  1199  3003               	movlw	3
 12964  119A  00D2               	movwf	_Current_SSD
 12965  119B                     i1l272:
 12966  119B  0008               	return
 12967  119C                     __end_of_DISP_Elements:
 12968                           
 12969                           	psect	text64
 12970  0802                     __ptext64:	
 12971 ;; *************** function ___awmod *****************
 12972 ;; Defined at:
 12973 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
 12974 ;; Parameters:    Size  Location     Type
 12975 ;;  divisor         2    0[COMMON] int 
 12976 ;;  dividend        2    2[COMMON] int 
 12977 ;; Auto vars:     Size  Location     Type
 12978 ;;  sign            1    5[COMMON] unsigned char 
 12979 ;;  counter         1    4[COMMON] unsigned char 
 12980 ;; Return value:  Size  Location     Type
 12981 ;;                  2    0[COMMON] int 
 12982 ;; Registers used:
 12983 ;;		wreg, status,2, status,0, btemp+1
 12984 ;; Tracked objects:
 12985 ;;		On entry : 0/0
 12986 ;;		On exit  : 0/0
 12987 ;;		Unchanged: 0/0
 12988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12989 ;;      Params:         4       0       0       0       0
 12990 ;;      Locals:         2       0       0       0       0
 12991 ;;      Temps:          0       0       0       0       0
 12992 ;;      Totals:         6       0       0       0       0
 12993 ;;Total ram usage:        6 bytes
 12994 ;; Hardware stack levels used:    1
 12995 ;; This function calls:
 12996 ;;		Nothing
 12997 ;; This function is called by:
 12998 ;;		_DISP_Elements
 12999 ;; This function uses a non-reentrant model
 13000 ;;
 13001                           
 13002                           
 13003                           ;psect for function ___awmod
 13004  0802                     ___awmod:
 13005  0802                     i1l3856:	
 13006                           ;incstack = 0
 13007 ;; hardware stack exceeded
 13008                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
 13009                           
 13010  0802  01F5               	clrf	___awmod@sign
 13011  0803                     i1l3858:
 13012  0803  1FF3               	btfss	___awmod@dividend+1,7
 13013  0804  2806               	goto	u542_21
 13014  0805  2807               	goto	u542_20
 13015  0806                     u542_21:
 13016  0806  280E               	goto	i1l3864
 13017  0807                     u542_20:
 13018  0807                     i1l3860:
 13019  0807  09F2               	comf	___awmod@dividend,f
 13020  0808  09F3               	comf	___awmod@dividend+1,f
 13021  0809  0AF2               	incf	___awmod@dividend,f
 13022  080A  1903               	skipnz
 13023  080B  0AF3               	incf	___awmod@dividend+1,f
 13024  080C                     i1l3862:
 13025  080C  01F5               	clrf	___awmod@sign
 13026  080D  0AF5               	incf	___awmod@sign,f
 13027  080E                     i1l3864:
 13028  080E  1FF1               	btfss	___awmod@divisor+1,7
 13029  080F  2811               	goto	u543_21
 13030  0810  2812               	goto	u543_20
 13031  0811                     u543_21:
 13032  0811  2817               	goto	i1l3868
 13033  0812                     u543_20:
 13034  0812                     i1l3866:
 13035  0812  09F0               	comf	___awmod@divisor,f
 13036  0813  09F1               	comf	___awmod@divisor+1,f
 13037  0814  0AF0               	incf	___awmod@divisor,f
 13038  0815  1903               	skipnz
 13039  0816  0AF1               	incf	___awmod@divisor+1,f
 13040  0817                     i1l3868:
 13041  0817  0870               	movf	___awmod@divisor,w
 13042  0818  0471               	iorwf	___awmod@divisor+1,w
 13043  0819  1903               	btfsc	3,2
 13044  081A  281C               	goto	u544_21
 13045  081B  281D               	goto	u544_20
 13046  081C                     u544_21:
 13047  081C  284C               	goto	i1l3886
 13048  081D                     u544_20:
 13049  081D                     i1l3870:
 13050  081D  01F4               	clrf	___awmod@counter
 13051  081E  0AF4               	incf	___awmod@counter,f
 13052  081F  282B               	goto	i1l3876
 13053  0820                     i1l3872:
 13054  0820  3001               	movlw	1
 13055  0821                     u545_25:
 13056  0821  1003               	clrc
 13057  0822  0DF0               	rlf	___awmod@divisor,f
 13058  0823  0DF1               	rlf	___awmod@divisor+1,f
 13059  0824  3EFF               	addlw	-1
 13060  0825  1D03               	skipz
 13061  0826  2821               	goto	u545_25
 13062  0827                     i1l3874:
 13063  0827  3001               	movlw	1
 13064  0828  00FF               	movwf	btemp+1
 13065  0829  087F               	movf	btemp+1,w
 13066  082A  07F4               	addwf	___awmod@counter,f
 13067  082B                     i1l3876:
 13068  082B  1FF1               	btfss	___awmod@divisor+1,7
 13069  082C  282E               	goto	u546_21
 13070  082D  282F               	goto	u546_20
 13071  082E                     u546_21:
 13072  082E  2820               	goto	i1l3872
 13073  082F                     u546_20:
 13074  082F                     i1l3878:
 13075  082F  0871               	movf	___awmod@divisor+1,w
 13076  0830  0273               	subwf	___awmod@dividend+1,w
 13077  0831  1D03               	skipz
 13078  0832  2835               	goto	u547_25
 13079  0833  0870               	movf	___awmod@divisor,w
 13080  0834  0272               	subwf	___awmod@dividend,w
 13081  0835                     u547_25:
 13082  0835  1C03               	skipc
 13083  0836  2838               	goto	u547_21
 13084  0837  2839               	goto	u547_20
 13085  0838                     u547_21:
 13086  0838  283F               	goto	i1l3882
 13087  0839                     u547_20:
 13088  0839                     i1l3880:
 13089  0839  0870               	movf	___awmod@divisor,w
 13090  083A  02F2               	subwf	___awmod@dividend,f
 13091  083B  0871               	movf	___awmod@divisor+1,w
 13092  083C  1C03               	skipc
 13093  083D  03F3               	decf	___awmod@dividend+1,f
 13094  083E  02F3               	subwf	___awmod@dividend+1,f
 13095  083F                     i1l3882:
 13096  083F  3001               	movlw	1
 13097  0840                     u548_25:
 13098  0840  1003               	clrc
 13099  0841  0CF1               	rrf	___awmod@divisor+1,f
 13100  0842  0CF0               	rrf	___awmod@divisor,f
 13101  0843  3EFF               	addlw	-1
 13102  0844  1D03               	skipz
 13103  0845  2840               	goto	u548_25
 13104  0846                     i1l3884:
 13105  0846  3001               	movlw	1
 13106  0847  02F4               	subwf	___awmod@counter,f
 13107  0848  1D03               	btfss	3,2
 13108  0849  284B               	goto	u549_21
 13109  084A  284C               	goto	u549_20
 13110  084B                     u549_21:
 13111  084B  282F               	goto	i1l3878
 13112  084C                     u549_20:
 13113  084C                     i1l3886:
 13114  084C  0875               	movf	___awmod@sign,w
 13115  084D  1903               	btfsc	3,2
 13116  084E  2850               	goto	u550_21
 13117  084F  2851               	goto	u550_20
 13118  0850                     u550_21:
 13119  0850  2856               	goto	i1l3890
 13120  0851                     u550_20:
 13121  0851                     i1l3888:
 13122  0851  09F2               	comf	___awmod@dividend,f
 13123  0852  09F3               	comf	___awmod@dividend+1,f
 13124  0853  0AF2               	incf	___awmod@dividend,f
 13125  0854  1903               	skipnz
 13126  0855  0AF3               	incf	___awmod@dividend+1,f
 13127  0856                     i1l3890:
 13128  0856  0873               	movf	___awmod@dividend+1,w
 13129  0857  00F1               	movwf	?___awmod+1
 13130  0858  0872               	movf	___awmod@dividend,w
 13131  0859  00F0               	movwf	?___awmod
 13132  085A                     i1l862:
 13133  085A  0008               	return
 13134  085B                     __end_of___awmod:
 13135                           
 13136                           	psect	text65
 13137  1262                     __ptext65:	
 13138 ;; *************** function ___awdiv *****************
 13139 ;; Defined at:
 13140 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
 13141 ;; Parameters:    Size  Location     Type
 13142 ;;  divisor         2    0[COMMON] int 
 13143 ;;  dividend        2    2[COMMON] int 
 13144 ;; Auto vars:     Size  Location     Type
 13145 ;;  quotient        2    6[COMMON] int 
 13146 ;;  sign            1    5[COMMON] unsigned char 
 13147 ;;  counter         1    4[COMMON] unsigned char 
 13148 ;; Return value:  Size  Location     Type
 13149 ;;                  2    0[COMMON] int 
 13150 ;; Registers used:
 13151 ;;		wreg, status,2, status,0, btemp+1
 13152 ;; Tracked objects:
 13153 ;;		On entry : 0/0
 13154 ;;		On exit  : 0/0
 13155 ;;		Unchanged: 0/0
 13156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13157 ;;      Params:         4       0       0       0       0
 13158 ;;      Locals:         4       0       0       0       0
 13159 ;;      Temps:          0       0       0       0       0
 13160 ;;      Totals:         8       0       0       0       0
 13161 ;;Total ram usage:        8 bytes
 13162 ;; Hardware stack levels used:    1
 13163 ;; This function calls:
 13164 ;;		Nothing
 13165 ;; This function is called by:
 13166 ;;		_DISP_Elements
 13167 ;; This function uses a non-reentrant model
 13168 ;;
 13169                           
 13170                           
 13171                           ;psect for function ___awdiv
 13172  1262                     ___awdiv:
 13173  1262                     i1l3812:	
 13174                           ;incstack = 0
 13175 ;; hardware stack exceeded
 13176                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
 13177                           
 13178  1262  01F5               	clrf	___awdiv@sign
 13179  1263                     i1l3814:
 13180  1263  1FF1               	btfss	___awdiv@divisor+1,7
 13181  1264  2A66               	goto	u532_21
 13182  1265  2A67               	goto	u532_20
 13183  1266                     u532_21:
 13184  1266  2A6E               	goto	i1l3820
 13185  1267                     u532_20:
 13186  1267                     i1l3816:
 13187  1267  09F0               	comf	___awdiv@divisor,f
 13188  1268  09F1               	comf	___awdiv@divisor+1,f
 13189  1269  0AF0               	incf	___awdiv@divisor,f
 13190  126A  1903               	skipnz
 13191  126B  0AF1               	incf	___awdiv@divisor+1,f
 13192  126C                     i1l3818:
 13193  126C  01F5               	clrf	___awdiv@sign
 13194  126D  0AF5               	incf	___awdiv@sign,f
 13195  126E                     i1l3820:
 13196  126E  1FF3               	btfss	___awdiv@dividend+1,7
 13197  126F  2A71               	goto	u533_21
 13198  1270  2A72               	goto	u533_20
 13199  1271                     u533_21:
 13200  1271  2A7B               	goto	i1l3826
 13201  1272                     u533_20:
 13202  1272                     i1l3822:
 13203  1272  09F2               	comf	___awdiv@dividend,f
 13204  1273  09F3               	comf	___awdiv@dividend+1,f
 13205  1274  0AF2               	incf	___awdiv@dividend,f
 13206  1275  1903               	skipnz
 13207  1276  0AF3               	incf	___awdiv@dividend+1,f
 13208  1277                     i1l3824:
 13209  1277  3001               	movlw	1
 13210  1278  00FF               	movwf	btemp+1
 13211  1279  087F               	movf	btemp+1,w
 13212  127A  06F5               	xorwf	___awdiv@sign,f
 13213  127B                     i1l3826:
 13214  127B  01F6               	clrf	___awdiv@quotient
 13215  127C  01F7               	clrf	___awdiv@quotient+1
 13216  127D                     i1l3828:
 13217  127D  0870               	movf	___awdiv@divisor,w
 13218  127E  0471               	iorwf	___awdiv@divisor+1,w
 13219  127F  1903               	btfsc	3,2
 13220  1280  2A82               	goto	u534_21
 13221  1281  2A83               	goto	u534_20
 13222  1282                     u534_21:
 13223  1282  2ABA               	goto	i1l3848
 13224  1283                     u534_20:
 13225  1283                     i1l3830:
 13226  1283  01F4               	clrf	___awdiv@counter
 13227  1284  0AF4               	incf	___awdiv@counter,f
 13228  1285  2A91               	goto	i1l3836
 13229  1286                     i1l3832:
 13230  1286  3001               	movlw	1
 13231  1287                     u535_25:
 13232  1287  1003               	clrc
 13233  1288  0DF0               	rlf	___awdiv@divisor,f
 13234  1289  0DF1               	rlf	___awdiv@divisor+1,f
 13235  128A  3EFF               	addlw	-1
 13236  128B  1D03               	skipz
 13237  128C  2A87               	goto	u535_25
 13238  128D                     i1l3834:
 13239  128D  3001               	movlw	1
 13240  128E  00FF               	movwf	btemp+1
 13241  128F  087F               	movf	btemp+1,w
 13242  1290  07F4               	addwf	___awdiv@counter,f
 13243  1291                     i1l3836:
 13244  1291  1FF1               	btfss	___awdiv@divisor+1,7
 13245  1292  2A94               	goto	u536_21
 13246  1293  2A95               	goto	u536_20
 13247  1294                     u536_21:
 13248  1294  2A86               	goto	i1l3832
 13249  1295                     u536_20:
 13250  1295                     i1l3838:
 13251  1295  3001               	movlw	1
 13252  1296                     u537_25:
 13253  1296  1003               	clrc
 13254  1297  0DF6               	rlf	___awdiv@quotient,f
 13255  1298  0DF7               	rlf	___awdiv@quotient+1,f
 13256  1299  3EFF               	addlw	-1
 13257  129A  1D03               	skipz
 13258  129B  2A96               	goto	u537_25
 13259  129C  0871               	movf	___awdiv@divisor+1,w
 13260  129D  0273               	subwf	___awdiv@dividend+1,w
 13261  129E  1D03               	skipz
 13262  129F  2AA2               	goto	u538_25
 13263  12A0  0870               	movf	___awdiv@divisor,w
 13264  12A1  0272               	subwf	___awdiv@dividend,w
 13265  12A2                     u538_25:
 13266  12A2  1C03               	skipc
 13267  12A3  2AA5               	goto	u538_21
 13268  12A4  2AA6               	goto	u538_20
 13269  12A5                     u538_21:
 13270  12A5  2AAD               	goto	i1l3844
 13271  12A6                     u538_20:
 13272  12A6                     i1l3840:
 13273  12A6  0870               	movf	___awdiv@divisor,w
 13274  12A7  02F2               	subwf	___awdiv@dividend,f
 13275  12A8  0871               	movf	___awdiv@divisor+1,w
 13276  12A9  1C03               	skipc
 13277  12AA  03F3               	decf	___awdiv@dividend+1,f
 13278  12AB  02F3               	subwf	___awdiv@dividend+1,f
 13279  12AC                     i1l3842:
 13280  12AC  1476               	bsf	___awdiv@quotient,0
 13281  12AD                     i1l3844:
 13282  12AD  3001               	movlw	1
 13283  12AE                     u539_25:
 13284  12AE  1003               	clrc
 13285  12AF  0CF1               	rrf	___awdiv@divisor+1,f
 13286  12B0  0CF0               	rrf	___awdiv@divisor,f
 13287  12B1  3EFF               	addlw	-1
 13288  12B2  1D03               	skipz
 13289  12B3  2AAE               	goto	u539_25
 13290  12B4                     i1l3846:
 13291  12B4  3001               	movlw	1
 13292  12B5  02F4               	subwf	___awdiv@counter,f
 13293  12B6  1D03               	btfss	3,2
 13294  12B7  2AB9               	goto	u540_21
 13295  12B8  2ABA               	goto	u540_20
 13296  12B9                     u540_21:
 13297  12B9  2A95               	goto	i1l3838
 13298  12BA                     u540_20:
 13299  12BA                     i1l3848:
 13300  12BA  0875               	movf	___awdiv@sign,w
 13301  12BB  1903               	btfsc	3,2
 13302  12BC  2ABE               	goto	u541_21
 13303  12BD  2ABF               	goto	u541_20
 13304  12BE                     u541_21:
 13305  12BE  2AC4               	goto	i1l3852
 13306  12BF                     u541_20:
 13307  12BF                     i1l3850:
 13308  12BF  09F6               	comf	___awdiv@quotient,f
 13309  12C0  09F7               	comf	___awdiv@quotient+1,f
 13310  12C1  0AF6               	incf	___awdiv@quotient,f
 13311  12C2  1903               	skipnz
 13312  12C3  0AF7               	incf	___awdiv@quotient+1,f
 13313  12C4                     i1l3852:
 13314  12C4  0877               	movf	___awdiv@quotient+1,w
 13315  12C5  00F1               	movwf	?___awdiv+1
 13316  12C6  0876               	movf	___awdiv@quotient,w
 13317  12C7  00F0               	movwf	?___awdiv
 13318  12C8                     i1l849:
 13319  12C8  0008               	return
 13320  12C9                     __end_of___awdiv:
 13321                           
 13322                           	psect	text66
 13323  1D4F                     __ptext66:	
 13324 ;; *************** function _SSD_OUT *****************
 13325 ;; Defined at:
 13326 ;;		line 114 in file "SSD.c"
 13327 ;; Parameters:    Size  Location     Type
 13328 ;;  Data            1    wreg     unsigned char 
 13329 ;;  ssd             1    8[COMMON] unsigned char 
 13330 ;; Auto vars:     Size  Location     Type
 13331 ;;  Data            1    9[COMMON] unsigned char 
 13332 ;; Return value:  Size  Location     Type
 13333 ;;                  1    wreg      void 
 13334 ;; Registers used:
 13335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13336 ;; Tracked objects:
 13337 ;;		On entry : 0/0
 13338 ;;		On exit  : 0/0
 13339 ;;		Unchanged: 0/0
 13340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13341 ;;      Params:         1       0       0       0       0
 13342 ;;      Locals:         1       0       0       0       0
 13343 ;;      Temps:          0       0       0       0       0
 13344 ;;      Totals:         2       0       0       0       0
 13345 ;;Total ram usage:        2 bytes
 13346 ;; Hardware stack levels used:    1
 13347 ;; Hardware stack levels required when called:    1
 13348 ;; This function calls:
 13349 ;;		_SSD_SetSSD
 13350 ;; This function is called by:
 13351 ;;		_DISP_Elements
 13352 ;; This function uses a non-reentrant model
 13353 ;;
 13354                           
 13355                           
 13356                           ;psect for function _SSD_OUT
 13357  1D4F                     _SSD_OUT:
 13358                           
 13359                           ;incstack = 0
 13360 ;; hardware stack exceeded
 13361                           ; Regs used in _SSD_OUT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13362                           ;SSD_OUT@Data stored from wreg
 13363  1D4F  00F9               	movwf	SSD_OUT@Data
 13364  1D50                     i1l3714:
 13365                           
 13366                           ;SSD.c: 116: if(SSD_BLINK_STATE == SSD_OFF)
 13367  1D50  1283               	bcf	3,5	;RP0=0, select bank0
 13368  1D51  1303               	bcf	3,6	;RP1=0, select bank0
 13369  1D52  084E               	movf	_SSD_BLINK_STATE,w
 13370  1D53  1D03               	btfss	3,2
 13371  1D54  2D56               	goto	u517_21
 13372  1D55  2D57               	goto	u517_20
 13373  1D56                     u517_21:
 13374  1D56  2D65               	goto	i1l267
 13375  1D57                     u517_20:
 13376  1D57                     i1l3716:
 13377                           
 13378                           ;SSD.c: 117: {;SSD.c: 118: SSD_SetSSD(ssd);
 13379  1D57  0878               	movf	SSD_OUT@ssd,w
 13380  1D58  160A  158A  25B1  160A  158A  	fcall	_SSD_SetSSD
 13381  1D5D                     i1l3718:
 13382                           
 13383                           ;SSD.c: 119: (((PORTD)) = (SSD_map[Data]));
 13384  1D5D  0879               	movf	SSD_OUT@Data,w
 13385  1D5E  3ECD               	addlw	(low (_SSD_map| (0+256)))& (0+255)
 13386  1D5F  0084               	movwf	4
 13387  1D60  1783               	bsf	3,7	;select IRP bank3
 13388  1D61  0800               	movf	0,w
 13389  1D62  1283               	bcf	3,5	;RP0=0, select bank0
 13390  1D63  1303               	bcf	3,6	;RP1=0, select bank0
 13391  1D64  0088               	movwf	8	;volatile
 13392  1D65                     i1l267:
 13393  1D65  0008               	return
 13394  1D66                     __end_of_SSD_OUT:
 13395                           
 13396                           	psect	text67
 13397  1DB1                     __ptext67:	
 13398 ;; *************** function _SSD_SetSSD *****************
 13399 ;; Defined at:
 13400 ;;		line 85 in file "SSD.c"
 13401 ;; Parameters:    Size  Location     Type
 13402 ;;  ssd             1    wreg     unsigned char 
 13403 ;; Auto vars:     Size  Location     Type
 13404 ;;  ssd             1    0[COMMON] unsigned char 
 13405 ;; Return value:  Size  Location     Type
 13406 ;;                  1    wreg      void 
 13407 ;; Registers used:
 13408 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13409 ;; Tracked objects:
 13410 ;;		On entry : 0/0
 13411 ;;		On exit  : 0/0
 13412 ;;		Unchanged: 0/0
 13413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13414 ;;      Params:         0       0       0       0       0
 13415 ;;      Locals:         1       0       0       0       0
 13416 ;;      Temps:          0       0       0       0       0
 13417 ;;      Totals:         1       0       0       0       0
 13418 ;;Total ram usage:        1 bytes
 13419 ;; Hardware stack levels used:    1
 13420 ;; This function calls:
 13421 ;;		Nothing
 13422 ;; This function is called by:
 13423 ;;		_SSD_OUT
 13424 ;; This function uses a non-reentrant model
 13425 ;;
 13426                           
 13427                           
 13428                           ;psect for function _SSD_SetSSD
 13429  1DB1                     _SSD_SetSSD:
 13430                           
 13431                           ;incstack = 0
 13432 ;; hardware stack exceeded
 13433                           ; Regs used in _SSD_SetSSD: [wreg-fsr0h+status,2+status,0]
 13434                           ;SSD_SetSSD@ssd stored from wreg
 13435  1DB1  00F0               	movwf	SSD_SetSSD@ssd
 13436  1DB2                     i1l3230:
 13437                           
 13438                           ;SSD.c: 87: switch(ssd)
 13439  1DB2  2DC7               	goto	i1l3238
 13440  1DB3                     i1l3232:
 13441                           
 13442                           ;SSD.c: 90: (((PORTA)) = ((((PORTA)) & (~1<<(4)))) | (SSD_OFF << (4)));
 13443  1DB3  1283               	bcf	3,5	;RP0=0, select bank0
 13444  1DB4  1303               	bcf	3,6	;RP1=0, select bank0
 13445  1DB5  0805               	movf	5,w	;volatile
 13446  1DB6  39E0               	andlw	224
 13447  1DB7  0085               	movwf	5	;volatile
 13448                           
 13449                           ;SSD.c: 91: (((PORTA)) = ((((PORTA)) & (~1<<(3)))) | (SSD_ON << (3)));
 13450  1DB8  0805               	movf	5,w	;volatile
 13451  1DB9  39F0               	andlw	240
 13452  1DBA  3808               	iorlw	8
 13453  1DBB  0085               	movwf	5	;volatile
 13454                           
 13455                           ;SSD.c: 92: break;
 13456  1DBC  2DCF               	goto	i1l257
 13457  1DBD                     i1l3234:
 13458                           
 13459                           ;SSD.c: 94: (((PORTA)) = ((((PORTA)) & (~1<<(3)))) | (SSD_OFF << (3)));
 13460  1DBD  1283               	bcf	3,5	;RP0=0, select bank0
 13461  1DBE  1303               	bcf	3,6	;RP1=0, select bank0
 13462  1DBF  0805               	movf	5,w	;volatile
 13463  1DC0  39F0               	andlw	240
 13464  1DC1  0085               	movwf	5	;volatile
 13465                           
 13466                           ;SSD.c: 95: (((PORTA)) = ((((PORTA)) & (~1<<(4)))) | (SSD_ON << (4)));
 13467  1DC2  0805               	movf	5,w	;volatile
 13468  1DC3  39E0               	andlw	224
 13469  1DC4  3810               	iorlw	16
 13470  1DC5  0085               	movwf	5	;volatile
 13471                           
 13472                           ;SSD.c: 96: break;
 13473  1DC6  2DCF               	goto	i1l257
 13474  1DC7                     i1l3238:
 13475  1DC7  0870               	movf	SSD_SetSSD@ssd,w
 13476                           
 13477                           ; Switch size 1, requested type "simple"
 13478                           ; Number of cases is 2, Range of values is 3 to 4
 13479                           ; switch strategies available:
 13480                           ; Name         Instructions Cycles
 13481                           ; simple_byte            7     4 (average)
 13482                           ; direct_byte           17    11 (fixed)
 13483                           ; jumptable            263     9 (fixed)
 13484                           ;	Chosen strategy is simple_byte
 13485  1DC8  3A03               	xorlw	3	; case 3
 13486  1DC9  1903               	skipnz
 13487  1DCA  2DB3               	goto	i1l3232
 13488  1DCB  3A07               	xorlw	7	; case 4
 13489  1DCC  1903               	skipnz
 13490  1DCD  2DBD               	goto	i1l3234
 13491  1DCE  2DCF               	goto	i1l257
 13492  1DCF                     i1l257:
 13493  1DCF  0008               	return
 13494  1DD0                     __end_of_SSD_SetSSD:
 13495  007E                     btemp	set	126	;btemp
 13496  007E                     wtemp0	set	126
 13497                           
 13498                           	psect	config
 13499                           
 13500                           ;Config register CONFIG @ 0x2007
 13501                           ;	Oscillator Selection bits
 13502                           ;	FOSC = XT, XT oscillator
 13503                           ;	Watchdog Timer Enable bit
 13504                           ;	WDTE = OFF, WDT disabled
 13505                           ;	Power-up Timer Enable bit
 13506                           ;	PWRTE = ON, PWRT enabled
 13507                           ;	Brown-out Reset Enable bit
 13508                           ;	BOREN = ON, BOR enabled
 13509                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 13510                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 13511                           ;	Data EEPROM Memory Code Protection bit
 13512                           ;	CPD = OFF, Data EEPROM code protection off
 13513                           ;	Flash Program Memory Write Enable bits
 13514                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 13515                           ;	In-Circuit Debugger Mode bit
 13516                           ;	DEBUG = 0x1, unprogrammed default
 13517                           ;	Flash Program Memory Code Protection bit
 13518                           ;	CP = OFF, Code protection off
 13519  2007                     	org	8199
 13520  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         67
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      57
    BANK1            80     78      80
    BANK3            96     16      71
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _TMR_Update in COMMON

    _WH_Update->_WH_Turn_On_Off
    _WH_Set_temp->_SW_GetState
    _WH_Save_Last_Temp->_EEPROM_Write
    _EEPROM_Write->_I2C_Write
    _get_temp_after_reset->_EEPROM_Read
    _EEPROM_Read->_I2C_Write
    _Update_Global_counter->_SW_GetState
    _SW_GetState->i1___bmul
    _Temp_ten_average->i1___lldiv
    _Get_temp->i1___xxtofl
    i1___fltol->i1___fldiv
    i1___flmul->i1___xxtofl
    _SW_Update->i1___bmul
    _LED_Update->_Led_Off
    _LED_Update->_Led_on
    _DISP_Update->_DISP_Elements
    _SSD_Toggle->_SSD_SetState
    _DISP_Elements->_SSD_OUT
    _SSD_OUT->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR_Update in BANK0

    _Get_temp->i1___flmul
    i1___fltol->i1___fldiv

Critical Paths under _main in BANK1

    _Timer_update_reg->___fltol
    ___fltol->___flsub
    ___flsub->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _SW_Init->___bmul
    _I2C_Master_init->___lldiv

Critical Paths under _TMR_Update in BANK1

    None.

Critical Paths under _main in BANK3

    _OS_init->_Timer_Start
    _Timer_Start->_Timer_update_reg
    _Timer_update_reg->___fltol

Critical Paths under _TMR_Update in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR_Update in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11474
                            _OS_init
 ---------------------------------------------------------------------------------
 (1) _OS_init                                              0     0      0   11474
                           _ADC_INIT
                    _I2C_Master_init
                           _Led_init
                           _SDD_Init
                            _SW_Init
                        _Timer_Start
                         _Timer_init
                         _WH_CL_Init
 ---------------------------------------------------------------------------------
 (2) _WH_CL_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer_Start                                          1     1      0   10244
                                             15 BANK3      1     1      0
                   _Timer_update_reg
 ---------------------------------------------------------------------------------
 (3) _Timer_update_reg                                     9     9      0   10213
                                              6 BANK3      9     9      0
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     621
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     482
                                             74 BANK1      4     0      4
                                              0 BANK3      6     6      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3367
                                             66 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    3122
                                              0 BANK1     20    12      8
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    3643
                                             14 BANK1     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1973
                                             40 BANK1     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _SW_Init                                              1     1      0     541
                                              3 BANK1      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     377
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (2) _SDD_Init                                             2     2      0      37
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Led_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_init                                      8     4      4     652
                                             14 BANK1      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     531
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TMR_Update                                           4     4      0    8078
                                             26 BANK0      4     4      0
                        _DISP_Update
                         _LED_Update
                          _SW_Update
                  _Tmepreture_Update
              _Update_Global_counter
                     _Update_OS_Mode
                          _WH_Update
 ---------------------------------------------------------------------------------
 (7) _WH_Update                                            0     0      0    1364
                      _Check_WH_mode
                  _WH_Save_Last_Temp
                        _WH_Set_temp
                     _WH_Turn_On_Off
 ---------------------------------------------------------------------------------
 (8) _WH_Turn_On_Off                                       6     6      0       0
                                              0 COMMON     6     6      0
                      _COOL_turn_off
                       _COOL_turn_on
                        _WH_turn_off
                         _WH_turn_on
 ---------------------------------------------------------------------------------
 (9) _WH_turn_on                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _COOL_turn_on                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _WH_Set_temp                                          0     0      0     422
                        _SW_GetState
 ---------------------------------------------------------------------------------
 (8) _WH_Save_Last_Temp                                    0     0      0     286
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (9) _EEPROM_Write                                         5     2      3     286
                                              1 COMMON     5     2      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (8) _Check_WH_mode                                        0     0      0     656
                      _COOL_turn_off
                        _SW_GetState
                         _WH_Disable
                        _WH_turn_off
               _get_temp_after_reset
 ---------------------------------------------------------------------------------
 (9) _get_temp_after_reset                                 0     0      0     234
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (10) _EEPROM_Read                                         5     3      2     234
                                              1 COMMON     5     3      2
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (10) _I2C_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C_Stop                                            0     0      0       0
                      _I2C_Wait_idle
 ---------------------------------------------------------------------------------
 (10) _I2C_Start                                           0     0      0       0
                      _I2C_Wait_idle
 ---------------------------------------------------------------------------------
 (11) _I2C_Read                                            0     0      0       0
                      _I2C_Wait_idle
 ---------------------------------------------------------------------------------
 (11) _I2C_Wait_idle                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _WH_Disable                                           0     0      0       0
                      _COOL_turn_off
                        _WH_turn_off
 ---------------------------------------------------------------------------------
 (9) _WH_turn_off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _COOL_turn_off                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Update_OS_Mode                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Update_Global_counter                                0     0      0     422
                        _SW_GetState
 ---------------------------------------------------------------------------------
 (9) _SW_GetState                                          1     1      0     422
                                              3 COMMON     1     1      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (7) _Tmepreture_Update                                    0     0      0    3947
                           _Get_temp
                   _Temp_ten_average
 ---------------------------------------------------------------------------------
 (8) _Temp_ten_average                                     4     4      0     214
                                              0 BANK0      4     4      0
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (9) i1___lldiv                                           14     6      8     214
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (8) _Get_temp                                             0     0      0    3733
                           _ADC_Read
                          i1___fldiv
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (9) i1___xxtofl                                          14    10      4     348
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (9) i1___fltol                                           10     6      4     255
                                             13 BANK0     10     6      4
                          i1___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___flmul                                           26    18      8    1867
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) i1__Umul8_16                                         9     7      2     349
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (9) i1___fldiv                                           26    18      8    1173
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (9) _ADC_Read                                             6     4      2      90
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _SW_Update                                            2     2      0    1051
                                              3 COMMON     2     2      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (10) i1___bmul                                            3     2      1     391
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (7) _LED_Update                                           0     0      0     110
                            _Led_Off
                         _Led_Toggle
                             _Led_on
 ---------------------------------------------------------------------------------
 (8) _Led_on                                               3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _Led_Toggle                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _Led_Off                                              3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) _DISP_Update                                          0     0      0    1184
                      _DISP_Elements
                          _SSD_Blink
                   _SSD_Dispaly_NULL
 ---------------------------------------------------------------------------------
 (8) _SSD_Dispaly_NULL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _SSD_Blink                                            0     0      0      22
                         _SSD_Toggle
 ---------------------------------------------------------------------------------
 (9) _SSD_Toggle                                           0     0      0      22
                       _SSD_SetState
 ---------------------------------------------------------------------------------
 (10) _SSD_SetState                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _DISP_Elements                                        3     3      0    1162
                                             10 COMMON     3     3      0
                            _SSD_OUT
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _SSD_OUT                                              2     1      1     218
                                              8 COMMON     2     1      1
                         _SSD_SetSSD
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) _SSD_SetSSD                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OS_init
     _ADC_INIT
     _I2C_Master_init
       ___lldiv
     _Led_init
     _SDD_Init
     _SW_Init
       ___bmul
     _Timer_Start
       _Timer_update_reg
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _Timer_init
     _WH_CL_Init

 _TMR_Update (ROOT)
   _DISP_Update
     _DISP_Elements
       _SSD_OUT
         _SSD_SetSSD
         ___awdiv (ARG)
         ___awmod (ARG)
       ___awdiv
       ___awmod
     _SSD_Blink
       _SSD_Toggle
         _SSD_SetState
     _SSD_Dispaly_NULL
   _LED_Update
     _Led_Off
     _Led_Toggle
     _Led_on
   _SW_Update
     i1___bmul
   _Tmepreture_Update
     _Get_temp
       _ADC_Read
       i1___fldiv
       i1___flmul
         i1__Umul8_16
         i1___xxtofl (ARG)
       i1___fltol
         i1___fldiv (ARG)
       i1___xxtofl
     _Temp_ten_average
       i1___lldiv
   _Update_Global_counter
     _SW_GetState
       i1___bmul
   _Update_OS_Mode
   _WH_Update
     _Check_WH_mode
       _COOL_turn_off
       _SW_GetState
         i1___bmul
       _WH_Disable
         _COOL_turn_off
         _WH_turn_off
       _WH_turn_off
       _get_temp_after_reset
         _EEPROM_Read
           _I2C_Read
             _I2C_Wait_idle
           _I2C_Start
             _I2C_Wait_idle
           _I2C_Stop
             _I2C_Wait_idle
           _I2C_Write
     _WH_Save_Last_Temp
       _EEPROM_Write
         _I2C_Start
           _I2C_Wait_idle
         _I2C_Stop
           _I2C_Wait_idle
         _I2C_Write
     _WH_Set_temp
       _SW_GetState
         i1___bmul
     _WH_Turn_On_Off
       _COOL_turn_off
       _COOL_turn_on
       _WH_turn_off
       _WH_turn_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     10      47       9       74.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4E      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      39       5       71.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      DE      12        0.0%
ABS                  0      0      DE       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Jul 24 19:42:06 2020

                    _SSD_SetSSD 1DB1                   ?_COOL_turn_on 0070                    ___fldiv@aexp 00E1  
                  ___fldiv@bexp 00E0                  ?_COOL_turn_off 0070                               pc 0002  
                    _SSD_Toggle 1CF9                    ___fldiv@sign 00D9                  ___bmul@product 00A1  
            __size_of_I2C_Start 0009                     i1___fldiv@a 0070                     i1___fldiv@b 0074  
                    _WH_CL_Init 1C5E              __size_of_I2C_Write 0010             __end_of_SW_GetState 1CA1  
                            l31 1C6C                              l32 1C6C                              l37 1FBD  
                            _GO 00FA                    ___awdiv@sign 0075                     i1___flmul@a 0024  
                   i1___flmul@b 0020                              fsr 0004                ??_Update_OS_Mode 0070  
           __Umul8_16@word_mpld 00A6                    _SSD_SetState 1C18                      _TMR_Update 1EC6  
                    i1___xxtofl 168A                             l123 1CD2                             l313 1C02  
                           l322 07E0                             l227 1C78                             l164 1EC5  
                           l228 1C79                             l324 07E6                             l316 1D4E  
                           l503 1C66                     ?_LED_Update 0070                             l722 07FD  
                           l378 1145                             l732 1330                             l591 1C5D  
                           l882 1689                             l892 1689                             l993 0E82  
                           l889 1672                             l995 0E59                             _GIE 005F  
                           l989 0DDB                             _RD1 0041                             _RD2 0042  
                           _RD4 0044                             _RD5 0045                             _RD6 0046  
                           _RD7 0047                             _PEN 048A                             _SEN 0488  
                           fsr0 0004                             indf 0000                    i1___fltol@f1 002D  
                  ___awmod@sign 0075                    ___flmul@aexp 00BC                    ___flmul@bexp 00C1  
                    _WH_Disable 1DD0                    ___flmul@sign 00BB                    ___flmul@temp 00C6  
                  ___flmul@prod 00C2                   i1___fldiv@grs 0027                   i1___fldiv@rem 0020  
              _Temp_ten_average 139B                    ___fltol@exp1 01C2                            l1010 0F4D  
                          l1002 0FFF                            l1020 0F93                            l1014 0F71  
                          l1031 0FF3                            l1104 1E7D                            l1032 0FFF  
                          l1106 1E8F                            l1035 1E17                            l1131 17FF  
                          l1061 0B06                            l1045 0A14                            l1142 17C9  
                          l1047 0B94                            l1143 17D5                            l1129 1768  
                          l1091 0317                            l1069 0B88                            l1085 03AB  
                          l1097 039F                            l5000 0AB5                            l5010 0AD2  
                          l5002 0AB9                            l5020 0AEA                            l5012 0AD6  
                          l5004 0ABF                            l5100 00A5                            l5030 0B0B  
                          l5022 0AEB                            l5014 0AD7                            l5006 0AC7  
                          l5110 00C8                            l5102 00AA                            l5032 0B10  
                          l5040 0B41                            l5024 0AEF                            l5016 0AE0  
                          l5008 0AC9                            l5200 0398                            l5120 0156  
                          l5112 00D5                            l5104 00AF                            l5050 0B77  
                          l5042 0B4E                            l5034 0B1E                            l5026 0B03  
                          l5018 0AE6                            l5202 03A3                            l5130 01B8  
                          l5122 0172                            l5114 00F2                            l5210 1750  
                          l5300 1319                            l5052 0B78                            l5044 0B5C  
                          l5036 0B22                            l5140 0248                            l5132 01D5  
                          l5124 017B                            l5116 010E                            l5108 00B8  
                          l5220 177E                            l5212 1760                            l5310 1CC2  
                          l5302 1322                            l5054 0B7E                            l5046 0B6B  
                          l5038 0B3B                            l5150 02DA                            l5142 0275  
                          l5134 01EE                            l5126 018B                            l5118 013A  
                          l5070 005C                            l5230 17A4                            l5222 1782  
                          l5214 1770                            l5206 1747                            l5304 1328  
                          l5320 1EC3                            l5312 1E90                            l5056 0B82  
                          l5048 0B6F                            l5152 02E3                            l5160 02F7  
                          l5144 029B                            l5136 020B                            l5128 01A8  
                          l5080 0071                            l5072 005D                            l5064 004B  
                          l5240 17CD                            l5232 17AD                            l5224 178B  
                          l5208 174C                            l5322 1EC4                            l5314 1E94  
                          l5330 10FE                            l5058 0B84                            l5162 02FB  
                          l5154 02E7                            l5146 02C3                            l5138 0238  
                          l5090 0089                            l5082 0079                            l5074 0062  
                          l5066 0052                            l5250 17F7                            l5242 17D7  
                          l5234 17B4                            l5226 1792                            l5218 1779  
                          l5316 1E97                            l5324 1C70                            l5340 1109  
                          l5332 10FE                            l5180 034C                            l5172 031C  
                          l5164 02FC                            l5156 02E8                            l5148 02CC  
                          l5092 008E                            l5084 007E                            l5076 0067  
                          l5068 0058                            l4700 0DD1                            l5244 17ED  
                          l5236 17BF                            l5228 1796                            l5260 07D5  
                          l5308 1BFD                            l5318 1EC2                            l5326 1C78  
                          l5270 07EF                            l5342 1139                            l5334 1104  
                          l5190 0383                            l5174 0321                            l5182 0352  
                          l5166 0300                            l5158 02F1                            l5094 0093  
                          l5086 0084                            l5078 006F                            l4710 0DED  
                          l4702 0DD3                            l5246 17F2                            l5238 17C3  
                          l5254 0710                            l5350 1D3C                            l5430 1FA0  
                          l5422 1F7D                            l5272 07F3                            l5344 113F  
                          l5192 0385                            l5184 035F                            l5176 032F  
                          l5168 0314                            l5096 009B                            l5088 0088  
                          l4800 0F55                            l4720 0E01                            l4712 0DF1  
                          l4704 0DE1                            l5248 17F6                            l5256 0715  
                          l5360 1D4B                            l5352 1D3E                            l5440 1FB9  
                          l5432 1FA5                            l5424 1F87                            l5290 12EB  
                          l5282 12C9                            l5274 07F5                            l5266 07EA  
                          l5194 038B                            l5186 036A                            l5178 0333  
                          l5098 009D                            l4810 0F70                            l4802 0F5A  
                          l4730 0E15                            l4722 0E05                            l4714 0DF5  
                          l4706 0DE5                            l5258 071B                            l5354 1D44  
                          l5346 1C5E                            l5434 1FAA                            l5426 1F96  
                          l5292 12EF                            l5284 12DB                            l5348 1C55  
                          l5276 07F7                            l5268 07EB                            l5196 0393  
                          l5188 0379                            l4812 0F75                            l4820 0F81  
                          l4740 0E26                            l4732 0E19                            l4724 0E09  
                          l4716 0DF9                            l4708 0DE9                            l4660 0D78  
                          l4900 1651                            l5356 1D47                            l5436 1FB0  
                          l5428 1F9B                            l5294 12F8                            l5286 12DE  
                          l5278 07FC                            l5198 0397                            l4814 0F78  
                          l4806 0F63                            l4822 0F85                            l4750 0E66  
                          l4742 0E3D                            l4734 0E1D                            l4726 0E0D  
                          l4718 0DFD                            l4670 0D8F                            l4662 0D7F  
                          l4910 1677                            l4902 165C                            l5358 1D48  
                          l5438 1FB6                            l5542 1C67                            l5296 130A  
                          l5288 12E7                            l4920 09B8                            l4840 0FCD  
                          l4832 0F98                            l4824 0F86                            l4816 0F7A  
                          l4808 0F6C                            l4752 0E68                            l4744 0E4C  
                          l4760 0E7A                            l4736 0E21                            l4728 0E11  
                          l4680 0DA7                            l4672 0D94                            l4664 0D85  
                          l4912 167C                            l5298 1318                            l4930 09CF  
                          l4922 09BF                            l4850 0FE8                            l4834 0F9D  
                          l4842 0FD1                            l4826 0F8A                            l4818 0F7F  
                          l4770 0EAB                            l4762 0E86                            l4754 0E6C  
                          l4746 0E54                            l4738 0E25                            l4690 0DBD  
                          l4682 0DAC                            l4674 0D9C                            l4666 0D89  
                          l4914 1DF4                            l4940 09E7                            l4932 09D4  
                          l4924 09C5                            l4860 0FFE                            l4852 0FE9  
                          l4844 0FD6                            l4836 0FAB                            l4828 0F90  
                          l4780 0EC2                            l4772 0EAF                            l4764 0E8B  
                          l4756 0E6D                            l4748 0E5D                            l4692 0DBE  
                          l4684 0DB2                            l4676 0D9D                            l4668 0D8A  
                          l4916 1DF8                            l4908 1663                            l4950 09FC  
                          l4942 09EC                            l4934 09DC                            l4926 09C9  
                          l4870 1E86                            l4862 1E6A                            l4854 0FED  
                          l4846 0FDB                            l4838 0FAF                            l4790 0F25  
                          l4782 0EC3                            l4774 0EB3                            l4758 0E76  
                          l4694 0DC3                            l4686 0DB3                            l4678 0D9F  
                          l4960 0A1C                            l4952 0A01                            l4944 09F2  
                          l4936 09DD                            l4928 09CA                            l4872 1E8B  
                          l4864 1E6C                            l4856 0FEF                            l4848 0FE3  
                          l4792 0F29                            l4784 0ECC                            l4776 0EBC  
                          l4768 0E94                            l4696 0DC8                            l4688 0DB9  
                          _ADFM 04FF                            l4970 0A3A                            l4962 0A28  
                          l4954 0A09                            l4946 09F6                            l4938 09DF  
                          l4866 1E73                            l4858 0FFA                            l4794 0F2B  
                          l4778 0EBE                            l4786 0ED1                            l4698 0DD0  
                          l4890 163A                            l4882 1606                            l4980 0A65  
                          l4964 0A2C                            l4956 0A0A                            l4948 09F7  
                          l4868 1E77                            l4796 0F30                            l4788 0EE7  
                          l4892 163E                            l4884 162B                            l4876 15EC  
                          l4990 0A8A                            l4982 0A6D                            l4974 0A43  
                          l4958 0A0C                            l4798 0F3F                            l4886 162E  
                          l4878 15FB                            l4992 0A8B                            l4984 0A6F  
                          l4976 0A55                            l4968 0A35                            l4888 1636  
                          l4986 0A74                            l4994 0A94                            l4978 0A5D  
                          l4898 1646                            l4996 0AA6                            l4988 0A86  
                          l4998 0AA7                            _ADON 00F8                            _CHS0 00FB  
                          _CHS1 00FC                            _CHS2 00FD                            _PEIE 005E  
                          u7100 0DE1                            u7101 0DE0                            u7110 0DE5  
                          u7030 0D89                            u7111 0DE4                            u7031 0D88  
                          u7200 0E8B                            u7120 0E3D                            u7040 0D8F  
                          u8001 011C                            u7201 0E8A                            u7121 0E3C  
                          u7041 0D8E                            _MODE 0058                            u8002 0123  
                          u7130 0E48                            u7050 0D94                            u8011 0148  
                          u8003 012A                            u7211 0E9D                            u7131 0E46  
                          u7051 0D93                            u8100 0281                            u8012 014F  
                          u7300 0F55                            u7220 0EAF                            u7212 0EA4  
                          u7140 0E49                            u7060 0DB2                            _RCEN 048B  
                          u8021 0164                            u8013 0156                            u7301 0F54  
                          u7221 0EAE                            u7213 0EAB                            u7125 0E39  
                          u7061 0DB1                            u8022 016B                            u7310 0F5A  
                          u7230 0EB3                            u7150 0E5D                            u7070 0DBD  
                          u8111 028D                            u8023 0172                            u7311 0F59  
                          u7231 0EB2                            u7151 0E5C                            u7071 0DBC  
                          u8200 0314                            u8120 02A9                            u8112 0294  
                          u7400 0F9D                            u7240 0EC2                            u7160 0E6C  
                          u7080 0DC3                            u8201 0313                            u8113 029B  
                          u8105 027C                            u8041 019A                            u7401 0F9C  
                          u7241 0EC1                            u7161 0E6B                            u7081 0DC2  
                          u8210 031B                            u8042 01A1                            u7410 0FAF  
                          u7330 0F70                            u7090 0DC8                            u8211 031A  
                          u8131 02B5                            u8051 01C7                            u8043 01A8  
                          u8035 0174                            u7411 0FAE                            u7331 0F6F  
                          u7091 0DC7                            u8220 0321                            u8132 02BC  
                          u8052 01CE                            u7420 0FBE                            u7340 0F75  
                          u7260 0EE7                            u7180 0E82                            u8300 1770  
                          u8221 0320                            u8133 02C3                            u8125 02A4  
                          u8053 01D5                            u7341 0F74                            u7325 0F65  
                          u7261 0EE6                            u7181 0E81                            u8301 176F  
                          u7510 1E8B                            u8230 0333                            u7430 0FCD  
                          u7350 0F7F                            u7190 0E86                            u7511 1E8A  
                          u8231 0332                            u8071 01FD                            u7431 0FCC  
                          u7351 0F7E                            u7271 0EFE                            u7263 0EE3  
                          u7255 0EC5                            u7191 0E85                            u7175 0E6F  
                          u8240 0342                            u8160 02E7                            u8072 0204  
                          u7440 0FD6                            u7360 0F85                            u7280 0F12  
                          u7272 0EFF                            u7600 1677                            u7520 15FB  
                          u8400 17F2                            u8320 1791                            u7505 1E7E  
                          u8161 02E6                            u8145 02C5                            u8081 022A  
                          u8073 020B                            u8065 01D7                            u7441 0FD5  
                          u7425 0FB9                            u7361 0F84                            u7281 0F13  
                          u7273 0F04                            u7601 1676                            u7521 15FA  
                          u8401 17F1                            u8321 1790                            u8250 035F  
                          u8082 0231                            u7450 0FDB                            u7370 0F8A  
                          u7290 0F30                            u7282 0F18                            u7274 0F05  
                          u7610 167C                            u7530 1624                            u8410 17F6  
                          u8251 035E                            u8155 02DC                            u8091 0257  
                          u8083 0238                            u7451 0FDA                            u7371 0F89  
                          u7291 0F2F                            u7283 0F19                            u7275 0F0A  
                          u7611 167B                            u8411 17F5                            u8315 1783  
                          u8500 130A                            u7700 0A74                            u7620 09C9  
                          u8260 0379                            u8180 02FB                            u8092 025E  
                          u7460 0FE8                            u7380 0F90                            u7276 0F0B  
                          u7540 163E                            u8340 17B3                            u8420 0715  
                          u8501 1309                            u7701 0A73                            u7621 09C8  
                          u8261 0378                            u8245 033D                            u8181 02FA  
                          u8093 0265                            u7461 0FE7                            u7381 0F8F  
                          u7541 163D                            u8341 17B2                            u8421 0714  
                          u7630 09CF                            u8270 0397                            u8190 0300  
                          u7470 0FED                            u7390 0F97                            u7550 1645  
                          u8430 071B                            u7631 09CE                            u8271 0396  
                          u8255 035B                            u8191 02FF                            u8175 02EA  
                          u7471 0FEC                            u7391 0F96                            u7551 1644  
                          u7535 161F                            u8335 17A5                            u8431 071A  
                          u8520 1328                            u8440 07EF                            u7640 09D4  
                          u7480 0FFE                            u8360 17C3                            u8280 174C  
                          u8521 1327                            u8505 1306                            u8441 07EE  
                          u7641 09D3                            u8265 0375                            u7481 0FFD  
                          u8361 17C2                            u8281 174B                            u8530 1EA5  
                          u8450 07FC                            u7810 0AEA                            u7730 0A8A  
                          u7650 09F6                            u7490 1E77                            u7570 165B  
                          u8370 17C9                            u8290 1750                            u8515 131A  
                          u8451 07FB                            u7811 0AE9                            u7731 0A89  
                          u7715 0A76                            u7651 09F5                            u7491 1E76  
                          u7571 165A                            u8371 17C8                            u8355 17B8  
                          u8291 174F                            u8460 12DB                            u8540 1145  
                          u7900 0B82                            u7820 0AEF                            u7660 09FC  
                          u7580 1662                            u8380 17CD                            u8461 12DA  
                          u8541 1144                            u7901 0B81                            u7821 0AEE  
                          u7805 0AD9                            u7725 0A7F                            u7661 09FB  
                          u7581 1661                            u7565 1647                            u8381 17CC  
                          u7830 0B03                            u7750 0AA6                            u7670 0A01  
                          u7910 005C                            u8390 17E2                            u8535 1EA0  
                          u7831 0B02                            u7751 0AA5                            u7671 0A00  
                          u7911 005B                            u8480 12EF                            u7840 0B0A  
                          u7760 0ABF                            u7680 0A1C                            u7920 0062  
                          u8481 12EE                            u7841 0B09                            u7761 0ABE  
                          u7745 0A8D                            u7681 0A1B                            u7921 0061  
                          u7850 0B10                            u7770 0AC7                            u7690 0A3A  
                          u7930 0067                            u8475 12E0                            u7851 0B0F  
                          u7771 0AC6                            u7755 0AA2                            u7691 0A39  
                          u7931 0066                            u7595 1665                            u8395 17DD  
                          u7860 0B22                            u7940 0088                            u7861 0B21  
                          u7941 0087                            u7870 0B31                            u7790 0AD6  
                          u7950 008E                            u8495 12F1                            u7791 0AD5  
                          u7951 008D                            u7880 0B4E                            u7960 0093  
                          u7881 0B4D                            u7785 0ACB                            u7961 0092  
                          u7890 0B6B                            u7970 00AA                            u7891 0B6A  
                          u7875 0B2C                            u7971 00A9                            u7980 00AF  
                          u7885 0B4A                            u7981 00AE                            u7895 0B67  
                          u7991 0100                            u7992 0107                            u7993 010E  
                          _TMR1 000E                            _RSEN 0489                 ?_WH_Turn_On_Off 0070  
                          _flag 0051                __end_of_ADC_INIT 1CD3               i1___lldiv@divisor 0070  
                          _main 1C67                   i1___flmul@grs 002E        __end_of_Timer_update_reg 07E7  
              __end_of_I2C_Read 1D7D                 __end_of_SSD_OUT 1D66                            btemp 007E  
             i1___lldiv@counter 007D                __end_of_I2C_Stop 1C43                __end_of_ADC_Read 10FE  
                          start 0012                 ___fldiv@new_exp 00DA                 __end_of_OS_init 1FBE  
               EEPROM_Write@add 0071                 __end_of_SW_Init 1146                 __end_of_Led_Off 1D97  
             ___bmul@multiplier 00A2                  ??_COOL_turn_on 0070              Timer_Start@tick_ms 01CC  
           __end_of_WH_turn_off 1C11   __size_of_get_temp_after_reset 0013            __end_of_EEPROM_Write 1F3D  
                i1___fldiv@aexp 002C                  i1___fldiv@bexp 002B                  i1___fldiv@sign 0024  
              ?_I2C_Master_init 00AE                   ___fltol@sign1 01C1                           _ADCS1 00FF  
                         _ADCS2 04FE                 __end_of___fladd 1000                           ?_main 0070  
               __end_of___fldiv 0B95                 __end_of___awdiv 12C9                 __end_of___awmod 085B  
               __end_of___flmul 03AC                 __end_of___flsub 1E18                 __end_of___fltol 168A  
               __end_of___lldiv 1331                 ___awdiv@divisor 0070                           _PCFG0 04F8  
                         _PCFG1 04F9                           _PCFG2 04FA                           _PCFG3 04FB  
                         i1l126 10EC                           i1l129 10FD                           i1l161 1C90  
                         i1l170 1C42                           i1l260 1C1F                           i1l244 1BFC  
                         i1l236 1476                           i1l181 1CAA                           i1l158 1C84  
                         i1l182 1CB0                           i1l263 1C30                           i1l167 1C39  
                         i1l272 119B                           i1l257 1DCF                           i1l249 1D0D  
                         i1l441 102E                           i1l185 1D6E                           i1l329 1EF6  
                         i1l610 1CC1                           i1l522 1F7C                           i1l267 1D65  
                         i1l187 1D73                           i1l179 1CA6                           i1l604 1DB0  
                         i1l444 14E8                           i1l188 1D7C                           i1l348 1F3C  
                         i1l381 1CA0                           i1l525 1D38                           i1l509 10B5  
                         i1l607 1D96                           i1l391 08E2                           i1l543 1071  
                         i1l367 11FB                           i1l535 139A                           i1l448 1407  
                         i1l528 1CE5                           i1l561 1E4D                           i1l722 1D22  
                         i1l562 1E66                           i1l554 15EB                           i1l387 09B7  
                         i1l555 15EB                           i1l571 1C4B                           i1l732 1261  
                         i1l565 1C54                           i1l574 1C09                           i1l558 1DF3  
                         i1l568 1C10                           i1l597 1FFF                           i1l862 085A  
                         i1l849 12C8                           i1l882 1564                           i1l892 1564  
                         i1l889 154F                 ___awdiv@counter 0074      __size_of_WH_Save_Last_Temp 0016  
                    _Led_Toggle 1CB1                           _PORTA 0005                           _PORTB 0006  
                         _PORTC 0007                           _PORTD 0008                      _WH_turn_on 1C4C  
                         _TRISA 0085                           _TRISB 0086                           _TRISC 0087  
                         _TRISD 0088                           _SSPIF 0063                __end_of_SDD_Init 1C7A  
             _Timer_Update_Vlue 00EE                     _WH_Set_temp 1F3D              i1___lldiv@dividend 0074  
                i1___flmul@aexp 0032                  i1___flmul@bexp 0033                  i1___flmul@sign 002D  
                i1___flmul@temp 0038                  i1___flmul@prod 0034               __end_of_I2C_Start 1C3A  
              __end_ofi1___bmul 1D23               __end_of_I2C_Write 1CB1                           pclath 000A  
                i1___fltol@exp1 0036              __size_of_SSD_Blink 0009                           status 0003  
                         wtemp0 007E                    _back_up_temp 004A              __size_ofi1___fldiv 01E3  
            __size_ofi1___flmul 0361              __size_ofi1___fltol 007C              __size_ofi1___lldiv 0066  
              EEPROM_Write@data 0073             __size_of_LED_Update 0042                     _SW_GetState 1C91  
          __size_of_EEPROM_Read 0060                 ??_COOL_turn_off 0070                 __initialization 0015  
              __end_of_Get_temp 14E9                     ?_SSD_SetSSD 0070                __end_of_Led_init 1C5E  
                  __end_of_main 1C70          __size_of_I2C_Wait_idle 000D                     ?_SSD_Toggle 0070  
            i1___lldiv@quotient 0079                     ?_WH_CL_Init 0070              __size_of_WH_Update 0044  
              _Ten_average_temp 01AD                          ??_main 00EE                     ?_TMR_Update 0070  
                   ?i1___xxtofl 0070              __size_of_SW_Update 015D                  SW_Update@index 0074  
                   ?_WH_Disable 0070                          _ADRESH 001E                          _ADRESL 009E  
                     ??_SSD_OUT 0079                ___awdiv@dividend 0072           _Update_Global_counter 102F  
               ADC_Read@Channel 0075                          i1l1104 1E2C                          i1l1106 1E3E  
                        i1l1131 1743                          i1l1061 0CE9                          i1l1045 0BF1  
                        i1l1142 170D                          i1l1047 0D77                          i1l1143 1719  
                        i1l1129 16AC                          i1l3002 1D66                          i1l1091 0678  
                        i1l3004 1D6B                          i1l1069 0D6B                          i1l1085 070C  
                        i1l3006 1D74                          i1l4000 0C05                          i1l3008 1D79  
                        i1l1097 0700                          i1l4002 0C09                          i1l4020 0C4A  
                        i1l4012 0C20                          i1l3230 1DB2                          i1l4030 0C68  
                        i1l4022 0C4C                          i1l4014 0C32                          i1l4006 0C12  
                        i1l4110 03BE                          i1l4102 03AC                          i1l3232 1DB3  
                        i1l4024 0C51                          i1l4032 0C71                          i1l4040 0C9C  
                        i1l4016 0C3A                          i1l4008 0C17                          i1l4200 065C  
                        i1l4120 03DA                          i1l4112 03C3                          i1l4104 03B3  
                        i1l3240 119C                          i1l3234 1DBD                          i1l4050 0CB9  
                        i1l4042 0CA2                          i1l4034 0C83                          i1l4026 0C63  
                        i1l4018 0C42                          i1l4210 067D                          i1l4202 065D  
                        i1l4130 03EF                          i1l4122 03DF                          i1l4114 03C8  
                        i1l4106 03B9                          i1l3250 11AF                          i1l3242 119C  
                        i1l3228 1C19                          i1l4060 0CCE                          i1l4052 0CBA  
                        i1l4044 0CAA                          i1l4036 0C84                          i1l4028 0C67  
                        i1l4212 0682                          i1l4220 06B3                          i1l4204 0661  
                        i1l4140 040B                          i1l4132 03F4                          i1l4124 03E5  
                        i1l4116 03D0                          i1l4108 03BD                          i1l3260 11D6  
                        i1l3252 11BB                          i1l3244 11A5                          i1l3238 1DC7  
                        i1l4070 0CF3                          i1l4062 0CD2                          i1l4054 0CC3  
                        i1l4046 0CAC                          i1l4038 0C98                          i1l4230 06E6  
                        i1l4222 06C0                          i1l4214 0690                          i1l4206 0675  
                        i1l4150 0436                          i1l4142 0410                          i1l4134 03FC  
                        i1l4126 03E9                          i1l4118 03D2                          i1l3262 11E2  
                        i1l3254 11C6                          i1l3246 11AA                          i1l4080 0D31  
                        i1l4072 0D01                          i1l4064 0CE6                          i1l4048 0CB5  
                        i1l4056 0CC9                          i1l4240 0704                          i1l4232 06EC  
                        i1l4224 06CB                          i1l4216 0694                          i1l4160 04D3  
                        i1l4152 0453                          i1l4136 03FE                          i1l4128 03EA  
                        i1l3272 1C03                          i1l3264 11ED                          i1l3256 11D1  
                        i1l4090 0D5B                          i1l4082 0D3F                          i1l4074 0D05  
                        i1l4058 0CCD                          i1l4234 06F4                          i1l4226 06DA  
                        i1l4218 06AD                          i1l4170 0536                          i1l4162 04DC  
                        i1l4154 046F                          i1l4146 0419                          i1l4138 0406  
                        i1l4250 16A4                          i1l3274 1C08                          i1l3266 11F5  
                        i1l3700 10EB                          i1l4092 0D61                          i1l4084 0D4E  
                        i1l4076 0D1E                          i1l4068 0CEE                          i1l4236 06F8  
                        i1l4228 06E4                          i1l4180 05D6                          i1l4172 054F  
                        i1l4164 04EC                          i1l4156 049B                          i1l4148 0429  
                        i1l4260 16C6                          i1l4252 16B4                          i1l4244 168B  
                        i1l3276 1C0A                          i1l3268 11FA                          i1l4412 1D23  
                        i1l4350 116C                          i1l3710 1D00                          i1l3702 10F0  
                        i1l4094 0D65                          i1l4086 0D52                          i1l4078 0D24  
                        i1l4238 06F9                          i1l4190 0644                          i1l4182 05FC  
                        i1l4174 056C                          i1l4166 0509                          i1l4158 04B7  
                        i1l4270 16F1                          i1l4262 16CF                          i1l4246 1690  
                        i1l4510 1E3F                          i1l3278 1C0F                          i1l4414 1D32  
                        i1l4352 1177                          i1l3712 1D07                          i1l4360 1BF9  
                        i1l4600 1FF3                          i1l3704 10F6                          i1l4096 0D67  
                        i1l4088 0D5A                          i1l4192 0648                          i1l4184 0624  
                        i1l4176 0599                          i1l4168 0519                          i1l4280 171B  
                        i1l4272 16F8                          i1l4264 16D6                          i1l4256 16BD  
                        i1l4248 1694                          i1l5400 15D2                          i1l4440 138D  
                        i1l4432 1331                          i1l3714 1D50                          i1l4354 1191  
                        i1l4346 1147                          i1l4194 0649                          i1l4186 062D  
                        i1l4178 05A9                          i1l4282 1731                          i1l4274 1703  
                        i1l4266 16DA                          i1l4258 16C2                          i1l4362 1477  
                        i1l4514 1E51                          i1l5402 15DC                          i1l3730 1F06  
                        i1l5410 1F53                          i1l4442 1397                          i1l4434 1338  
                        i1l3716 1D57                          i1l3820 126E                          i1l3812 1262  
                        i1l4348 1152                          i1l3708 1CF9                          i1l4356 1C28  
                        i1l4444 1CB2                          i1l5500 0983                          i1l3660 1E1B  
                        i1l4196 0652                          i1l4188 063B                          i1l4284 1736  
                        i1l4276 1707                          i1l4268 16E8                          i1l4364 1483  
                        i1l3900 1218                          i1l4516 1E65                          i1l5404 15E2  
                        i1l3740 1F20                          i1l3732 1F0A                          i1l5420 1F7A  
                        i1l5412 1F59                          i1l4436 135C                          i1l3718 1D5D  
                        i1l3830 1283                          i1l3822 1272                          i1l3814 1263  
                        i1l4358 1C2B                          i1l4470 1408                          i1l4446 1D7E  
                        i1l3662 1E22                          i1l4198 0658                          i1l4286 173A  
                        i1l4278 1711                          i1l4366 14BE                          i1l3910 1249  
                        i1l3902 121C                          i1l5510 1002                          i1l5262 1C92  
                        i1l3750 1CE1                          i1l3742 1F2B                          i1l3734 1F0F  
                        i1l5414 1F5E                          i1l5406 1F3D                          i1l4438 1367  
                        i1l3840 12A6                          i1l3832 1286                          i1l3824 1277  
                        i1l3816 1267                          i1l4480 1431                          i1l4472 1418  
                        i1l4448 1D98                          i1l3680 1D1A                          i1l3672 1D0F  
                        i1l5504 0992                          i1l3664 1E26                          i1l3920 14E9  
                        i1l4288 173B                          i1l3912 124A                          i1l3904 1220  
                        i1l5520 1029                          i1l5512 1012                          i1l3760 1DD0  
                        i1l3728 1F01                          i1l5416 1F69                          i1l5408 1F48  
                        i1l3752 1C4C                          i1l3850 12BF                          i1l3842 12AC  
                        i1l3834 128D                          i1l3826 127B                          i1l3818 126C  
                        i1l4482 1438                          i1l3682 1D1C                          i1l3674 1D10  
                        i1l5506 09AD                          i1l3690 10B7                          i1l3666 1E35  
                        i1l3658 1E19                          i1l3930 1515                          i1l3922 14F6  
                        i1l3914 1253                          i1l3906 1229                          i1l5370 13F8  
                        i1l5362 139B                          i1l5450 105C                          i1l5442 102F  
                        i1l3762 1DDA                          i1l3738 1F14                          i1l5418 1F74  
                        i1l3754 1C52                          i1l5530 1094                          i1l5522 1072  
                        i1l3852 12C4                          i1l3844 12AD                          i1l3836 1291  
                        i1l3828 127D                          i1l3860 0807                          i1l4492 1461  
                        i1l4484 143D                          i1l4476 1422                          i1l3684 1D21  
                        i1l3676 1D14                          i1l5508 09B1                          i1l3692 10BA  
                        i1l3668 1E3A                          i1l3932 151D                          i1l3908 123B  
                        i1l3916 1259                          i1l5372 13FB                          i1l5364 13A1  
                        i1l5516 101C                          i1l5452 1067                          i1l5444 1036  
                        i1l3764 1DE4                          i1l3748 1CD3                          i1l5380 157B  
                        i1l3756 1C43                          i1l5540 10B0                          i1l5532 1099  
                        i1l5524 1082                          i1l3846 12B4                          i1l3838 1295  
                        i1l3870 081D                          i1l3862 080C                          i1l4494 1466  
                        i1l4486 144D                          i1l4478 142A                          i1l3678 1D18  
                        i1l5470 0888                          i1l5462 0868                          i1l5454 085B  
                        i1l3694 10BD                          i1l3942 152B                          i1l3934 151F  
                        i1l3926 14FF                          i1l5374 13FD                          i1l5366 13CF  
                        i1l5518 1024                          i1l5446 1046                          i1l3766 1DEE  
                        i1l2990 1C36                          i1l5382 1586                          i1l5390 15AA  
                        i1l3758 1C49                          i1l5534 10A0                          i1l5550 1ED5  
                        i1l3848 12BA                          i1l3880 0839                          i1l3872 0820  
                        i1l3864 080E                          i1l3856 0802                          i1l4488 1455  
                        i1l4496 1471                          i1l4592 1FD8                          i1l5480 08CD  
                        i1l5472 088E                          i1l5456 085B                          i1l3696 10CF  
                        i1l3688 10B7                          i1l3960 0B9C                          i1l3952 1544  
                        i1l3944 1534                          i1l3936 1523                          i1l3928 1514  
                        i1l5368 13D7                          i1l5448 1051                          i1l3768 1DF2  
                        i1l2984 1C84                          i1l2992 1C3A                          i1l5392 15B5  
                        i1l5384 158E                          i1l5376 1565                          i1l5536 10A5  
                        i1l5528 108C                          i1l5560 1EF5                          i1l5552 1EDA  
                        i1l5544 1EC6                          i1l3890 0856                          i1l3882 083F  
                        i1l3874 0827                          i1l3866 0812                          i1l3858 0803  
                        i1l4594 1FE0                          i1l4586 1FBE                          i1l5490 0929  
                        i1l5482 08E3                          i1l5474 08AB                          i1l5458 0861  
                        i1l3698 10E1                          i1l3970 0BB1                          i1l3962 0BA2  
                        i1l3954 1554                          i1l3946 153D                          i1l2986 1C8A  
                        i1l2994 1C3F                          i1l5394 15BF                          i1l5386 1598  
                        i1l5378 1570                          i1l5538 10AB                          i1l5554 1EDF  
                        i1l5546 1ECB                          i1l3884 0846                          i1l3876 082B  
                        i1l3868 0817                          i1l4596 1FE7                          i1l4588 1FCE  
                        i1l5492 093B                          i1l5484 08F5                          i1l5476 08B0  
                        i1l5468 086A                          i1l3980 0BC9                          i1l3972 0BB9  
                        i1l3964 0BA6                          i1l3956 1559                          i1l2988 1C31  
                        i1l2996 1CA2                          i1l5396 15C1                          i1l5388 159B  
                        i1l5556 1EE4                          i1l5548 1ED0                          i1l3878 082F  
                        i1l3886 084C                          i1l4598 1FEE                          i1l5494 094D  
                        i1l5486 0907                          i1l5478 08C8                          i1l3990 0BDE  
                        i1l3982 0BCF                          i1l3974 0BBA                          i1l3966 0BA7  
                        i1l3958 0B95                          i1l3894 11FC                          i1l2998 1CAB  
                        i1l5398 15CA                          i1l5558 1EE9                          i1l3888 0851  
                        i1l5496 095F                          i1l5488 0917                          i1l3992 0BE6  
                        i1l3984 0BD3                          i1l3968 0BAC                          i1l3976 0BBC  
                        i1l3896 120C                          i1l5498 0971                          i1l3994 0BE7  
                        i1l3986 0BD4                          i1l3978 0BC4                          i1l3898 120F  
                        i1l3988 0BD9                          i1l3996 0BE9                          i1l3998 0BF9  
                        u410_20 11E1                          u410_21 11E0                          u411_20 11ED  
                        u411_21 11EC                          u502_20 1E26                          u406_20 11AF  
                        u502_21 1E25                          u406_21 11AE                          u510_25 10D2  
                        u511_20 10DE                          u407_20 11BA                          u511_21 10DA  
                        u407_21 11B9                       ??_OS_init 00EE                          u503_25 1E2D  
                        u504_20 1E3A                          u600_20 03C8                          u408_20 11C6  
                        u520_20 1F14                          u504_21 1E39                          u600_21 03C7  
                        u408_21 11C5                          u520_21 1F13                          u512_24 10E1  
                        u505_20 1D14                          u513_20 10E8                          u601_20 03E9  
                        u353_20 1C8A                          u409_20 11D6                          u521_20 1F1F  
                        u505_21 1D13                          u513_21 10E4                          u601_21 03E8  
                        u353_21 1C89                          u409_21 11D5                          u521_21 1F1E  
                        u506_20 1D21                          u602_20 03EF                          u354_20 1C90  
                        u522_20 1F2B                          u506_21 1D20                          u602_21 03EE  
                        u354_21 1C8F                          u522_21 1F2A                          u514_24 10EB  
                        u610_25 04D5                          u515_20 10F0                          u603_20 03F4  
                        u355_20 1CAA                          u515_21 10EF                          u611_21 04FB  
                        u603_21 03F3                          u355_21 1CA9                          u611_22 0502  
                        u611_23 0509                          u507_25 10C0                          u540_20 12BA  
                        u532_20 1267                          u516_20 1D00                          u508_20 10CC  
                        u604_20 040B                          u356_20 1D73                          u540_21 12B9  
                        u532_21 1266                          u516_21 1CFF                          u508_21 10C8  
                        u620_21 0616                          u612_21 0528                          u604_21 040A  
                        u356_21 1D72                          u620_22 061D                          u612_22 052F  
                        u620_23 0624                          u612_23 0536                          u517_20 1D57  
                        u541_20 12BF                          u533_20 1272                          u605_20 0410  
                        u517_21 1D56                          u541_21 12BE                          u533_21 1271  
                        u605_21 040F                          u509_24 10CF                          u621_25 0626  
                        u613_25 0538                          u534_20 1283                          u550_20 0851  
                        u542_20 0807                          u630_20 0694                          u534_21 1282  
                        u550_21 0850                          u542_21 0806                          u630_21 0693  
                        u614_21 055E                          u606_21 0461                          u614_22 0565  
                        u606_22 0468                          u614_23 056C                          u606_23 046F  
                        u622_25 063D                          u543_20 0812                          u631_20 06A3  
                        u623_20 0648                          u551_20 120C                          u543_21 0811  
                        u623_21 0647                          u615_21 058B                          u607_21 047D  
                        u551_21 120B                          u615_22 0592                          u607_22 0484  
                        u615_23 0599                          u607_23 048B                          u535_25 1287  
                        u631_25 069E                          u536_20 1295                          u544_20 081D  
                        u632_20 06C0                          u560_20 1523                          u536_21 1294  
                        u544_21 081C                          u632_21 06BF                          u616_21 05B8  
                        u608_21 04A9                          u560_21 1522                          u616_22 05BF  
                        u608_22 04B0                          u616_23 05C6                          u608_23 04B7  
          __size_of_DISP_Update 006F                          u632_25 06BC                          u624_25 064B  
                        u640_25 16E9                          u552_25 1211                          u633_20 06DA  
                        u625_20 065C                          u617_20 05E2                          u561_20 152A  
                        u641_20 16F7                          u553_20 1220                          u633_21 06D9  
                        u625_21 065B                          u609_21 04C5                          u561_21 1529  
                        u641_21 16F6                          u553_21 121F                          u609_22 04CC  
                        u609_23 04D3                          u537_25 1296                          u545_25 0821  
                        u633_25 06D6                          u617_25 05DD                          u538_20 12A6  
                        u546_20 082F                          u570_20 0BB1                          u634_20 06F8  
                        u626_20 0661                          u538_21 12A5                          u546_21 082E  
                        u570_21 0BB0                          u634_21 06F7                          u626_21 0660  
                        u618_21 05EE                          u618_22 05F5                          u618_23 05FC  
                        u538_25 12A2                          u562_25 152C                          u642_25 16FC  
                        u554_25 1222                          u547_20 0839                          u651_20 1152  
                        u571_20 0BD3                          u627_20 0675                          u619_20 060A  
                        u563_20 153C                          u643_20 1707                          u635_20 1690  
                        u555_20 123B                          u547_21 0838                          u651_21 1151  
                        u571_21 0BD2                          u627_21 0674                          u563_21 153B  
                        u643_21 1706                          u635_21 168F                          u555_21 123A  
                        u539_25 12AE                          u547_25 0835                          u619_25 0605  
                        u555_25 1237                          u572_20 0BD9                          u628_20 067C  
                        u564_20 1543                          u644_20 170D                          u636_20 1694  
                        u572_21 0BD8                          u628_21 067B                          u564_21 1542  
                        u644_21 170C                          u636_21 1693                          u548_25 0840  
                        u580_25 0C6A                          u556_25 124B                          u549_20 084C  
                        u581_20 0C83                          u573_20 0BDE                          u629_20 0682  
                        u645_20 1711                          u637_20 16B4                          u557_20 1259  
                        u549_21 084B                          u581_21 0C82                          u573_21 0BDD  
                        u629_21 0681                          u645_21 1710                          u637_21 16B3  
                        u557_21 1258                          u581_25 0C7F                          u565_25 1546  
                        u590_20 0CE6                          u582_20 0C98                          u574_20 0BF9  
                        u566_20 1554                          u558_20 14F6                          u646_20 1726  
                        u590_21 0CE5                          u574_21 0BF8                          u566_21 1553  
                        u558_21 14F5                          u670_24 1CB8                          u670_25 1CB6  
                        u582_25 0C8B                          u646_25 1721                          u638_25 16C7  
                        u582_26 0C8C                          u582_27 0C91                          u591_20 0CED  
                        u583_20 0CA2                          u582_28 0C92                          u575_20 0C17  
                        u567_20 1559                          u559_20 150D                          u647_20 1736  
                        u639_20 16D5                          u591_21 0CEC                          u583_21 0CA1  
                        u582_29 0C97                          u575_21 0C16                          u567_21 1558  
                        u647_21 1735                          u639_21 16D4                       ??_SW_Init 00A3  
                        u671_24 1D84                          u671_25 1D82                          u559_25 1508  
                        u592_20 0CF3                          u584_20 0CAA                          u576_20 0C51  
                        u568_20 0BA6                          u648_20 173A                          u592_21 0CF2  
                        u584_21 0CA9                          u576_21 0C50                          u568_21 0BA5  
                        u648_21 1739                          u672_24 1D8D                          u672_25 1D8B  
  Tmepreture_Update@Temp_Update 01A5                          u593_20 0D05                          u569_20 0BAC  
                        u593_21 0D04                          u569_21 0BAB                          u673_24 1D9E  
                        u673_25 1D9C                          u585_25 0CAE                          u577_25 0C53  
                        u594_20 0D14                          u586_20 0CB9                          u586_21 0CB8  
                        u674_24 1DA7                          u674_25 1DA5                          u594_25 0D0F  
                        u578_25 0C5C                          u675_20 1421                          u595_20 0D31  
                        u579_20 0C67                          u683_20 1E4C                          u667_20 1338  
                        u675_21 1420                          u595_21 0D30                          u579_21 0C66  
                        u683_21 1E4B                          u667_21 1337                          u595_25 0D2D  
                        u587_25 0CBC                          u676_20 1431                          u596_20 0D4E  
                        u588_20 0CCD                          u860_20 158E                          u668_20 135C  
                        u676_21 1430                          u596_21 0D4D                          u588_21 0CCC  
                        u860_21 158D                          u668_21 135B                          u596_25 0D4A  
                        u668_25 1358                          u677_20 143D                          u597_20 0D65  
                        u589_20 0CD2                          u861_20 15B5                          u669_20 138D  
                        u677_21 143C                          u597_21 0D64                          u589_21 0CD1  
                        u861_21 15B4                          u669_21 138C                          _TMR1IE 0460  
                        _TMR1IF 0060                          u669_25 1389                          _TMR1CS 0081  
                        u678_20 1460                          u598_20 03BD                          u870_20 1036  
                        u862_20 15BF                          u678_21 145F                          u598_21 03BC  
                        u870_21 1035                          u862_21 15BE                          u599_20 03C3  
                        u871_20 1051                          u863_20 15D2                          u599_21 03C2  
                        u855_21 13B5                          u871_21 1050                          u863_21 15D1  
                        u855_22 13C0                          u855_23 13CB                          u880_20 0907  
                        u856_20 13D7                          u872_20 105C                          u864_20 1F48  
                        _TMR1ON 0080                          u880_21 0906                          u856_21 13D6  
                        u872_21 105B                          u864_21 1F47                          u697_20 1FD7  
                        u881_20 0929                          u873_20 1067                          u857_20 1570  
                        u865_20 1F53                          u697_21 1FD6                          u881_21 0928  
                        u873_21 1066                          u857_21 156F                          u865_21 1F52  
                        u698_20 1FE7                          u882_20 094D                          u874_20 0867  
                        u858_20 157B                          u866_20 1F59                          u698_21 1FE6  
                        u882_21 094C                          u874_21 0866                          u858_21 157A  
                        u866_21 1F58                          u699_20 1FF3                          u883_20 095F  
                        u875_20 088E                          u859_20 1586                          u867_20 1F69  
                        u699_21 1FF2                          u883_21 095E                          u875_21 088D  
                        u859_21 1585                          u867_21 1F68                          u884_20 0983  
                        u868_20 1F74                          u884_21 0982                          u868_21 1F73  
                        u876_25 089F                          u885_20 09B7                          u877_20 08B0  
                        u869_20 1F7A                     _WH_turn_off 1C0A                          u885_21 09B6  
                        u877_21 08AF                          u869_21 1F79                       ??_Led_Off 0070  
                        u878_20 08CD                          u886_20 101B                          u878_21 08CC  
                        u886_21 101A                          u879_20 08F5                          u887_20 108B  
                        u879_21 08F4                          u887_21 108A                          u888_20 10A0  
                        u888_21 109F                          u889_20 10B0                          u889_21 10AF  
                        _SSPADD 0093                          _TRISD1 0441                          _TRISC3 043B  
                        _TRISD2 0442                          _TRISC4 043C                          _SSPCON 0014  
                        _SSPBUF 0013                __end_of___xxtofl 1800        __end_of_SSD_Dispaly_NULL 1BFD  
                        _Led_on 1D97                      _Sleep_flag 003E                          ___bmul 07E7  
                     ??___fladd 00A8           _Timer_update_reg$1109 01C7                       ??___fldiv 00D0  
                     ??___awdiv 0074                       ??___awmod 0074                       ??___flmul 00B6  
                     ??___flsub 00EA                       ??___fltol 01BD                       ??___lldiv 00A8  
        __size_of_Check_WH_mode 0087                      _Timer_init 1BFD                ___awdiv@quotient 0076  
         DISP_Update@DISP_Blink 01B5                 ___awmod@divisor 0070                 ___awmod@counter 0074  
             __end_of_SSD_Blink 1C31                   ??_Timer_Start 00EE               __end_ofi1___fldiv 0D78  
             __end_ofi1___flmul 070D               __end_ofi1___fltol 1565                     ?_Led_Toggle 0070  
             __end_ofi1___lldiv 1262                       ?_ADC_INIT 0070                     ?_WH_turn_on 0070  
                     ?_I2C_Read 0070              __size_of__Umul8_16 0029                       ?_I2C_Stop 0070  
                     ?_ADC_Read 0070                          saved_w 007E               EEPROM_Write@ADDRH 0074  
             EEPROM_Write@ADDRL 0075                 i1___fltol@sign1 0035            __end_of_COOL_turn_on 1C4C  
                 _I2C_Wait_idle 1C84             __size_of_SSD_SetSSD 001F             __size_of_SSD_Toggle 0015  
             __end_of_WH_Update 10B6                    ___xxtofl@arg 00AA             __size_of_WH_CL_Init 0009  
                  ___xxtofl@exp 00A9                    ___xxtofl@val 00A0         __end_of__initialization 0047  
           __size_of_TMR_Update 003B             __size_ofi1___xxtofl 00BA                      ___fltol@f1 00EA  
                  ?i1__Umul8_16 0070               __end_of_SW_Update 09B8           __size_of_EEPROM_Write 003C  
           ___bmul@multiplicand 00A0                       ?_SDD_Init 0070                  __pcstackCOMMON 0070  
                  __pidataBANK0 1C11             __size_of_WH_Disable 0024                    __pidataBANK3 1C7A  
      __end_of_Temp_ten_average 1408                     _Current_SSD 0052                       ?i1___bmul 0070  
                  ??_LED_Update 0073                      ??_ADC_INIT 00A0                      ??_I2C_Read 0070  
                    ??_I2C_Stop 0070                      ??_ADC_Read 0072                   SW_GetState@sw 0073  
                ?_I2C_Wait_idle 0070                ??_WH_Turn_On_Off 0070                i1___bmul@product 0071  
        ?_Update_Global_counter 0070             __end_of_Timer_Start 1D4F                   _Check_WH_mode 1565  
                     ?_Get_temp 0070                       ?_Led_init 0070                    _EEPROM_Write 1F01  
                    __pbssBANK0 003E                      __pbssBANK1 00EE                      __pbssBANK3 0190  
                 SSD_SetSSD@ssd 0070                  i1___xxtofl@arg 007A                  i1___xxtofl@exp 0079  
                i1___xxtofl@val 0070               ?_Timer_update_reg 0070           __end_of_DISP_Elements 119C  
                       ?_Led_on 0070             __size_of_Led_Toggle 0011               __end_of__Umul8_16 1E90  
            __end_of_LED_Update 2000             __size_of_WH_turn_on 0009              ??_Timer_update_reg 01C3  
                    __pmaintext 1C67                      ??_SDD_Init 00A0                         ?___bmul 00A0  
                    __pintentry 0004                         _ACKSTAT 048E                     ?_Timer_init 0070  
                    ??i1___bmul 0071                         _T1CKPS0 0084                         _T1CKPS1 0085  
                       _CL_Flag 0048                       ?___xxtofl 00A0                    ?_WH_Set_temp 0070  
           i1__Umul8_16@product 0074    __end_of_get_temp_after_reset 1CE6                  ?_Check_WH_mode 0070  
                       _SSPCON2 0091                         _SSD_OUT 1D4F                      ??_Get_temp 007E  
                       _WH_FLAG 0049                      ??_Led_init 00A0                         _SSPSTAT 0094  
                       _SSD_map 01CD                         _OS_init 1F7D                    _g_tick_count 01A1  
                       _SW_Init 10FE                         _Led_Off 1D7D                       _I2C_Start 1C31  
       Timer_update_reg@tick_ms 01CB                       _I2C_Write 1CA1                    ?_SW_GetState 0070  
               __size_of_Led_on 001A               _Tmepreture_Update 1002                    ??_SSD_SetSSD 0070  
               __size_of___bmul 0017              ?_Tmepreture_Update 0070                    ??_SSD_Toggle 0071  
                       ___fladd 0D78                         ___fldiv 09B8                         ___awdiv 1262  
               _SSD_BLINK_STATE 004E                         ___awmod 0802                         ___flmul 004B  
                       ___flsub 1DF4                         ___fltol 15EC                         ___lldiv 12C9  
                  ??_WH_CL_Init 00A0                     _Temperature 0050                    ??_TMR_Update 003A  
                  ??i1___xxtofl 0074                         __ptext1 1F7D                         __ptext2 1C5E  
                       __ptext3 1BFD                         __ptext4 1D39                         __ptext5 070D  
                       __ptext6 1744                         __ptext7 15EC                         __ptext8 1DF4  
                       __ptext9 0D78             ??_Tmepreture_Update 007E           __size_of_COOL_turn_on 0009  
                   _Timer_Start 1D39                 ??_I2C_Wait_idle 0070                      ??___xxtofl 00A4  
              ___awmod@dividend 0072             i1___bmul@multiplier 0072                    ??_WH_Disable 0070  
      __size_of_I2C_Master_init 0036                         clrloop0 1C21         __size_of_Update_OS_Mode 0028  
                       _voltage 01B1            end_of_initialization 0047              __end_of_SSD_SetSSD 1DD0  
            __end_of_SSD_Toggle 1D0E                   ??_EEPROM_Read 0073                    ?_WH_turn_off 0070  
            __end_of_WH_CL_Init 1C67             __size_of_Timer_init 0006       __end_of_Tmepreture_Update 102F  
                    ?_I2C_Start 0070                      ?_I2C_Write 0070           LED_Update@Led_counter 0199  
             ?_SSD_Dispaly_NULL 0070                 ___lldiv@divisor 00A0              __end_of_TMR_Update 1F01  
            __end_ofi1___xxtofl 1744                 ___lldiv@counter 00AD              ??_SSD_Dispaly_NULL 0070  
          __size_ofi1__Umul8_16 0027                    _average_flag 004B                    _COOL_turn_on 1C43  
                  _average_temp 01A9           __end_of_COOL_turn_off 1C0A              __end_of_WH_Disable 1DF4  
         i1__Umul8_16@word_mpld 0076              SW_Update@SW_UPDATE 004D                    ??_Led_Toggle 0070  
                     Led_on@Led 0072                    ??_WH_turn_on 0070                     ___fladd@grs 00B3  
                     _SSD_STATE 004F                 ??_Check_WH_mode 0076                   ___xxtofl@sign 00A8  
                     _SSD_Blink 1C28               __size_of_ADC_INIT 0011                       i1___fldiv 0B95  
             __size_of_I2C_Read 0017                       i1___flmul 03AC                     ___fldiv@grs 00DC  
                     i1___fltol 14E9                     ___fldiv@rem 00D5                       i1___lldiv 11FC  
                 ??_DISP_Update 007D               __size_of_I2C_Stop 0009               __size_of_ADC_Read 0048  
                   ___flmul@grs 00BD                       _WH_Update 1072              __end_of_Led_Toggle 1CC2  
                   SSD_OUT@Data 0079              __end_of_WH_turn_on 1C55                  __end_of_Led_on 1DB1  
           __end_of_EEPROM_Read 11FC            _get_temp_after_reset 1CD3                       _SW_Update 085B  
                __end_of___bmul 07FE               __size_of_SDD_Init 000A               ?_Temp_ten_average 0070  
                 ?_SSD_SetState 0070              ??_Temp_ten_average 0020         ??_Update_Global_counter 0074  
             __size_ofi1___bmul 0015             start_initialization 0015                      ?_SSD_Blink 0070  
                    ?i1___fldiv 0070                      ?i1___flmul 0020                    _Current_Temp 0056  
                    ?i1___fltol 002D                       _Init_flag 0042                      ?i1___lldiv 0070  
             SSD_SetState@state 0070            __size_of_WH_Set_temp 0040               __size_of_Get_temp 0072  
             __size_of_Led_init 0009               ??_I2C_Master_init 00B2      __size_of_Tmepreture_Update 002D  
           __end_of_DISP_Update 1477                     ??_I2C_Start 0070                     ??_I2C_Write 0070  
                    ?_WH_Update 0070                        ??_Led_on 0070           ?_get_temp_after_reset 0070  
                      ??___bmul 00A1            __size_of_SW_GetState 0010                      init_fetch0 1CE6  
                    ?_SW_Update 0070                       __Umul8_16 1E67                     __pdataBANK0 0052  
                   __pdataBANK3 01CD                    ??_Timer_init 00A0                  ??_SSD_SetState 0070  
     __size_of_Timer_update_reg 00DA                       ___fladd@a 00A4                       ___fladd@b 00A0  
                     ___fldiv@a 00C8                       ___fldiv@b 00CC                       ___flmul@a 00B2  
                     ___flmul@b 00AE                       ___flsub@a 00E2                       ___flsub@b 00E6  
                     ___latbits 0002                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
                 __pcstackBANK3 01BD             WH_Update@WH_Counter 019D               __size_of___xxtofl 00BC  
                _Update_OS_Mode 1E3F                        ?_SSD_OUT 0078                 i1___xxtofl@sign 0078  
                      ?_OS_init 0070                        ?_SW_Init 0070                        ?_Led_Off 0070  
             i1___fldiv@new_exp 0025                     _EEPROM_Read 119C              __end_of_Timer_init 1C03  
          __size_of_WH_turn_off 0007        i1__Umul8_16@multiplicand 0070                        ?___fladd 00A0  
                      ?___fldiv 00C8                        ?___awdiv 0070                        ?___awmod 0070  
                      ?___flmul 00AE                        ?___flsub 00E2                        ?___fltol 00EA  
                      ?___lldiv 00A0                      ?__Umul8_16 00A0                    ?_Timer_Start 0070  
                  SW_Init@index 00A3                        _ADC_INIT 1CC2                        _I2C_Read 1D66  
                      _I2C_Stop 1C3A                        _ADC_Read 10B6          __size_of_DISP_Elements 0056  
        __end_of_Update_OS_Mode 1E67                     ??_SSD_Blink 0071                        _ADC_read 0046  
                   ADC_Read@ret 0073                     ??i1___fldiv 0078                     ??i1___flmul 0028  
                   ??i1___fltol 0031                     ??i1___lldiv 0078                     _DISP_Update 1408  
             interrupt_function 0004                       clear_ram0 1C20                     ??_WH_Update 0076  
         i1___bmul@multiplicand 0070          ??_get_temp_after_reset 0076         __size_of_WH_Turn_On_Off 006A  
                      _SDD_Init 1C70                   Led_Toggle@Led 0071                     ??_SW_Update 0073  
                      i1___bmul 1D0E       __size_of_SSD_Dispaly_NULL 0004                 ?_Update_OS_Mode 0070  
         __end_of_I2C_Wait_idle 1C91                      SSD_OUT@ssd 0078                        _Get_temp 1477  
                      _Led_init 1C55                __size_of_SSD_OUT 0017                        _SWs_Info 0190  
          __end_of_SSD_SetState 1C20                __size_of_OS_init 0041                __size_of_SW_Init 0048  
              __size_of_Led_Off 001A                   ??i1__Umul8_16 0072                   _DISP_Elements 1146  
                 I2C_Write@Data 0070                     ??__Umul8_16 00A2                __size_of___fladd 0288  
              __size_of___fldiv 01DD                __size_of___awdiv 0067                __size_of___awmod 0059  
              __size_of___flmul 0361                __size_of___flsub 0024                __size_of___fltol 009E  
              __size_of___lldiv 0068                _Timer_update_reg 070D                        ___xxtofl 1744  
               _I2C_Master_init 1E90  __size_of_Update_Global_counter 0043   __end_of_Update_Global_counter 1072  
         __end_of_Check_WH_mode 15EC                        __ptext10 004B                        __ptext11 1E67  
                      __ptext20 1EC6                        __ptext12 09B8                        __ptext21 1072  
                      __ptext13 10FE                        __ptext30 119C                        __ptext22 1331  
                      __ptext14 07E7                        __ptext31 1CA1                        __ptext23 1C4C  
                      __ptext15 1C70                        __ptext40 102F                        __ptext32 1C3A  
                      __ptext24 1C43                        __ptext16 1C55                        __ptext41 1C91  
                      __ptext33 1C31                        __ptext25 1F3D                        __ptext17 1E90  
                      __ptext50 0B95                        __ptext42 1002                        __ptext34 1D66  
                      __ptext26 1D23                        __ptext18 12C9                        __ptext51 10B6  
                      __ptext43 139B                        __ptext35 1C84                        __ptext27 1F01  
                      __ptext19 1CC2                        __ptext60 1C28                        __ptext52 085B  
                      __ptext44 11FC                        __ptext36 1DD0                        __ptext28 1565  
                      __ptext61 1CF9                        __ptext53 1D0E                        __ptext45 1477  
                      __ptext37 1C0A                        __ptext29 1CD3                        __ptext62 1C18  
                      __ptext54 1FBE                        __ptext46 168A                        __ptext38 1C03  
                      __ptext63 1146                        __ptext55 1D97                        __ptext47 14E9  
                      __ptext39 1E3F                        __ptext64 0802                        __ptext56 1CB1  
                      __ptext48 03AC                        __ptext65 1262                        __ptext57 1D7D  
                      __ptext49 1E18                        __ptext66 1D4F                        __ptext58 1408  
                      __ptext67 1DB1                        __ptext59 1BF9       __size_of_Temp_ten_average 006D  
                 ?_EEPROM_Write 0071          __size_of_COOL_turn_off 0007                   __size_of_main 0009  
                ?_DISP_Elements 0070                        _set_temp 0057         DISP_Update@DISP_Counter 01B9  
           __end_ofi1__Umul8_16 1E3F                DISP_Elements@var 007C                    _temp_average 004C  
                    _LED_Update 1FBE                   ??_WH_Set_temp 0074            __size_of_Timer_Start 0016  
             _WH_Save_Last_Temp 1D23                        init_ram0 1CEA             I2C_Master_init@baud 00AE  
                ??_EEPROM_Write 0074              ?_WH_Save_Last_Temp 0070                        intlevel1 0000  
        i1__Umul8_16@multiplier 0078                    ?_EEPROM_Read 0071                ___lldiv@dividend 00A4  
           ??_WH_Save_Last_Temp 0076                  _WH_Turn_On_Off 1331                   ??_SW_GetState 0073  
                 _COOL_turn_off 1C03         __end_of_I2C_Master_init 1EC6                      Led_Off@Led 0072  
        __Umul8_16@multiplicand 00A0                _SSD_Dispaly_NULL 1BF9       __end_of_WH_Save_Last_Temp 1D39  
              ___lldiv@quotient 00A9                EEPROM_Read@ADDRH 0075                EEPROM_Read@ADDRL 0073  
         __size_of_SSD_SetState 0008                    ?_DISP_Update 0070                   ___fladd@signs 00B0  
           __end_of_WH_Set_temp 1F7D                   ??_WH_turn_off 0070                 ??_DISP_Elements 007A  
        __end_of_WH_Turn_On_Off 139B                    ___fladd@aexp 00B1                    ___fladd@bexp 00B2  
               EEPROM_Read@Data 0074            __Umul8_16@multiplier 00A8                     i1__Umul8_16 1E18  
                EEPROM_Read@add 0071               __Umul8_16@product 00A4  
